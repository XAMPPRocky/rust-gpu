(function() {var implementors = {};
implementors["ab_glyph_rasterizer"] = [{"text":"impl RefUnwindSafe for Point","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rasterizer","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; RefUnwindSafe for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; RefUnwindSafe for FindIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; RefUnwindSafe for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; RefUnwindSafe for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; RefUnwindSafe for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Searcher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchKind","synthetic":true,"types":[]}];
implementors["andrew"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Endian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sides","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontConfig","synthetic":true,"types":[]}];
implementors["ansi_term"] = [{"text":"impl RefUnwindSafe for Prefix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Infix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Suffix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; RefUnwindSafe for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; RefUnwindSafe for ANSIGenericStrings&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colour","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; RefUnwindSafe for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; RefUnwindSafe for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; RefUnwindSafe for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; RefUnwindSafe for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; RefUnwindSafe for Drain&lt;'a, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ash"] = [{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for EntryCustom&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LoadingError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Align&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for AlignIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCacheCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CullModeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryPropertyFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHeapFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferUsageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageUsageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorComponentFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryControlFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryResultFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferUsageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageAspectFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageFormatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMemoryBindFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineStageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolResetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferResetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleCountFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescriptionFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DependencyFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreWaitFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompositeAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceTransformFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainImageUsageFlagsANDROID","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReportFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryHandleTypeFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryFeatureFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubgroupFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsLayoutUsageFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectStateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalSemaphoreHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalSemaphoreFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreImportFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalFenceHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalFenceFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceImportFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCounterFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PeerMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryAllocateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupPresentModeFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescriptionFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessageSeverityFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessageTypeFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorBindingFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionalRenderingFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolveModeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryInstanceFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuildAccelerationStructureFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceDiagnosticsConfigFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreationFeedbackFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterDescriptionFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireProfilingLockFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderCorePropertiesFlagsAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModuleCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCompilerControlFlagsAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolPurposeFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDepthStencilStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDynamicStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineMultisampleStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineTessellationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineInputAssemblyStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineVertexInputStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferViewCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryMapFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolResetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplaySurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViSurfaceCreateFlagsNN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32SurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlibSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcbSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetalSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImagePipeSurfaceCreateFlagsFUCHSIA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StreamDescriptorSurfaceCreateFlagsGGP","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeadlessSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolTrimFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportSwizzleStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDiscardRectangleStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageToColorStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageModulationStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageReductionStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCacheCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCallbackDataFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationConservativeStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateStreamCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationDepthClipStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceMemory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pipeline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Framebuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCache","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsLayoutNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrConversion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCacheEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceConfigurationINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeferredOperationKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReportCallbackEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseOutStructure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseInStructure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Offset2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Offset3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Extent2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Extent3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ViewportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Rect2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClearRectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComponentMapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ComponentMappingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExtensionPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayerProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for LayerPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ApplicationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AllocationCallbacksBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceQueueCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InstanceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueueFamilyPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageMemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryTypeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHeap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryHeapBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MappedMemoryRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WriteDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CopyDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSubresourceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSubresourceLayersBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSubresourceRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubresourceLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseBufferMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageOpaqueMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageBlitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderModuleCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetLayoutBindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorPoolSizeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SpecializationMapEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SpecializationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineShaderStageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ComputePipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexInputBindingDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexInputAttributeDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineVertexInputStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineInputAssemblyStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineTessellationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineMultisampleStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineColorBlendAttachmentStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineColorBlendStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineDynamicStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOpState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StencilOpStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineDepthStencilStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GraphicsPipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCacheCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PushConstantRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferInheritanceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClearDepthStencilValueBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearAttachment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClearAttachmentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDependencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EventCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSparsePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceLimitsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueryPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrawIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrawIndexedIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DispatchIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlanePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayModeParametersKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayModePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayModeCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlaneCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplaySurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AndroidSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ViSurfaceCreateInfoNNBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WaylandSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Win32SurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XlibSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XcbSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImagePipeSurfaceCreateInfoFUCHSIA","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImagePipeSurfaceCreateInfoFUCHSIABuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StreamDescriptorSurfaceCreateInfoGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StreamDescriptorSurfaceCreateInfoGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceFormatKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReportCallbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugReportCallbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationFlagsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValidationFlagsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValidationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateRasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationStateRasterizationOrderAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMarkerObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugMarkerObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMarkerObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugMarkerObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMarkerMarkerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugMarkerMarkerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DedicatedAllocationImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DedicatedAllocationImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DedicatedAllocationBufferCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DedicatedAllocationBufferCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DedicatedAllocationMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DedicatedAllocationMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalImageFormatPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalImageFormatPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalMemoryImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32KeyedMutexAcquireReleaseInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Win32KeyedMutexAcquireReleaseInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDeviceGeneratedCommandsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDeviceGeneratedCommandsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GraphicsShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsPipelineShaderGroupsCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GraphicsPipelineShaderGroupsCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindShaderGroupIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindShaderGroupIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindIndexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindIndexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindVertexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindVertexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetStateFlagsIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SetStateFlagsIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsStreamNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndirectCommandsStreamNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsLayoutTokenNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndirectCommandsLayoutTokenNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsLayoutCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndirectCommandsLayoutCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneratedCommandsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeneratedCommandsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneratedCommandsMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeneratedCommandsMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFeatures2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFeatures2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueueFamilyProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMemoryProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSparseImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSparseImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePushDescriptorPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConformanceVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ConformanceVersionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDriverProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDriverPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentRegionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RectLayerKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVariablePointersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVariablePointersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalImageFormatInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalImageFormatInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalBufferProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalBufferPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceIDProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceIDPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalMemoryImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryBufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalMemoryBufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportMemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportMemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryWin32HandlePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryWin32HandlePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportMemoryFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportMemoryFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryFdPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryFdPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32KeyedMutexAcquireReleaseInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Win32KeyedMutexAcquireReleaseInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalSemaphoreInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalSemaphoreInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportSemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportSemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D3D12FenceSubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for D3D12FenceSubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportSemaphoreFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportSemaphoreFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalFenceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalFenceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalFenceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalFencePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportFenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportFenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FenceGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportFenceFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportFenceFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FenceGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMultiviewFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMultiviewFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMultiviewProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMultiviewPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassMultiviewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassMultiviewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilities2EXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceCapabilities2EXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPowerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPowerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainCounterCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SwapchainCounterCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceGroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceGroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryAllocateFlagsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryAllocateFlagsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindBufferMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindBufferMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindBufferMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindBufferMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindImageMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindImageMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindImageMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindImageMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupRenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupRenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupCommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupCommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupBindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupBindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupPresentCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupPresentCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindImageMemorySwapchainInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindImageMemorySwapchainInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireNextImageInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AcquireNextImageInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupDeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupDeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorUpdateTemplateEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorUpdateTemplateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XYColorEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XYColorEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HdrMetadataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for HdrMetadataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayNativeHdrSurfaceCapabilitiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayNativeHdrSurfaceCapabilitiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainDisplayNativeHdrCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SwapchainDisplayNativeHdrCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefreshCycleDurationGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RefreshCycleDurationGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PastPresentationTimingGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PastPresentationTimingGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentTimesInfoGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentTimesInfoGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentTimeGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentTimeGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MacOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetalSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MetalSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportWScalingNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ViewportWScalingNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportWScalingStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportWScalingStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportSwizzleNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ViewportSwizzleNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportSwizzleStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportSwizzleStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDiscardRectanglePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDiscardRectanglePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDiscardRectangleStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineDiscardRectangleStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputAttachmentAspectReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InputAttachmentAspectReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassInputAttachmentAspectCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassInputAttachmentAspectCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSurfaceInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSurfaceInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFormat2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceFormat2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlaneProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayModeProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlaneInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlaneCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharedPresentSurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SharedPresentSurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice16BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevice16BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSubgroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderSubgroupExtendedTypesFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderSubgroupExtendedTypesFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSparseMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSparseMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageMemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePointClippingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePointClippingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryDedicatedRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryDedicatedRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryDedicatedAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryDedicatedAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageViewUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineTessellationDomainOriginStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineTessellationDomainOriginStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrConversionInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerYcbcrConversionInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrConversionCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerYcbcrConversionCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindImagePlaneMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindImagePlaneMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImagePlaneMemoryRequirementsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImagePlaneMemoryRequirementsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSamplerYcbcrConversionFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSamplerYcbcrConversionFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrConversionImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerYcbcrConversionImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureLODGatherFormatPropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextureLODGatherFormatPropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionalRenderingBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ConditionalRenderingBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtectedSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ProtectedSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProtectedMemoryFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceProtectedMemoryFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProtectedMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceProtectedMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceQueueInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageToColorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCoverageToColorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSamplerFilterMinmaxProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSamplerFilterMinmaxPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleLocationEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SampleLocationEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleLocationsInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SampleLocationsInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassSampleLocationsBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassSampleLocationsBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineSampleLocationsStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineSampleLocationsStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSampleLocationsPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSampleLocationsPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultisamplePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MultisamplePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerReductionModeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerReductionModeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBlendOperationAdvancedFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceBlendOperationAdvancedFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBlendOperationAdvancedPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceBlendOperationAdvancedPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendAdvancedStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineColorBlendAdvancedStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceInlineUniformBlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceInlineUniformBlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceInlineUniformBlockPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceInlineUniformBlockPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteDescriptorSetInlineUniformBlockEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WriteDescriptorSetInlineUniformBlockEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolInlineUniformBlockCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorPoolInlineUniformBlockCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageModulationStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCoverageModulationStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormatListCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageFormatListCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModuleValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderModuleValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMaintenance3Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMaintenance3PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderDrawParametersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderDrawParametersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderFloat16Int8Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderFloat16Int8FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFloatControlsProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFloatControlsPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceHostQueryResetFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceHostQueryResetFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeBufferUsage2ANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NativeBufferUsage2ANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeBufferANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NativeBufferANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainImageCreateInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SwapchainImageCreateInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePresentationPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePresentationPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderResourceUsageAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderResourceUsageAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStatisticsInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderStatisticsInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueGlobalPriorityCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceQueueGlobalPriorityCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsLabelEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsMessengerCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsMessengerCallbackDataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportMemoryHostPointerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportMemoryHostPointerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHostPointerPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryHostPointerPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalMemoryHostPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalMemoryHostPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceConservativeRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceConservativeRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CalibratedTimestampInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CalibratedTimestampInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderCorePropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderCorePropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderCoreProperties2AMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderCoreProperties2AMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationConservativeStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationConservativeStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDescriptorIndexingFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDescriptorIndexingFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDescriptorIndexingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDescriptorIndexingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutBindingFlagsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetLayoutBindingFlagsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetVariableDescriptorCountAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetVariableDescriptorCountAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetVariableDescriptorCountLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetVariableDescriptorCountLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentReference2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentReference2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDependency2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDependency2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassCreateInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassCreateInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassEndInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassEndInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTimelineSemaphoreFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTimelineSemaphoreFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTimelineSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTimelineSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreTypeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreTypeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimelineSemaphoreSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TimelineSemaphoreSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreWaitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreWaitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreSignalInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreSignalInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputBindingDivisorDescriptionEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexInputBindingDivisorDescriptionEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineVertexInputDivisorStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineVertexInputDivisorStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVertexAttributeDivisorPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVertexAttributeDivisorPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePCIBusInfoPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePCIBusInfoPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidHardwareBufferUsageANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AndroidHardwareBufferUsageANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidHardwareBufferPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AndroidHardwareBufferPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryGetAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryGetAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidHardwareBufferFormatPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AndroidHardwareBufferFormatPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferInheritanceConditionalRenderingInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferInheritanceConditionalRenderingInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalFormatANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalFormatANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice8BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevice8BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceConditionalRenderingFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceConditionalRenderingFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkanMemoryModelFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkanMemoryModelFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderAtomicInt64Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderAtomicInt64FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVertexAttributeDivisorFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVertexAttributeDivisorFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyCheckpointPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueueFamilyCheckpointPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckpointDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CheckpointDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDepthStencilResolveProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDepthStencilResolvePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescriptionDepthStencilResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDescriptionDepthStencilResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewASTCDecodeModeEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageViewASTCDecodeModeEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceASTCDecodeFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceASTCDecodeFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTransformFeedbackFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTransformFeedbackFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTransformFeedbackPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTransformFeedbackPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateStreamCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationStateStreamCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceRepresentativeFragmentTestFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceRepresentativeFragmentTestFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRepresentativeFragmentTestStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRepresentativeFragmentTestStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExclusiveScissorFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExclusiveScissorFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportExclusiveScissorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportExclusiveScissorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCornerSampledImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCornerSampledImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceComputeShaderDerivativesFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceComputeShaderDerivativesFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFragmentShaderBarycentricFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFragmentShaderBarycentricFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderImageFootprintFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderImageFootprintFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShadingRatePaletteNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShadingRatePaletteNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportShadingRateImageStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportShadingRateImageStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShadingRateImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShadingRateImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShadingRateImagePropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShadingRateImagePropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoarseSampleLocationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CoarseSampleLocationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoarseSampleOrderCustomNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CoarseSampleOrderCustomNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportCoarseSampleOrderStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportCoarseSampleOrderStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMeshShaderFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMeshShaderFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMeshShaderPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMeshShaderPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawMeshTasksIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrawMeshTasksIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingShaderGroupCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingShaderGroupCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingPipelineCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingPipelineCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingPipelineCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingPipelineCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryTrianglesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeometryTrianglesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryAABBNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeometryAABBNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeometryDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeometryNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindAccelerationStructureMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindAccelerationStructureMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteDescriptorSetAccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WriteDescriptorSetAccelerationStructureKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureMemoryRequirementsInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureMemoryRequirementsInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceRayTracingFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceRayTracingFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceRayTracingPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceRayTracingPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceRayTracingPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceRayTracingPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StridedBufferRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StridedBufferRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceRaysIndirectCommandKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TraceRaysIndirectCommandKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrmFormatModifierPropertiesListEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrmFormatModifierPropertiesListEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImageDrmFormatModifierInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceImageDrmFormatModifierInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDrmFormatModifierListCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageDrmFormatModifierListCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDrmFormatModifierExplicitCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageDrmFormatModifierExplicitCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageDrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageStencilUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageStencilUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceMemoryOverallocationCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceMemoryOverallocationCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFragmentDensityMapFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFragmentDensityMapFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFragmentDensityMapPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFragmentDensityMapPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassFragmentDensityMapCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassFragmentDensityMapCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceScalarBlockLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceScalarBlockLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceProtectedCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceProtectedCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceUniformBufferStandardLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceUniformBufferStandardLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDepthClipEnableFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDepthClipEnableFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationDepthClipStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationDepthClipStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryBudgetPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMemoryBudgetPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryPriorityFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMemoryPriorityFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryPriorityAllocateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryPriorityAllocateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBufferDeviceAddressFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferDeviceAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferOpaqueCaptureAddressCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferOpaqueCaptureAddressCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDeviceAddressCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferDeviceAddressCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImageViewImageFormatInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceImageViewImageFormatInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterCubicImageViewImageFormatPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FilterCubicImageViewImageFormatPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImagelessFramebufferFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceImagelessFramebufferFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferAttachmentsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferAttachmentsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferAttachmentImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferAttachmentImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassAttachmentBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassAttachmentBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCooperativeMatrixFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCooperativeMatrixFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceYcbcrImageArraysFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceYcbcrImageArraysFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewHandleInfoNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageViewHandleInfoNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentFrameTokenGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentFrameTokenGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreationFeedbackEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCreationFeedbackEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreationFeedbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCreationFeedbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceFullScreenExclusiveInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFullScreenExclusiveWin32InfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceFullScreenExclusiveWin32InfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilitiesFullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceCapabilitiesFullScreenExclusiveEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePerformanceQueryFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePerformanceQueryFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePerformanceQueryPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePerformanceQueryPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceCounterKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterDescriptionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceCounterDescriptionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolPerformanceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueryPoolPerformanceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireProfilingLockInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AcquireProfilingLockInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceQuerySubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceQuerySubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeadlessSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for HeadlessSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCoverageReductionModeFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCoverageReductionModeFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageReductionStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCoverageReductionStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferMixedSamplesCombinationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferMixedSamplesCombinationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderIntegerFunctions2FeaturesINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceValueINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceValueINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializePerformanceApiInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InitializePerformanceApiInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolPerformanceQueryCreateInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueryPoolPerformanceQueryCreateInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceStreamMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceStreamMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceOverrideInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceOverrideInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceConfigurationAcquireInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceConfigurationAcquireInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderClockFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderClockFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceIndexTypeUint8FeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceIndexTypeUint8FeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderSMBuiltinsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderSMBuiltinsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderSMBuiltinsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderSMBuiltinsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFragmentShaderInterlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFragmentShaderInterlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSeparateDepthStencilLayoutsFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSeparateDepthStencilLayoutsFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentReferenceStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentReferenceStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescriptionStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentDescriptionStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePipelineExecutablePropertiesFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutablePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineExecutablePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineExecutableInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableStatisticKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineExecutableStatisticKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableInternalRepresentationKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineExecutableInternalRepresentationKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTexelBufferAlignmentFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTexelBufferAlignmentFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTexelBufferAlignmentPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTexelBufferAlignmentPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSubgroupSizeControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSubgroupSizeControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSubgroupSizeControlPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSubgroupSizeControlPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryOpaqueCaptureAddressAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryOpaqueCaptureAddressAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceMemoryOpaqueCaptureAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceMemoryOpaqueCaptureAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceLineRasterizationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceLineRasterizationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceLineRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceLineRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationLineStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationLineStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePipelineCreationCacheControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePipelineCreationCacheControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkan11Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkan11FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkan11Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkan11PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkan12Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkan12FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkan12Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkan12PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCompilerControlCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCompilerControlCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCoherentMemoryFeaturesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCoherentMemoryFeaturesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceToolPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceToolPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryTrianglesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureGeometryTrianglesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryAabbsDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureGeometryAabbsDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryInstancesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureGeometryInstancesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureGeometryKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureBuildGeometryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureBuildGeometryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureBuildOffsetInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureBuildOffsetInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureCreateGeometryTypeInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureCreateGeometryTypeInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AabbPositionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AabbPositionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransformMatrixKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureInstanceKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureDeviceAddressInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureDeviceAddressInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureVersionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureVersionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CopyAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyAccelerationStructureToMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CopyAccelerationStructureToMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyMemoryToAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CopyMemoryToAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingPipelineInterfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingPipelineInterfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeferredOperationInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeferredOperationInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLibraryCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineLibraryCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassTransformBeginInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassTransformBeginInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferInheritanceRenderPassTransformInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferInheritanceRenderPassTransformInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDiagnosticsConfigFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDiagnosticsConfigFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceDiagnosticsConfigCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceDiagnosticsConfigCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageTiling","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorderColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineBindPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCacheHeaderVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharingMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerMipmapMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompareOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalAllocationType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SystemAllocationScope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructureType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Result","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentModeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorSpaceKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeDomainEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReportObjectTypeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCheckEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationFeatureEnableEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationFeatureDisableEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsTokenTypeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPowerStateEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceEventTypeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayEventTypeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportCoordinateSwizzleNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiscardRectangleModeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PointClippingBehavior","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerReductionMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TessellationDomainOrigin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrModelConversion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChromaLocation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOverlapEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoverageModulationModeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoverageReductionModeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCacheHeaderVersionEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderInfoTypeAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueGlobalPriorityEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConservativeRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VendorId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DriverId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShadingRatePaletteEntryNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoarseSampleOrderTypeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyAccelerationStructureModeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureMemoryRequirementsTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureBuildTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingShaderGroupTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryOverallocationBehaviorAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScopeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComponentTypeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterScopeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterUnitKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterStorageKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceConfigurationTypeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolSamplingModeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceOverrideTypeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceParameterTypeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceValueTypeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderFloatControlsIndependence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableStatisticFormatKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LineRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSwapchainFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDisplayFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDisplaySwapchainFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrXlibSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrXcbSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrWaylandSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMirSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrAndroidSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrWin32SurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidNativeBufferFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDebugReportFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvGlslShaderFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDepthRangeUnrestrictedFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSamplerMirrorClampToEdgeFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgFilterCubicFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension17Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension18Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdRasterizationOrderFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension20Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderTrinaryMinmaxFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderExplicitVertexParameterFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDebugMarkerFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension24Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension25Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdGcnShaderFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDedicatedAllocationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension28Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtTransformFeedbackFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxExtension30Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxImageViewHandleFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension33Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdDrawIndirectCountFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension35Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdNegativeViewportHeightFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdGpuShaderHalfFloatFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderBallotFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension39Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension40Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension41Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdTextureGatherBiasLodFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderInfoFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension44Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension45Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension46Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderImageLoadStoreLodFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxExtension48Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension49Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GgpStreamDescriptorSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvCornerSampledImageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension52Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension53Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMultiviewFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgFormatPvrtcFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExternalMemoryCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExternalMemoryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExternalMemoryWin32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvWin32KeyedMutexFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrGetPhysicalDeviceProperties2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDeviceGroupFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtValidationFlagsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NnViSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderDrawParametersFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderSubgroupBallotFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderSubgroupVoteFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtTextureCompressionAstcHdrFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtAstcDecodeModeFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgExtension69Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMaintenance1Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDeviceGroupCreationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalMemoryCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalMemoryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalMemoryWin32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalMemoryFdFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrWin32KeyedMutexFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalSemaphoreCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalSemaphoreFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalSemaphoreWin32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalSemaphoreFdFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrPushDescriptorFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtConditionalRenderingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderFloat16Int8Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Khr16bitStorageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrIncrementalPresentFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDescriptorUpdateTemplateFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxDeviceGeneratedCommandsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvClipSpaceWScalingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDirectModeDisplayFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtAcquireXlibDisplayFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDisplaySurfaceCounterFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDisplayControlFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleDisplayTimingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvSampleMaskOverrideCoverageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvGeometryShaderPassthroughFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvViewportArray2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxMultiviewPerViewAttributesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvViewportSwizzleFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDiscardRectanglesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension101Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtConservativeRasterizationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDepthClipEnableFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension104Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSwapchainColorspaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtHdrMetadataFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgExtension107Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgExtension108Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrImagelessFramebufferFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrCreateRenderpass2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgExtension111Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSharedPresentableImageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalFenceCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalFenceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalFenceWin32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalFenceFdFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrPerformanceQueryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMaintenance2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension119Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrGetSurfaceCapabilities2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrVariablePointersFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrGetDisplayProperties2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MvkIosSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MvkMacosSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MvkMoltenvkFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExternalMemoryDmaBufFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtQueueFamilyForeignFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDedicatedAllocationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDebugUtilsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidExternalMemoryAndroidHardwareBufferFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSamplerFilterMinmaxFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrStorageBufferStorageClassFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdGpuShaderInt16Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension134Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension135Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension136Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdMixedAttachmentSamplesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderFragmentMaskFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtInlineUniformBlockFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension140Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderStencilExportFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension142Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension143Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSampleLocationsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrRelaxedBlockLayoutFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrGetMemoryRequirements2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrImageFormatListFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtBlendOperationAdvancedFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvFragmentCoverageToColorFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrRayTracingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension152Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvFramebufferMixedSamplesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvFillRectangleFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvShaderSmBuiltinsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtPostDepthCoverageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSamplerYcbcrConversionFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrBindMemory2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtImageDrmFormatModifierFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension160Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtValidationCacheFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDescriptorIndexingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderViewportIndexLayerFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension164Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvShadingRateImageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvRayTracingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvRepresentativeFragmentTestFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension168Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMaintenance3Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDrawIndirectCountFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtFilterCubicFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension172Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension173Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension174Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtGlobalPriorityFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderSubgroupExtendedTypesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension177Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Khr8bitStorageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExternalMemoryHostFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdBufferMarkerFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderAtomicInt64Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderClockFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension183Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdPipelineCompilerControlFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtCalibratedTimestampsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderCorePropertiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension187Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension188Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension189Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdMemoryOverallocationBehaviorFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtVertexAttributeDivisorFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GgpFrameTokenFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtPipelineCreationFeedbackFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension194Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension195Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension196Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDriverPropertiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderFloatControlsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvShaderSubgroupPartitionedFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDepthStencilResolveFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSwapchainMutableFormatFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvComputeShaderDerivativesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvMeshShaderFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvFragmentShaderBarycentricFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvShaderImageFootprintFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvScissorExclusiveFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDeviceDiagnosticCheckpointsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrTimelineSemaphoreFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension209Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelShaderIntegerFunctions2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelPerformanceQueryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrVulkanMemoryModelFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtPciBusInfoFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdDisplayNativeHdrFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FuchsiaImagepipeSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension216Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension217Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtMetalSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtFragmentDensityMapFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension220Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension221Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtScalarBlockLayoutFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension223Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleHlslFunctionality1Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleDecorateStringFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSubgroupSizeControlFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension227Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderCoreProperties2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension229Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdDeviceCoherentMemoryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension231Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension232Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension233Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension234Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension235Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension236Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSpirv14Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtMemoryBudgetFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtMemoryPriorityFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSurfaceProtectedCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDedicatedAllocationImageAliasingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSeparateDepthStencilLayoutsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension243Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MesaExtension244Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtBufferDeviceAddressFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtToolingInfoFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSeparateStencilUsageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtValidationFeaturesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension249Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvCooperativeMatrixFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvCoverageReductionModeFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtFragmentShaderInterlockFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtYcbcrImageArraysFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrUniformBufferStandardLayoutFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension255Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtFullScreenExclusiveFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtHeadlessSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrBufferDeviceAddressFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension259Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtLineRasterizationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension261Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtHostQueryResetFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GgpExtension263Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BrcmExtension264Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BrcmExtension265Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtIndexTypeUint8Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension267Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension268Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDeferredHostOperationsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrPipelineExecutablePropertiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension271Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension272Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension273Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension274Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension275Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension276Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderDemoteToHelperInvocationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDeviceGeneratedCommandsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension279Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension280Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArmExtension281Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtTexelBufferAlignmentFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomRenderPassTransformFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension284Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension285Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension286Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxExtension287Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxExtension288Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension289Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleUserTypeFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrPipelineLibraryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension292Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension293Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderNonSemanticInfoFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension295Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension296Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension297Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtPipelineCreationCacheControlFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension299Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension300Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDeviceDiagnosticsConfigFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension302Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension303Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension304Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension305Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension306Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension307Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension308Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension309Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension310Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension311Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension312Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension313Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension314Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension315Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension316Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension317Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension318Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension319Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension320Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension321Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension322Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension323Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StaticFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryFnV1_0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceFnV1_0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceFnV1_0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryFnV1_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceFnV1_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceFnV1_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryFnV1_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceFnV1_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceFnV1_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearColorValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterResultKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceValueDataINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableStatisticValueKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceOrHostAddressKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceOrHostAddressConstKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryDataKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSqShaderStageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaDeviceClockModeAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaPerfBlockAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSampleTypeAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSessionAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSessionCreateInfoAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaPerfBlockPropertiesAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceGpaFeaturesAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceGpaPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceGpaPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaPerfCounterAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSampleBeginInfoAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaDeviceClockModeInfoAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdGpaInterfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceWaveLimitPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceWaveLimitPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageCreateInfoWaveLimitAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMarker","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtils","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetalSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplaySwapchain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndirectCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryFd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Swapchain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimelineSemaphore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32Surface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcbSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlibSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOSSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacOSSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MeshShader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracing","synthetic":true,"types":[]}];
implementors["bimap"] = [{"text":"impl&lt;L, R&gt; RefUnwindSafe for Overwritten&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !RefUnwindSafe for BiBTreeMap&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !RefUnwindSafe for IntoIter&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !RefUnwindSafe for Iter&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !RefUnwindSafe for LeftValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !RefUnwindSafe for RightValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !RefUnwindSafe for LeftRange&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !RefUnwindSafe for RightRange&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R, LS&nbsp;=&nbsp;RandomState, RS&nbsp;=&nbsp;RandomState&gt; !RefUnwindSafe for BiHashMap&lt;L, R, LS, RS&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !RefUnwindSafe for IntoIter&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !RefUnwindSafe for Iter&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !RefUnwindSafe for LeftValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !RefUnwindSafe for RightValues&lt;'a, L, R&gt;","synthetic":true,"types":[]}];
implementors["bit_set"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for BitSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Iter&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Union&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Intersection&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Difference&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for SymmetricDifference&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["bit_vec"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for BitVec&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Iter&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for IntoIter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Blocks&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl RefUnwindSafe for BigEndian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LittleEndian","synthetic":true,"types":[]}];
implementors["calloop"] = [{"text":"impl&lt;Data&gt; !RefUnwindSafe for EventLoop&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for InsertError&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Data&gt; !RefUnwindSafe for LoopHandle&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LoopSignal","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for Source&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Idle","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for Generic&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for Event&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for EventedFd&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventedRawFd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TimerHandle&lt;T&gt;","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;Tz&gt; RefUnwindSafe for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; RefUnwindSafe for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseMonthError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecondsFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RoundingError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Weekday","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Month","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedOffset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NaiveDate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsoWeek","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NaiveTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parsed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalNumeric","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Numeric","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArgSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for BoxAllocation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VecAllocation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VecEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryReadyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TrySelectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Injector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Stealer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for Atomic&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T:&nbsp;?Sized, P&gt; RefUnwindSafe for CompareAndSetError&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T:&nbsp;?Sized&gt; RefUnwindSafe for Shared&lt;'g, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Collector","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LocalHandle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Guard","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Backoff","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Parker","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; !RefUnwindSafe for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; RefUnwindSafe for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["dlib"] = [{"text":"impl RefUnwindSafe for DlError","synthetic":true,"types":[]}];
implementors["example_runner"] = [{"text":"impl !RefUnwindSafe for ExampleBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Options","synthetic":true,"types":[]}];
implementors["filetime"] = [{"text":"impl RefUnwindSafe for FileTime","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl&lt;S&gt; RefUnwindSafe for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LocalPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LocalSpawner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Enter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl RefUnwindSafe for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;F&gt; RefUnwindSafe for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; RefUnwindSafe for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; RefUnwindSafe for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for Remote&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for Shared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; RefUnwindSafe for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; RefUnwindSafe for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; RefUnwindSafe for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; RefUnwindSafe for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; RefUnwindSafe for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; RefUnwindSafe for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; RefUnwindSafe for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; RefUnwindSafe for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; RefUnwindSafe for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; RefUnwindSafe for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; RefUnwindSafe for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; RefUnwindSafe for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; RefUnwindSafe for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; RefUnwindSafe for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; RefUnwindSafe for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for Abortable&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AbortHandle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AbortRegistration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; RefUnwindSafe for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; RefUnwindSafe for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; RefUnwindSafe for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; RefUnwindSafe for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; RefUnwindSafe for Next&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; RefUnwindSafe for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; RefUnwindSafe for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; RefUnwindSafe for SelectNextSome&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; RefUnwindSafe for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; RefUnwindSafe for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; RefUnwindSafe for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for BufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for Buffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !RefUnwindSafe for ForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; !RefUnwindSafe for ReuniteError&lt;T, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; !RefUnwindSafe for SplitSink&lt;S, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for SplitStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; RefUnwindSafe for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; RefUnwindSafe for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; RefUnwindSafe for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; RefUnwindSafe for TryNext&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; RefUnwindSafe for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for TryBufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !RefUnwindSafe for TryForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; RefUnwindSafe for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; RefUnwindSafe for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for FuturesOrdered&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for FuturesUnordered&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !RefUnwindSafe for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !RefUnwindSafe for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !RefUnwindSafe for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !RefUnwindSafe for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; RefUnwindSafe for Close&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; RefUnwindSafe for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; RefUnwindSafe for Flush&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; RefUnwindSafe for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; RefUnwindSafe for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; RefUnwindSafe for Send&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; RefUnwindSafe for SendAll&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; RefUnwindSafe for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; RefUnwindSafe for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; RefUnwindSafe for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for Close&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; RefUnwindSafe for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; RefUnwindSafe for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for FillBuf&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for Flush&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; RefUnwindSafe for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for Read&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadVectored&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadExact&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadLine&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadToEnd&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadToString&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadUntil&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; RefUnwindSafe for Seek&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for Write&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for WriteVectored&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for WriteAll&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, U&gt; !RefUnwindSafe for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl RefUnwindSafe for FxHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FxHasher64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FxHasher32","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl RefUnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backend","synthetic":true,"types":[]}];
implementors["gfx_backend_vulkan"] = [{"text":"impl RefUnwindSafe for VK_ENTRY","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawInstance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceCreationFeatures","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMessenger","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backend","synthetic":true,"types":[]}];
implementors["gfx_descriptor"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorCounts","synthetic":true,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl RefUnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Limits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsupportedBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryTypeId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Gpu&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for IndexBufferView&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearDepthStencil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for CommandBufferInheritanceInfo&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentClear","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceLost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceLost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowInUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutOfMemory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OomOrDeviceLost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitFor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Aspects","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatBits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Swizzle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFeature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferFeature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R5g6b5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B5g6r5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R5g5b5a1Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B5g5r5a1Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A1r5g5b5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B10g11r11Ufloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for E5b9g9r9Ufloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for X8D24Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for S8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D16UnormS8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D24UnormS8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D32SfloatS8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc1RgbUnorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc1RgbSrgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc1RgbaUnorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc1RgbaSrgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc2Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc2Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc3Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc3Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc4Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc5Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc6hUfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc6hSfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc7Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc7Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8a1Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8a1Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8a8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8a8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EacR11Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EacR11Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EacR11g11Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EacR11g11Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc4x4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc4x4Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc5x4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc5x4Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc5x5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc5x5Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc6x5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc6x5Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc6x6Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc6x6Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x5Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x6Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x6Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x5Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x6Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x6Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x10Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x10Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc12x10Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc12x10Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc12x12Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc12x12Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Component","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChannelType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewCapabilities","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PackedColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Subresource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceLayers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceFootprint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tiling","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayerError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CubeFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WrapMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dependencies","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Requirements","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Barrier&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentOps","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attachment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDesc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Subpass&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for ComputePipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorRangeDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, WI&gt; RefUnwindSafe for DescriptorSetWrite&lt;'a, B, WI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;WI: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for DescriptorSetCopy&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BakedStates","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for GraphicsPipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthBias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rasterizer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Multisampling","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttributeDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputAssemblerDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorBlendDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthTest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilFace","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilTest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Face","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationConstant","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Specialization&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineStage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for EntryPoint&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreationFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDescriptorFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Descriptor&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::BufferView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for PrimitiveAssemblerDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Primitive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comparison","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Factor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; RefUnwindSafe for BasePipeline&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Query&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueryPool: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResultFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineStatistic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl&lt;Ic, Iw, Is&gt; RefUnwindSafe for Submission&lt;Ic, Iw, Is&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ic: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Is: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Iw: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for QueueGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilities","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompositeAlphaMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Suboptimal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitError","synthetic":true,"types":[]}];
implementors["gfx_memory"] = [{"text":"impl RefUnwindSafe for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DedicatedBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for GeneralAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for GeneralBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneralConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for LinearAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for LinearBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Heaps&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for MemoryBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for MappedRange&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, B&gt; RefUnwindSafe for Writer&lt;'a, 'b, T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeapsError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryUsage","synthetic":true,"types":[]}];
implementors["inplace_it"] = [{"text":"impl&lt;'a, T&gt; RefUnwindSafe for UninitializedSliceMemoryGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for SliceMemoryGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl RefUnwindSafe for IoVec","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl RefUnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; RefUnwindSafe for Symbol&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Symbol&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; RefUnwindSafe for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; RefUnwindSafe for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; RefUnwindSafe for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; RefUnwindSafe for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Octant","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetLoggerError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelFilter","synthetic":true,"types":[]}];
implementors["matchers"] = [{"text":"impl&lt;S, A&gt; RefUnwindSafe for Pattern&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, A&gt; RefUnwindSafe for Matcher&lt;'a, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl RefUnwindSafe for MmapOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mmap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MmapMut","synthetic":true,"types":[]}];
implementors["minifb"] = [{"text":"impl !RefUnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixMenu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Menu","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MenuItem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scale","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyRepeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CursorStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaleMode","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl !RefUnwindSafe for Poll","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SetReadiness","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ready","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Events","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixReady","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpListener","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_extras"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for SendError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for TrySendError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timeout","synthetic":true,"types":[]}];
implementors["naga"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructMember","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalVariable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LocalVariable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FallThrough","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StorageClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuiltIn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VectorSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScalarKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArraySize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemberOrigin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDimension","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeInner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstantInner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnaryOperator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinaryOperator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntrinsicFunction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DerivativeAxis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionOrigin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expression","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statement","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindTarget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindSource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Options&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Writer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriterFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplingFlags","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Parser&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ParseError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Token&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Error&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Typifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnexpectedConstantTypeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Validator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolveError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationError","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl !RefUnwindSafe for TcpBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UdpBuilder","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; RefUnwindSafe for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Errno","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SealFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FdFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FallocateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlockArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MsFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MntFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FdFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MqAttr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollFd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenptyResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForkptyResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PtyMaster","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CloneFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LioOpcode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LioMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EfdFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MsFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MmapAdvise","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Options","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dqblk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuotaType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuotaFmt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RebootMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FdSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SaFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigmaskHow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigHandler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigevNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SfdFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalFd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinkAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AlgAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VsockAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MsgFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixCredentials","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InetAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockProtocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shutdown","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReuseAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReusePort","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Linger","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpAddMembership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpDropMembership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendTimeout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Broadcast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OobInline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeepAlive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PeerCredentials","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RcvBuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SndBuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RcvBufForce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SndBufForce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcceptConn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OriginalDst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpTransparent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mark","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PassCred","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpCongestion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statfs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FsType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FsFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statvfs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SysInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Termios","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LocalFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaudRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlushArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeVal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IoVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UtsName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Inotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for User","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FchownatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Whence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinkatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathconfVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SysconfVar","synthetic":true,"types":[]}];
implementors["nom"] = [{"text":"impl RefUnwindSafe for CompareResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Needed","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for Err&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for VerboseError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VerboseErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;I, E, F&gt; RefUnwindSafe for ParserIterator&lt;I, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Endianness","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; RefUnwindSafe for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl RefUnwindSafe for ParseFloatError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloatErrorKind","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;RefUnwindSafe + UnwindSafe&gt; RefUnwindSafe for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, F:&nbsp;RefUnwindSafe&gt; RefUnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnceCell&lt;T&gt;: RefUnwindSafe,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, F:&nbsp;RefUnwindSafe&gt; RefUnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnceCell&lt;T&gt;: RefUnwindSafe,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["owned_ttf_parser"] = [{"text":"impl RefUnwindSafe for OwnedFont","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl RefUnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawFairMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawThreadId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl RefUnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinWait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl RefUnwindSafe for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !RefUnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntoIter","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl RefUnwindSafe for Diagnostic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpanRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl RefUnwindSafe for Bernoulli","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Open01","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenClosed01","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binomial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cauchy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dirichlet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Beta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChiSquared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FisherF","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StudentT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StandardNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pareto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Poisson","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Triangular","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnitCircle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; RefUnwindSafe for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Standard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntropyRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadRng","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; RefUnwindSafe for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; RefUnwindSafe for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl RefUnwindSafe for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; RefUnwindSafe for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; RefUnwindSafe for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["raw_string"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Utf8Chunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Utf8ChunksIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawString","synthetic":true,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for Chain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Chunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Cloned&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Copied&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Enumerate&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; RefUnwindSafe for Filter&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; RefUnwindSafe for FilterMap&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for FlatMap&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for FlatMapIter&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Flatten&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for FlattenIter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, ID, F&gt; RefUnwindSafe for Fold&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; RefUnwindSafe for FoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for Inspect&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; RefUnwindSafe for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; RefUnwindSafe for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as ParallelIterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for MaxLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for MinLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for Map&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, INIT, F&gt; RefUnwindSafe for MapInit&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T, F&gt; RefUnwindSafe for MapWith&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for MultiZip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for PanicFuse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; RefUnwindSafe for IterBridge&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; RefUnwindSafe for Positions&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for RepeatN&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Rev&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Skip&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; RefUnwindSafe for Split&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Take&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, ID, F&gt; RefUnwindSafe for TryFold&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; RefUnwindSafe for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for Zip&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for ZipEq&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for StepBy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; RefUnwindSafe for Iter&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; RefUnwindSafe for Chunks&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; RefUnwindSafe for ChunksExact&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; RefUnwindSafe for Windows&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; RefUnwindSafe for IterMut&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; RefUnwindSafe for ChunksMut&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; RefUnwindSafe for ChunksExactMut&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; RefUnwindSafe for Split&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; RefUnwindSafe for SplitMut&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; RefUnwindSafe for Chars&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; RefUnwindSafe for CharIndices&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; RefUnwindSafe for Bytes&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; RefUnwindSafe for EncodeUtf16&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; RefUnwindSafe for Split&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; RefUnwindSafe for SplitTerminator&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; RefUnwindSafe for Lines&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; RefUnwindSafe for SplitWhitespace&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; RefUnwindSafe for Matches&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; RefUnwindSafe for MatchIndices&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Drain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; RefUnwindSafe for Drain&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rayon_core"] = [{"text":"impl !RefUnwindSafe for ThreadBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; !RefUnwindSafe for Scope&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; !RefUnwindSafe for ScopeFifo&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThreadPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThreadPoolBuildError","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;DefaultSpawn&gt; !RefUnwindSafe for ThreadPoolBuilder&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Configuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FnContext","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl RefUnwindSafe for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RegexSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetMatches","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; RefUnwindSafe for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; RefUnwindSafe for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; RefUnwindSafe for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; RefUnwindSafe for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RegexSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetMatches","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["regex_automata"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; RefUnwindSafe for Regex&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for DenseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for SparseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for Premultiplied&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for PremultipliedByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl !RefUnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParserBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WithComments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Alternation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Concat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassPerl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassAscii","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassBracketed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Assertion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Repetition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaptureName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlagsItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LiteralKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssertionKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Printer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaseFoldError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hir","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Repetition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HirKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WordBoundary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Printer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Translator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utf8Range","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utf8Sequences","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utf8Sequence","synthetic":true,"types":[]}];
implementors["rspirv"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Decoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'd&gt; !RefUnwindSafe for Parser&lt;'c, 'd&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Action","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instruction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Loader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InsertPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Operand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoreInstructionTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlslStd450InstructionTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenCLStd100InstructionTable","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExtendedInstruction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Instruction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicalOperand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OperandKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OperandQuantifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LiftContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OperandError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstructionError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConversionError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructMember","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Decoration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extension","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtInstImport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtInst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecutionMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionParameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionEnd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecutionModeId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Branch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Terminator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Op","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Jump","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Token&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Storage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl RefUnwindSafe for Curve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Codepoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; RefUnwindSafe for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for LayoutIter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl RefUnwindSafe for Handle","synthetic":true,"types":[]}];
implementors["scoped_tls"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for ScopedKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl RefUnwindSafe for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; RefUnwindSafe for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; RefUnwindSafe for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; RefUnwindSafe for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; RefUnwindSafe for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; RefUnwindSafe for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; RefUnwindSafe for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; RefUnwindSafe for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; RefUnwindSafe for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Number","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharEscape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Serializer","synthetic":true,"types":[]}];
implementors["sharded_slab"] = [{"text":"impl RefUnwindSafe for DefaultConfig","synthetic":true,"types":[]},{"text":"impl&lt;T, C&nbsp;=&nbsp;DefaultConfig&gt; !RefUnwindSafe for Pool&lt;T, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&gt; !RefUnwindSafe for PoolGuard&lt;'a, T, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, C&nbsp;=&nbsp;DefaultConfig&gt; !RefUnwindSafe for Slab&lt;T, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&nbsp;=&nbsp;DefaultConfig&gt; !RefUnwindSafe for Guard&lt;'a, T, C&gt;","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl !RefUnwindSafe for Environment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Shell","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataDevice","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataOffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadPipe","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RMLVO","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputMgr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThemeManager","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThemedPointer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AutoThemer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AutoPointer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MemPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BasicFrame","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FrameRequest","synthetic":true,"types":[]}];
implementors["spirv_builder"] = [{"text":"impl RefUnwindSafe for SpirvBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpirvBuilderError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryModel","synthetic":true,"types":[]}];
implementors["spirv_headers"] = [{"text":"impl RefUnwindSafe for ImageOperands","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FPFastMathMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectionControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoopControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemorySemantics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryAccess","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KernelProfilingInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SourceLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecutionModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressingModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecutionMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StorageClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dim","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerAddressingMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerFilterMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageChannelOrder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageChannelDataType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FPRoundingMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinkageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessQualifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionParameterAttribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Decoration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuiltIn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KernelEnqueueFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayQueryIntersection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayQueryCommittedIntersectionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayQueryCandidateIntersectionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Op","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CLOp","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; RefUnwindSafe for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; RefUnwindSafe for FontNameIter&lt;'a, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlatformId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeEid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacEid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacLang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl RefUnwindSafe for StrSimError","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprInPlace","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprVerbatim","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitVerbatim","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeVerbatim","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloatSuffix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntSuffix","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BareFnArgName","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for As","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Existential","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for For","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for If","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for In","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for While","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for And","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for At","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for IntoIter&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !RefUnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]}];
implementors["tar"] = [{"text":"impl&lt;R&gt; !RefUnwindSafe for Archive&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !RefUnwindSafe for Entries&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Builder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !RefUnwindSafe for Entry&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GnuExtSparseHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GnuHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GnuSparseHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OldHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UstarHeader","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; RefUnwindSafe for PaxExtension&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; RefUnwindSafe for PaxExtensions&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unpacked","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderMode","synthetic":true,"types":[]}];
implementors["tempfile"] = [{"text":"impl RefUnwindSafe for TempDir","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamedTempFile","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PathPersistError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PersistError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TempPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpooledTempFile","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for Builder&lt;'a, 'b&gt;","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl RefUnwindSafe for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoHyphenation","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; RefUnwindSafe for WrapIter&lt;'w, 'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl RefUnwindSafe for Duration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timespec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreciseTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SteadyTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]}];
implementors["topological_sort"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for TopologicalSort&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for DependencyLink&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl !RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for WithDispatch&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Instrumented&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Entered&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl !RefUnwindSafe for Dispatch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DefaultGuard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Current","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Interest","synthetic":true,"types":[]}];
implementors["tracing_log"] = [{"text":"impl RefUnwindSafe for LogTracer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceLogger","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]}];
implementors["tracing_serde"] = [{"text":"impl !RefUnwindSafe for SerializeField","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SerializeFieldSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SerializeLevel&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SerializeId&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SerializeMetadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SerializeEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SerializeAttributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SerializeRecord&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for SerdeMapVisitor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as SerializeMap&gt;::Error: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for SerdeStructVisitor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as SerializeStruct&gt;::Error: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for SerializeFieldMap&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing_subscriber"] = [{"text":"impl RefUnwindSafe for EnvFilter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Registry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CurrentSpan","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for Alt&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, V&gt; RefUnwindSafe for Delimited&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, V&gt; RefUnwindSafe for VisitDelimited&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for Messages&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Directive","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BadName","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FromEnvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, N&gt; RefUnwindSafe for FmtContext&lt;'a, S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for FormattedFields&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, N, E, W&gt; RefUnwindSafe for Layer&lt;S, N, E, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TestWriter","synthetic":true,"types":[]},{"text":"impl&lt;N&nbsp;=&nbsp;DefaultFields, E&nbsp;=&nbsp;Format&lt;Full, SystemTime&gt;, F&nbsp;=&nbsp;LevelFilter, W&nbsp;=&nbsp;fn() -&gt; Stdout&gt; !RefUnwindSafe for Subscriber&lt;N, E, F, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N&nbsp;=&nbsp;DefaultFields, E&nbsp;=&nbsp;Format&lt;Full, SystemTime&gt;, F&nbsp;=&nbsp;LevelFilter, W&nbsp;=&nbsp;fn() -&gt; Stdout&gt; !RefUnwindSafe for SubscriberBuilder&lt;N, E, F, W&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Json","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonFields","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for JsonVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for FieldFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; !RefUnwindSafe for FieldFnVisitor&lt;'a, F&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Compact","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Full","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; RefUnwindSafe for Format&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultFields","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for DefaultVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FmtSpan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SystemTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uptime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChronoUtc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChronoLocal","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BoxMakeWriter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for Context&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, I, S&gt; RefUnwindSafe for Layered&lt;L, I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Identity","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; RefUnwindSafe for Scope&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;L as LookupSpan&lt;'a&gt;&gt;::Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Extensions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExtensionsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Data&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; RefUnwindSafe for SpanRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as LookupSpan&lt;'a&gt;&gt;::Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; RefUnwindSafe for Parents&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; RefUnwindSafe for FromRoot&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as LookupSpan&lt;'a&gt;&gt;::Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, S&gt; RefUnwindSafe for Layer&lt;L, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, S&gt; RefUnwindSafe for Handle&lt;L, S&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TryInitError","synthetic":true,"types":[]}];
implementors["ttf_parser"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for VariationAxes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VariationAxis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Names&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScriptMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LineMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RasterGlyphImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlatformId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Weight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Width","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RasterImageFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TableName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Subtable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Subtables&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValueOffset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Machine&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["typed_arena"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for Arena&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; RefUnwindSafe for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for VacantEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for OccupiedEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Iter&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for IterMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Keys&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Values&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for ValuesMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Drain&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Entry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["void"] = [{"text":"impl RefUnwindSafe for Void","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl RefUnwindSafe for DirEntry","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WalkDir","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; RefUnwindSafe for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl !RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtocolError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EventQueue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for QueueToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for NewProxy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !RefUnwindSafe for Proxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AnonymousObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CursorTheme","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for CursorImageBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WlEglSurface","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for BlockingMsgIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDisplay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlRegistry","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlCompositor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlShmPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlShm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDataOffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDataSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDataDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DndAction","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlShell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Resize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transient","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlShellSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlSeat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlPointer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Axis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AxisSource","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlKeyboard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeymapFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlTouch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Subpixel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlSubsurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for ThreadGuard&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for DispatchData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for Filter&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; RefUnwindSafe for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; RefUnwindSafe for ObjectMap&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedSocket","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UserData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UserDataMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArgumentType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Argument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageWriteError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageParseError","synthetic":true,"types":[]}];
implementors["wayland_cursor"] = [{"text":"impl !RefUnwindSafe for CursorTheme","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Cursor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CursorImageBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameAndDuration","synthetic":true,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl !RefUnwindSafe for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentPurpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreeditStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextDirection","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentHint","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChangeCause","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentPurpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgShell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgPopup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GtkPrimarySelectionDeviceManager","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GtkPrimarySelectionDevice","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GtkPrimarySelectionOffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GtkPrimarySelectionSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CancelReason","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WpPresentation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgWmBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgPositioner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgToplevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgPopup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WpViewporter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WpViewport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl RefUnwindSafe for wl_message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_interface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_list","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_array","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_argument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_proxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_event_queue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_listener","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_signal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_client","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_event_loop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_event_source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_global","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_resource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_shm_buffer","synthetic":true,"types":[]}];
implementors["wgpu"] = [{"text":"impl !RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Adapter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BufferSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TextureView","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SwapChain","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BindGroupLayout","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BindGroup","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PipelineLayout","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderPipeline","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ComputePipeline","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CommandEncoder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ComputePass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderBundleEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderBundle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for Operations&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPassColorAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPassDepthStencilAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderBundleDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextureDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for RenderPassDescriptor&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SwapChainTexture","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SwapChainFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferAsyncError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BufferView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BufferViewMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Maintain","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for LoadOp&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapChainError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapMode","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StagingBelt","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferInitDescriptor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl RefUnwindSafe for BindingTypeMaxCountError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for BindGroupLayout&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for PipelineLayout&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BufferBinding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindGroupDynamicBindingData","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for BindGroup&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CreateBindGroupError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindingZone","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindingTypeMaxCountErrorKind","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CreatePipelineLayoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushConstantUploadError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderBundleEncoder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderBundle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ComputePass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputePassDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for PassChannel&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ColorAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPassDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for CommandBuffer&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; RefUnwindSafe for BasePassRef&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandAllocatorError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateRenderBundleError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderBundleError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ComputePassError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderCommandError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StoreOp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderPassError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TransferError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CopyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandEncoderError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UsageConflict","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Device&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidDevice","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; RefUnwindSafe for ImplicitPipelineIds&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HostMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateDeviceError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityManager","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; RefUnwindSafe for Storage&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Token&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityManagerFactory","synthetic":true,"types":[]},{"text":"impl&lt;T, I, F&gt; !RefUnwindSafe for Registry&lt;T, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, F&gt; !RefUnwindSafe for Hub&lt;B, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for Hubs&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; !RefUnwindSafe for Global&lt;G&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Root","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Id&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidAdapter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; RefUnwindSafe for AdapterInputs&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestAdapterError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for ShaderModule&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for ComputePipeline&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineFlags","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for RenderPipeline&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateShaderModuleError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ImplicitLayoutError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CreateComputePipelineError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CreateRenderPipelineError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMapOperation","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Buffer&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Texture&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for TextureView&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Sampler&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMapAsyncStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferAccessError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureDimensionError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateTextureError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateTextureViewError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureViewDestroyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateSamplerError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for SwapChain&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SwapChainOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidSwapChain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapChainError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateSwapChainError","synthetic":true,"types":[]}];
implementors["wgpu_subscriber"] = [{"text":"impl !RefUnwindSafe for ChromeTracingLayer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FmtLayer","synthetic":true,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl RefUnwindSafe for BackendBit","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for RequestAdapterOptions&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Limits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorStateDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RasterizationStateDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorWrite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilStateFaceDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexAttributeDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for BufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for CommandEncoderDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapChainDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Origin3d","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent3d","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for TextureDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for CommandBufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for RenderBundleDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureDataLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindGroupLayoutEntry","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for BufferCopyView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TextureCopyView&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PowerPreference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureViewDimension","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CullMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompareFunction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputStepMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapChainStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureDimension","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureAspect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureComponentType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindingType","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl&lt;P&gt; RefUnwindSafe for LogicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for PhysicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for LogicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for PhysicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Size","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotSupportedError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OsError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyboardInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Event&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StartCause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WindowEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TouchPhase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Force","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ElementState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for EventLoop&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for EventLoopWindowTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for EventLoopProxy&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for EventLoopClosed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlFlow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Icon","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BadIcon","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VideoMode","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MonitorHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XNotSupported","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowId","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WindowBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CursorIcon","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Fullscreen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Theme","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]}];
implementors["x11"] = [{"text":"impl RefUnwindSafe for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcmsColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbBounds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControls","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMods","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOutline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbSection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XAnyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XButtonEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XColormapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XErrorEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGravityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMappingEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMotionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XReparentEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScreenFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XArc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XChar2b","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCharStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XClassHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XComposeStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtCodes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGCValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XHostAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIconSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyboardState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XmbTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XrmValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSizeHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XStandardColormap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextItem16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XwcTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWindowChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWMHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XICCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AspectRatio","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientMessageData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFns","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMTextString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XDisplay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XOC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XOM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorComment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorComments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorImages","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFont","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftCharSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFontSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcCharSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcEndian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFontInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftDraw","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFeedbackState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInputClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIModifierState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIValuatorState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEventMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIRawEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _AtomRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuScanline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRPanning","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XCircle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XFilters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIndexValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XLineFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XPointDouble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XPointFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XSpanFix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTrap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTriangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTransform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _TranslationData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _WidgetRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XtWidgetGeometry","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl RefUnwindSafe for OpenError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xlib","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcmsColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbBounds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControls","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMods","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOutline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbSection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XAnyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XButtonEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XColormapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XErrorEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGravityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMappingEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMotionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XReparentEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScreenFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XArc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XChar2b","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCharStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XClassHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XComposeStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtCodes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGCValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XHostAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIconSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyboardState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XmbTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XrmValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSizeHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XStandardColormap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextItem16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XwcTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWindowChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWMHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XICCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AspectRatio","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientMessageData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFns","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMTextString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XDisplay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XOC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XOM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Glx","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xcursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorComment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorComments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorImages","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xft","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFont","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftCharSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFontSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcCharSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcEndian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFontInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftDraw","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xlib","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFeedbackState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInputClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInput2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIModifierState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIValuatorState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEventMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIRawEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xmu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _AtomRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuScanline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xrender","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XCircle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XFilters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIndexValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XLineFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XPointDouble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XPointFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XSpanFix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTrap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTriangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTransform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xss","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _TranslationData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _WidgetRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xlib_xcb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xrandr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRPanning","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xrandr_2_2_0","synthetic":true,"types":[]}];
implementors["xattr"] = [{"text":"impl RefUnwindSafe for UnsupportedPlatformError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XAttrs","synthetic":true,"types":[]}];
implementors["xcursor"] = [{"text":"impl RefUnwindSafe for CursorTheme","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl RefUnwindSafe for BaseDirectories","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileFindIterator","synthetic":true,"types":[]}];
implementors["xkb"] = [{"text":"impl RefUnwindSafe for Keycode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayoutIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayoutMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LedIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LedMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Keysym","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Keymap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Include&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Log&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Mods&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Layouts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Leds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Serialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Update&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Mods&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Layouts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Leds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Consumed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Components","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Table","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Result","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]}];
implementors["xkbcommon_sys"] = [{"text":"impl RefUnwindSafe for xkb_rule_names","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xkb_compose_format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xkb_compose_status","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xkb_compose_feed_result","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xkb_keymap_format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xkb_log_level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xkb_key_direction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xkb_consumed_mode","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl RefUnwindSafe for ParserConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextPosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XmlVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Namespace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for EventReader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for Events&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XmlEvent","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()