(function() {var implementors = {};
implementors["ab_glyph_rasterizer"] = [{"text":"impl UnwindSafe for Point","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rasterizer","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; UnwindSafe for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; UnwindSafe for FindIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; UnwindSafe for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; UnwindSafe for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; UnwindSafe for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Searcher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchKind","synthetic":true,"types":[]}];
implementors["andrew"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Endian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sides","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontConfig","synthetic":true,"types":[]}];
implementors["ansi_term"] = [{"text":"impl UnwindSafe for Prefix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Infix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Suffix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; UnwindSafe for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; UnwindSafe for ANSIGenericStrings&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Colour","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; UnwindSafe for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; UnwindSafe for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; UnwindSafe for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; UnwindSafe for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; UnwindSafe for Drain&lt;'a, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ash"] = [{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for EntryCustom&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LoadingError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Align&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for AlignIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCacheCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CullModeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryPropertyFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHeapFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferUsageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageUsageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorComponentFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryControlFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryResultFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferUsageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageAspectFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageFormatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMemoryBindFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineStageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolResetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferResetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SampleCountFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescriptionFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DependencyFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreWaitFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompositeAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceTransformFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainImageUsageFlagsANDROID","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReportFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryHandleTypeFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryFeatureFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubgroupFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsLayoutUsageFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectStateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalSemaphoreHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalSemaphoreFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreImportFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalFenceHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalFenceFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceImportFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCounterFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PeerMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAllocateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupPresentModeFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescriptionFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessageSeverityFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessageTypeFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorBindingFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConditionalRenderingFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolveModeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryInstanceFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuildAccelerationStructureFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceDiagnosticsConfigFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreationFeedbackFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterDescriptionFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireProfilingLockFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderCorePropertiesFlagsAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModuleCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCompilerControlFlagsAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolPurposeFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDepthStencilStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDynamicStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineMultisampleStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineTessellationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineInputAssemblyStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineVertexInputStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferViewCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryMapFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolResetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplaySurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViSurfaceCreateFlagsNN","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32SurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XlibSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcbSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetalSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImagePipeSurfaceCreateFlagsFUCHSIA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamDescriptorSurfaceCreateFlagsGGP","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeadlessSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolTrimFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportSwizzleStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDiscardRectangleStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageToColorStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageModulationStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageReductionStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCacheCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCallbackDataFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationConservativeStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateStreamCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationDepthClipStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pipeline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Framebuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCache","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsLayoutNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrConversion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCacheEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceConfigurationINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeferredOperationKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReportCallbackEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseOutStructure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseInStructure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Offset2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Offset2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Offset3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Offset3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Extent2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Extent3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ViewportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Rect2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClearRectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComponentMapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ComponentMappingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExtensionPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayerProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for LayerPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ApplicationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AllocationCallbacksBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceQueueCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InstanceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueueFamilyPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageMemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryTypeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHeap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryHeapBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MappedMemoryRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WriteDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CopyDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSubresourceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSubresourceLayersBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSubresourceRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubresourceLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseBufferMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageOpaqueMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageBlitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderModuleCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetLayoutBindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorPoolSizeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SpecializationMapEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SpecializationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineShaderStageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ComputePipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexInputBindingDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexInputAttributeDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineVertexInputStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineInputAssemblyStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineTessellationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineMultisampleStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineColorBlendAttachmentStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineColorBlendStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineDynamicStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOpState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StencilOpStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineDepthStencilStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GraphicsPipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCacheCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PushConstantRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferInheritanceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClearDepthStencilValueBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearAttachment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClearAttachmentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDependencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for EventCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSparsePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceLimitsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueryPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrawIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrawIndexedIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DispatchIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlanePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayModeParametersKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayModePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayModeCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlaneCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplaySurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AndroidSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ViSurfaceCreateInfoNNBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WaylandSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Win32SurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XlibSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XcbSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImagePipeSurfaceCreateInfoFUCHSIA","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImagePipeSurfaceCreateInfoFUCHSIABuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamDescriptorSurfaceCreateInfoGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StreamDescriptorSurfaceCreateInfoGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceFormatKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReportCallbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugReportCallbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationFlagsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ValidationFlagsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ValidationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateRasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationStateRasterizationOrderAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMarkerObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugMarkerObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMarkerObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugMarkerObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMarkerMarkerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugMarkerMarkerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DedicatedAllocationImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DedicatedAllocationImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DedicatedAllocationBufferCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DedicatedAllocationBufferCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DedicatedAllocationMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DedicatedAllocationMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalImageFormatPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalImageFormatPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalMemoryImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32KeyedMutexAcquireReleaseInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Win32KeyedMutexAcquireReleaseInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDeviceGeneratedCommandsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDeviceGeneratedCommandsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GraphicsShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsPipelineShaderGroupsCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GraphicsPipelineShaderGroupsCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindShaderGroupIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindShaderGroupIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindIndexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindIndexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindVertexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindVertexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetStateFlagsIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SetStateFlagsIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsStreamNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndirectCommandsStreamNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsLayoutTokenNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndirectCommandsLayoutTokenNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsLayoutCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndirectCommandsLayoutCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeneratedCommandsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeneratedCommandsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeneratedCommandsMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeneratedCommandsMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFeatures2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFeatures2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueueFamilyProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMemoryProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSparseImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSparseImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePushDescriptorPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConformanceVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ConformanceVersionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDriverProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDriverPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentRegionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RectLayerKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVariablePointersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVariablePointersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalImageFormatInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalImageFormatInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalBufferProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalBufferPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceIDProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceIDPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalMemoryImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryBufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalMemoryBufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportMemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportMemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryWin32HandlePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryWin32HandlePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportMemoryFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportMemoryFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryFdPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryFdPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32KeyedMutexAcquireReleaseInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Win32KeyedMutexAcquireReleaseInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalSemaphoreInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalSemaphoreInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportSemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportSemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D3D12FenceSubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for D3D12FenceSubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportSemaphoreFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportSemaphoreFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalFenceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalFenceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalFenceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalFencePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportFenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportFenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FenceGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportFenceFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportFenceFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FenceGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMultiviewFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMultiviewFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMultiviewProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMultiviewPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassMultiviewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassMultiviewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilities2EXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceCapabilities2EXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPowerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPowerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainCounterCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SwapchainCounterCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceGroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceGroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAllocateFlagsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryAllocateFlagsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindBufferMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindBufferMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindBufferMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindBufferMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindImageMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindImageMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindImageMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindImageMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupRenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupRenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupCommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupCommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupBindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupBindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupPresentCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupPresentCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindImageMemorySwapchainInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindImageMemorySwapchainInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireNextImageInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AcquireNextImageInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupDeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupDeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorUpdateTemplateEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorUpdateTemplateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XYColorEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XYColorEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HdrMetadataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for HdrMetadataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayNativeHdrSurfaceCapabilitiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayNativeHdrSurfaceCapabilitiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainDisplayNativeHdrCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SwapchainDisplayNativeHdrCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefreshCycleDurationGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RefreshCycleDurationGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PastPresentationTimingGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PastPresentationTimingGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentTimesInfoGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentTimesInfoGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentTimeGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentTimeGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MacOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetalSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MetalSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportWScalingNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ViewportWScalingNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportWScalingStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportWScalingStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportSwizzleNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ViewportSwizzleNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportSwizzleStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportSwizzleStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDiscardRectanglePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDiscardRectanglePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDiscardRectangleStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineDiscardRectangleStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputAttachmentAspectReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InputAttachmentAspectReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassInputAttachmentAspectCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassInputAttachmentAspectCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSurfaceInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSurfaceInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFormat2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceFormat2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlaneProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayModeProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlaneInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlaneCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SharedPresentSurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SharedPresentSurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice16BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevice16BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSubgroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderSubgroupExtendedTypesFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderSubgroupExtendedTypesFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSparseMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSparseMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageMemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePointClippingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePointClippingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryDedicatedRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryDedicatedRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryDedicatedAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryDedicatedAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageViewUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineTessellationDomainOriginStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineTessellationDomainOriginStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrConversionInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerYcbcrConversionInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrConversionCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerYcbcrConversionCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindImagePlaneMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindImagePlaneMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImagePlaneMemoryRequirementsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImagePlaneMemoryRequirementsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSamplerYcbcrConversionFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSamplerYcbcrConversionFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrConversionImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerYcbcrConversionImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureLODGatherFormatPropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureLODGatherFormatPropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConditionalRenderingBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ConditionalRenderingBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtectedSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ProtectedSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProtectedMemoryFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceProtectedMemoryFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProtectedMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceProtectedMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceQueueInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageToColorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCoverageToColorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSamplerFilterMinmaxProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSamplerFilterMinmaxPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SampleLocationEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SampleLocationEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SampleLocationsInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SampleLocationsInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassSampleLocationsBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassSampleLocationsBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineSampleLocationsStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineSampleLocationsStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSampleLocationsPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSampleLocationsPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MultisamplePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MultisamplePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerReductionModeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerReductionModeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBlendOperationAdvancedFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceBlendOperationAdvancedFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBlendOperationAdvancedPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceBlendOperationAdvancedPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendAdvancedStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineColorBlendAdvancedStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceInlineUniformBlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceInlineUniformBlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceInlineUniformBlockPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceInlineUniformBlockPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteDescriptorSetInlineUniformBlockEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WriteDescriptorSetInlineUniformBlockEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolInlineUniformBlockCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorPoolInlineUniformBlockCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageModulationStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCoverageModulationStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormatListCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageFormatListCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModuleValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderModuleValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMaintenance3Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMaintenance3PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderDrawParametersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderDrawParametersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderFloat16Int8Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderFloat16Int8FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFloatControlsProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFloatControlsPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceHostQueryResetFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceHostQueryResetFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NativeBufferUsage2ANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for NativeBufferUsage2ANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NativeBufferANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for NativeBufferANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainImageCreateInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SwapchainImageCreateInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePresentationPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePresentationPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderResourceUsageAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderResourceUsageAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStatisticsInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderStatisticsInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueGlobalPriorityCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceQueueGlobalPriorityCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsLabelEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsMessengerCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsMessengerCallbackDataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportMemoryHostPointerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportMemoryHostPointerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHostPointerPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryHostPointerPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalMemoryHostPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalMemoryHostPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceConservativeRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceConservativeRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CalibratedTimestampInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CalibratedTimestampInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderCorePropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderCorePropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderCoreProperties2AMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderCoreProperties2AMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationConservativeStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationConservativeStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDescriptorIndexingFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDescriptorIndexingFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDescriptorIndexingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDescriptorIndexingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutBindingFlagsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetLayoutBindingFlagsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetVariableDescriptorCountAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetVariableDescriptorCountAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetVariableDescriptorCountLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetVariableDescriptorCountLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentReference2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentReference2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDependency2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDependency2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassCreateInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassCreateInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassEndInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassEndInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTimelineSemaphoreFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTimelineSemaphoreFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTimelineSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTimelineSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreTypeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreTypeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimelineSemaphoreSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TimelineSemaphoreSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreWaitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreWaitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreSignalInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreSignalInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputBindingDivisorDescriptionEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexInputBindingDivisorDescriptionEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineVertexInputDivisorStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineVertexInputDivisorStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVertexAttributeDivisorPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVertexAttributeDivisorPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePCIBusInfoPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePCIBusInfoPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidHardwareBufferUsageANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AndroidHardwareBufferUsageANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidHardwareBufferPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AndroidHardwareBufferPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryGetAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryGetAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidHardwareBufferFormatPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AndroidHardwareBufferFormatPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferInheritanceConditionalRenderingInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferInheritanceConditionalRenderingInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalFormatANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalFormatANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice8BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevice8BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceConditionalRenderingFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceConditionalRenderingFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkanMemoryModelFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkanMemoryModelFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderAtomicInt64Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderAtomicInt64FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVertexAttributeDivisorFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVertexAttributeDivisorFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyCheckpointPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueueFamilyCheckpointPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckpointDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CheckpointDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDepthStencilResolveProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDepthStencilResolvePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescriptionDepthStencilResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDescriptionDepthStencilResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewASTCDecodeModeEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageViewASTCDecodeModeEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceASTCDecodeFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceASTCDecodeFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTransformFeedbackFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTransformFeedbackFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTransformFeedbackPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTransformFeedbackPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateStreamCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationStateStreamCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceRepresentativeFragmentTestFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceRepresentativeFragmentTestFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRepresentativeFragmentTestStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRepresentativeFragmentTestStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExclusiveScissorFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExclusiveScissorFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportExclusiveScissorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportExclusiveScissorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCornerSampledImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCornerSampledImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceComputeShaderDerivativesFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceComputeShaderDerivativesFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFragmentShaderBarycentricFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFragmentShaderBarycentricFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderImageFootprintFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderImageFootprintFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShadingRatePaletteNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShadingRatePaletteNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportShadingRateImageStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportShadingRateImageStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShadingRateImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShadingRateImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShadingRateImagePropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShadingRateImagePropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoarseSampleLocationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CoarseSampleLocationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoarseSampleOrderCustomNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CoarseSampleOrderCustomNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportCoarseSampleOrderStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportCoarseSampleOrderStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMeshShaderFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMeshShaderFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMeshShaderPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMeshShaderPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawMeshTasksIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrawMeshTasksIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingShaderGroupCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingShaderGroupCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingPipelineCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingPipelineCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingPipelineCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingPipelineCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryTrianglesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeometryTrianglesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryAABBNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeometryAABBNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeometryDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeometryNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindAccelerationStructureMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindAccelerationStructureMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteDescriptorSetAccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WriteDescriptorSetAccelerationStructureKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureMemoryRequirementsInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureMemoryRequirementsInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceRayTracingFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceRayTracingFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceRayTracingPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceRayTracingPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceRayTracingPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceRayTracingPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StridedBufferRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StridedBufferRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceRaysIndirectCommandKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TraceRaysIndirectCommandKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrmFormatModifierPropertiesListEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrmFormatModifierPropertiesListEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImageDrmFormatModifierInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceImageDrmFormatModifierInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDrmFormatModifierListCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageDrmFormatModifierListCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDrmFormatModifierExplicitCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageDrmFormatModifierExplicitCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageDrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageStencilUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageStencilUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceMemoryOverallocationCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceMemoryOverallocationCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFragmentDensityMapFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFragmentDensityMapFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFragmentDensityMapPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFragmentDensityMapPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassFragmentDensityMapCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassFragmentDensityMapCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceScalarBlockLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceScalarBlockLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceProtectedCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceProtectedCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceUniformBufferStandardLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceUniformBufferStandardLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDepthClipEnableFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDepthClipEnableFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationDepthClipStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationDepthClipStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryBudgetPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMemoryBudgetPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryPriorityFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMemoryPriorityFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryPriorityAllocateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryPriorityAllocateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBufferDeviceAddressFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferDeviceAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferOpaqueCaptureAddressCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferOpaqueCaptureAddressCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDeviceAddressCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferDeviceAddressCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImageViewImageFormatInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceImageViewImageFormatInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterCubicImageViewImageFormatPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FilterCubicImageViewImageFormatPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImagelessFramebufferFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceImagelessFramebufferFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferAttachmentsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferAttachmentsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferAttachmentImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferAttachmentImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassAttachmentBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassAttachmentBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCooperativeMatrixFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCooperativeMatrixFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceYcbcrImageArraysFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceYcbcrImageArraysFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewHandleInfoNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageViewHandleInfoNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentFrameTokenGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentFrameTokenGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreationFeedbackEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCreationFeedbackEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreationFeedbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCreationFeedbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceFullScreenExclusiveInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFullScreenExclusiveWin32InfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceFullScreenExclusiveWin32InfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilitiesFullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceCapabilitiesFullScreenExclusiveEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePerformanceQueryFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePerformanceQueryFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePerformanceQueryPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePerformanceQueryPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceCounterKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterDescriptionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceCounterDescriptionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolPerformanceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueryPoolPerformanceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireProfilingLockInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AcquireProfilingLockInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceQuerySubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceQuerySubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeadlessSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for HeadlessSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCoverageReductionModeFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCoverageReductionModeFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageReductionStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCoverageReductionStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferMixedSamplesCombinationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferMixedSamplesCombinationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderIntegerFunctions2FeaturesINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceValueINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceValueINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitializePerformanceApiInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InitializePerformanceApiInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolPerformanceQueryCreateInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueryPoolPerformanceQueryCreateInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceStreamMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceStreamMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceOverrideInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceOverrideInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceConfigurationAcquireInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceConfigurationAcquireInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderClockFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderClockFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceIndexTypeUint8FeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceIndexTypeUint8FeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderSMBuiltinsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderSMBuiltinsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderSMBuiltinsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderSMBuiltinsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFragmentShaderInterlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFragmentShaderInterlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSeparateDepthStencilLayoutsFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSeparateDepthStencilLayoutsFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentReferenceStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentReferenceStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescriptionStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentDescriptionStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePipelineExecutablePropertiesFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutablePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineExecutablePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineExecutableInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableStatisticKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineExecutableStatisticKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableInternalRepresentationKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineExecutableInternalRepresentationKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTexelBufferAlignmentFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTexelBufferAlignmentFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTexelBufferAlignmentPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTexelBufferAlignmentPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSubgroupSizeControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSubgroupSizeControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSubgroupSizeControlPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSubgroupSizeControlPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryOpaqueCaptureAddressAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryOpaqueCaptureAddressAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceMemoryOpaqueCaptureAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceMemoryOpaqueCaptureAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceLineRasterizationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceLineRasterizationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceLineRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceLineRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationLineStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationLineStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePipelineCreationCacheControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePipelineCreationCacheControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkan11Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkan11FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkan11Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkan11PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkan12Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkan12FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkan12Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkan12PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCompilerControlCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCompilerControlCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCoherentMemoryFeaturesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCoherentMemoryFeaturesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceToolPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceToolPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryTrianglesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureGeometryTrianglesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryAabbsDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureGeometryAabbsDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryInstancesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureGeometryInstancesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureGeometryKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureBuildGeometryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureBuildGeometryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureBuildOffsetInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureBuildOffsetInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureCreateGeometryTypeInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureCreateGeometryTypeInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AabbPositionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AabbPositionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransformMatrixKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureInstanceKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureDeviceAddressInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureDeviceAddressInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureVersionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureVersionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CopyAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyAccelerationStructureToMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CopyAccelerationStructureToMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyMemoryToAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CopyMemoryToAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingPipelineInterfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingPipelineInterfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeferredOperationInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeferredOperationInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLibraryCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineLibraryCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassTransformBeginInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassTransformBeginInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferInheritanceRenderPassTransformInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferInheritanceRenderPassTransformInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDiagnosticsConfigFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDiagnosticsConfigFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceDiagnosticsConfigCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceDiagnosticsConfigCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageTiling","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorderColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineBindPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCacheHeaderVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SharingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerMipmapMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompareOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalAllocationType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SystemAllocationScope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructureType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Result","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DynamicState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentModeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorSpaceKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeDomainEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReportObjectTypeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCheckEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationFeatureEnableEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationFeatureDisableEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsTokenTypeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPowerStateEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceEventTypeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayEventTypeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportCoordinateSwizzleNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiscardRectangleModeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PointClippingBehavior","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerReductionMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TessellationDomainOrigin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrModelConversion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChromaLocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOverlapEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoverageModulationModeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoverageReductionModeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCacheHeaderVersionEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderInfoTypeAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueGlobalPriorityEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConservativeRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VendorId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DriverId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShadingRatePaletteEntryNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoarseSampleOrderTypeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyAccelerationStructureModeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureMemoryRequirementsTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureBuildTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingShaderGroupTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryOverallocationBehaviorAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScopeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComponentTypeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterScopeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterUnitKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterStorageKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceConfigurationTypeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolSamplingModeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceOverrideTypeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceParameterTypeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceValueTypeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderFloatControlsIndependence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableStatisticFormatKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LineRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSwapchainFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDisplayFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDisplaySwapchainFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrXlibSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrXcbSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrWaylandSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMirSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrAndroidSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrWin32SurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidNativeBufferFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDebugReportFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvGlslShaderFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDepthRangeUnrestrictedFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSamplerMirrorClampToEdgeFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgFilterCubicFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension17Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension18Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdRasterizationOrderFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension20Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderTrinaryMinmaxFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderExplicitVertexParameterFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDebugMarkerFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension24Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension25Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdGcnShaderFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDedicatedAllocationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension28Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtTransformFeedbackFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxExtension30Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxImageViewHandleFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension33Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdDrawIndirectCountFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension35Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdNegativeViewportHeightFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdGpuShaderHalfFloatFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderBallotFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension39Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension40Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension41Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdTextureGatherBiasLodFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderInfoFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension44Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension45Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension46Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderImageLoadStoreLodFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxExtension48Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension49Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GgpStreamDescriptorSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvCornerSampledImageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension52Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension53Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMultiviewFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgFormatPvrtcFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExternalMemoryCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExternalMemoryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExternalMemoryWin32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvWin32KeyedMutexFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrGetPhysicalDeviceProperties2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDeviceGroupFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtValidationFlagsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NnViSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderDrawParametersFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderSubgroupBallotFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderSubgroupVoteFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtTextureCompressionAstcHdrFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtAstcDecodeModeFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgExtension69Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMaintenance1Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDeviceGroupCreationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalMemoryCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalMemoryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalMemoryWin32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalMemoryFdFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrWin32KeyedMutexFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalSemaphoreCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalSemaphoreFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalSemaphoreWin32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalSemaphoreFdFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrPushDescriptorFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtConditionalRenderingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderFloat16Int8Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Khr16bitStorageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrIncrementalPresentFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDescriptorUpdateTemplateFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxDeviceGeneratedCommandsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvClipSpaceWScalingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDirectModeDisplayFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtAcquireXlibDisplayFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDisplaySurfaceCounterFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDisplayControlFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleDisplayTimingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvSampleMaskOverrideCoverageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvGeometryShaderPassthroughFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvViewportArray2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxMultiviewPerViewAttributesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvViewportSwizzleFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDiscardRectanglesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension101Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtConservativeRasterizationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDepthClipEnableFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension104Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSwapchainColorspaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtHdrMetadataFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgExtension107Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgExtension108Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrImagelessFramebufferFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrCreateRenderpass2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgExtension111Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSharedPresentableImageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalFenceCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalFenceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalFenceWin32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalFenceFdFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrPerformanceQueryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMaintenance2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension119Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrGetSurfaceCapabilities2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrVariablePointersFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrGetDisplayProperties2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MvkIosSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MvkMacosSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MvkMoltenvkFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExternalMemoryDmaBufFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtQueueFamilyForeignFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDedicatedAllocationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDebugUtilsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidExternalMemoryAndroidHardwareBufferFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSamplerFilterMinmaxFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrStorageBufferStorageClassFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdGpuShaderInt16Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension134Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension135Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension136Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdMixedAttachmentSamplesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderFragmentMaskFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtInlineUniformBlockFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension140Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderStencilExportFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension142Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension143Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSampleLocationsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrRelaxedBlockLayoutFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrGetMemoryRequirements2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrImageFormatListFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtBlendOperationAdvancedFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvFragmentCoverageToColorFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrRayTracingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension152Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvFramebufferMixedSamplesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvFillRectangleFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvShaderSmBuiltinsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtPostDepthCoverageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSamplerYcbcrConversionFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrBindMemory2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtImageDrmFormatModifierFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension160Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtValidationCacheFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDescriptorIndexingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderViewportIndexLayerFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension164Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvShadingRateImageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvRayTracingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvRepresentativeFragmentTestFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension168Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMaintenance3Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDrawIndirectCountFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtFilterCubicFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension172Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension173Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension174Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtGlobalPriorityFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderSubgroupExtendedTypesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension177Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Khr8bitStorageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExternalMemoryHostFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdBufferMarkerFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderAtomicInt64Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderClockFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension183Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdPipelineCompilerControlFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtCalibratedTimestampsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderCorePropertiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension187Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension188Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension189Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdMemoryOverallocationBehaviorFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtVertexAttributeDivisorFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GgpFrameTokenFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtPipelineCreationFeedbackFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension194Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension195Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension196Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDriverPropertiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderFloatControlsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvShaderSubgroupPartitionedFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDepthStencilResolveFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSwapchainMutableFormatFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvComputeShaderDerivativesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvMeshShaderFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvFragmentShaderBarycentricFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvShaderImageFootprintFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvScissorExclusiveFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDeviceDiagnosticCheckpointsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrTimelineSemaphoreFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension209Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelShaderIntegerFunctions2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelPerformanceQueryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrVulkanMemoryModelFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtPciBusInfoFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdDisplayNativeHdrFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FuchsiaImagepipeSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension216Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension217Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtMetalSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtFragmentDensityMapFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension220Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension221Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtScalarBlockLayoutFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension223Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleHlslFunctionality1Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleDecorateStringFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSubgroupSizeControlFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension227Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderCoreProperties2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension229Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdDeviceCoherentMemoryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension231Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension232Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension233Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension234Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension235Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension236Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSpirv14Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtMemoryBudgetFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtMemoryPriorityFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSurfaceProtectedCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDedicatedAllocationImageAliasingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSeparateDepthStencilLayoutsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension243Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MesaExtension244Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtBufferDeviceAddressFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtToolingInfoFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSeparateStencilUsageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtValidationFeaturesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension249Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvCooperativeMatrixFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvCoverageReductionModeFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtFragmentShaderInterlockFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtYcbcrImageArraysFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrUniformBufferStandardLayoutFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension255Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtFullScreenExclusiveFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtHeadlessSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrBufferDeviceAddressFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension259Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtLineRasterizationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension261Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtHostQueryResetFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GgpExtension263Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BrcmExtension264Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BrcmExtension265Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtIndexTypeUint8Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension267Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension268Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDeferredHostOperationsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrPipelineExecutablePropertiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension271Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension272Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension273Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension274Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension275Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension276Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderDemoteToHelperInvocationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDeviceGeneratedCommandsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension279Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension280Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArmExtension281Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtTexelBufferAlignmentFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomRenderPassTransformFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension284Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension285Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension286Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxExtension287Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxExtension288Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension289Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleUserTypeFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrPipelineLibraryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension292Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension293Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderNonSemanticInfoFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension295Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension296Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension297Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtPipelineCreationCacheControlFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension299Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension300Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDeviceDiagnosticsConfigFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension302Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension303Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension304Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension305Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension306Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension307Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension308Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension309Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension310Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension311Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension312Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension313Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension314Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension315Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension316Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension317Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension318Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension319Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension320Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension321Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension322Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension323Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StaticFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryFnV1_0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceFnV1_0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceFnV1_0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryFnV1_1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceFnV1_1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceFnV1_1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryFnV1_2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceFnV1_2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceFnV1_2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearColorValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterResultKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceValueDataINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableStatisticValueKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceOrHostAddressKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceOrHostAddressConstKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryDataKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSqShaderStageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaDeviceClockModeAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaPerfBlockAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSampleTypeAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSessionAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSessionCreateInfoAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaPerfBlockPropertiesAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceGpaFeaturesAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceGpaPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceGpaPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaPerfCounterAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSampleBeginInfoAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaDeviceClockModeInfoAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdGpaInterfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceWaveLimitPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceWaveLimitPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageCreateInfoWaveLimitAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMarker","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtils","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetalSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplaySwapchain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndirectCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Swapchain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimelineSemaphore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32Surface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcbSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XlibSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOSSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacOSSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MeshShader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracing","synthetic":true,"types":[]}];
implementors["bimap"] = [{"text":"impl&lt;L, R&gt; UnwindSafe for Overwritten&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !UnwindSafe for BiBTreeMap&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !UnwindSafe for IntoIter&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for Iter&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for LeftValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for RightValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for LeftRange&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for RightRange&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R, LS, RS&gt; UnwindSafe for BiHashMap&lt;L, R, LS, RS&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;LS: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;RS: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !UnwindSafe for IntoIter&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for Iter&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for LeftValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for RightValues&lt;'a, L, R&gt;","synthetic":true,"types":[]}];
implementors["bit_set"] = [{"text":"impl&lt;B&gt; UnwindSafe for BitSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Iter&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Union&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Intersection&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Difference&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for SymmetricDifference&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["bit_vec"] = [{"text":"impl&lt;B&gt; UnwindSafe for BitVec&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Iter&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for IntoIter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Blocks&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl UnwindSafe for BigEndian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LittleEndian","synthetic":true,"types":[]}];
implementors["calloop"] = [{"text":"impl&lt;Data&gt; !UnwindSafe for EventLoop&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for InsertError&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Data&gt; !UnwindSafe for LoopHandle&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LoopSignal","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for Source&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Idle","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for Generic&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for Event&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for EventedFd&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventedRawFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TimerHandle&lt;T&gt;","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;Tz&gt; UnwindSafe for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; UnwindSafe for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseMonthError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecondsFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RoundingError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Weekday","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Month","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FixedOffset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NaiveDate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsoWeek","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NaiveTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parsed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalNumeric","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pad","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Numeric","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; !UnwindSafe for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !UnwindSafe for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArgSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; UnwindSafe for BoxAllocation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VecAllocation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VecEntry&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryReadyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrySelectError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !UnwindSafe for Injector&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Stealer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Worker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for Atomic&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T:&nbsp;?Sized, P&gt; UnwindSafe for CompareAndSetError&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T:&nbsp;?Sized&gt; UnwindSafe for Shared&lt;'g, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Collector","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LocalHandle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Guard","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; UnwindSafe for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backoff","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Parker","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; !UnwindSafe for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; UnwindSafe for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["dlib"] = [{"text":"impl UnwindSafe for DlError","synthetic":true,"types":[]}];
implementors["example_runner"] = [{"text":"impl !UnwindSafe for ExampleBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Options","synthetic":true,"types":[]}];
implementors["filetime"] = [{"text":"impl UnwindSafe for FileTime","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl&lt;S&gt; UnwindSafe for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LocalPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LocalSpawner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Enter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl UnwindSafe for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;F&gt; UnwindSafe for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; UnwindSafe for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Remote&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Shared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; UnwindSafe for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; UnwindSafe for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; UnwindSafe for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; UnwindSafe for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; UnwindSafe for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; UnwindSafe for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; UnwindSafe for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; UnwindSafe for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; UnwindSafe for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; UnwindSafe for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Abortable&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AbortHandle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AbortRegistration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; UnwindSafe for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; UnwindSafe for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; UnwindSafe for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for Next&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for Peek&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; UnwindSafe for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for SelectNextSome&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; UnwindSafe for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; UnwindSafe for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for BufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for Buffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !UnwindSafe for ForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; !UnwindSafe for ReuniteError&lt;T, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; !UnwindSafe for SplitSink&lt;S, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for SplitStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; UnwindSafe for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; UnwindSafe for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; UnwindSafe for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for TryNext&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; UnwindSafe for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for TryBufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !UnwindSafe for TryForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; UnwindSafe for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for FuturesOrdered&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for FuturesUnordered&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Close&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; UnwindSafe for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Flush&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; UnwindSafe for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; UnwindSafe for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Send&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, St&gt; !UnwindSafe for SendAll&lt;'a, Si, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; UnwindSafe for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; UnwindSafe for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; UnwindSafe for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Close&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W&gt; !UnwindSafe for Copy&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W&gt; !UnwindSafe for CopyBuf&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for FillBuf&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Flush&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; UnwindSafe for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for Read&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadVectored&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadExact&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadLine&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadToEnd&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadToString&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadUntil&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; !UnwindSafe for Seek&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Write&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for WriteVectored&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for WriteAll&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, U&gt; !UnwindSafe for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl UnwindSafe for FxHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FxHasher64","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FxHasher32","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl UnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backend","synthetic":true,"types":[]}];
implementors["gfx_backend_vulkan"] = [{"text":"impl UnwindSafe for VK_ENTRY","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawInstance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceCreationFeatures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMessenger","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backend","synthetic":true,"types":[]}];
implementors["gfx_descriptor"] = [{"text":"impl&lt;B&gt; UnwindSafe for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorCounts","synthetic":true,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl UnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Limits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsupportedBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryTypeId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Gpu&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for IndexBufferView&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearDepthStencil","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for CommandBufferInheritanceInfo&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentClear","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceLost","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceLost","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowInUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutOfMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OomOrDeviceLost","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MapError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitFor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Aspects","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatBits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Swizzle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFeature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferFeature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R5g6b5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B5g6r5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R5g5b5a1Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B5g5r5a1Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A1r5g5b5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B10g11r11Ufloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for E5b9g9r9Ufloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for X8D24Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for S8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D16UnormS8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D24UnormS8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D32SfloatS8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc1RgbUnorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc1RgbSrgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc1RgbaUnorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc1RgbaSrgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc2Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc2Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc3Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc3Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc4Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc5Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc6hUfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc6hSfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc7Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc7Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8a1Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8a1Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8a8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8a8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EacR11Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EacR11Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EacR11g11Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EacR11g11Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc4x4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc4x4Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc5x4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc5x4Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc5x5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc5x5Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc6x5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc6x5Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc6x6Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc6x6Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x5Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x6Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x6Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x5Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x6Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x6Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x10Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x10Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc12x10Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc12x10Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc12x12Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc12x12Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Component","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChannelType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Offset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewCapabilities","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PackedColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Subresource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceLayers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceFootprint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tiling","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayerError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CubeFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WrapMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dependencies","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Requirements","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Barrier&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentOps","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Attachment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDesc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Subpass&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for ComputePipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorRangeDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, WI&gt; UnwindSafe for DescriptorSetWrite&lt;'a, B, WI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;WI: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for DescriptorSetCopy&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BakedStates","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for GraphicsPipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthBias","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rasterizer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Multisampling","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttributeDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputAssemblerDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorBlendDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthTest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilFace","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilTest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Face","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationConstant","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Specialization&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineStage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for EntryPoint&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreationFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDescriptorFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Descriptor&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::BufferView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for PrimitiveAssemblerDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Primitive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Comparison","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Factor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; UnwindSafe for BasePipeline&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Query&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueryPool: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResultFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineStatistic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl&lt;Ic, Iw, Is&gt; UnwindSafe for Submission&lt;Ic, Iw, Is&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ic: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Is: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Iw: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for QueueGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilities","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompositeAlphaMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Suboptimal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitError","synthetic":true,"types":[]}];
implementors["gfx_memory"] = [{"text":"impl UnwindSafe for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DedicatedBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for GeneralAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for GeneralBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeneralConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for LinearAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for LinearBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Heaps&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for MemoryBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for MappedRange&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, B&gt; !UnwindSafe for Writer&lt;'a, 'b, T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeapsError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryUsage","synthetic":true,"types":[]}];
implementors["inplace_it"] = [{"text":"impl&lt;'a, T&gt; !UnwindSafe for UninitializedSliceMemoryGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for SliceMemoryGuard&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl UnwindSafe for IoVec","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl UnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; UnwindSafe for Symbol&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Symbol&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; UnwindSafe for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; UnwindSafe for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; UnwindSafe for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; UnwindSafe for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; UnwindSafe for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Octant","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetLoggerError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelFilter","synthetic":true,"types":[]}];
implementors["matchers"] = [{"text":"impl&lt;S, A&gt; UnwindSafe for Pattern&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, A&gt; UnwindSafe for Matcher&lt;'a, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; UnwindSafe for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl UnwindSafe for MmapOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mmap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MmapMut","synthetic":true,"types":[]}];
implementors["minifb"] = [{"text":"impl !UnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixMenu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Menu","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for MenuItem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scale","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyRepeat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CursorStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScaleMode","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl !UnwindSafe for Poll","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SetReadiness","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ready","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Events","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixReady","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpListener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_extras"] = [{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for SendError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for TrySendError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timeout","synthetic":true,"types":[]}];
implementors["naga"] = [{"text":"impl&lt;T&gt; UnwindSafe for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructMember","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalVariable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalVariable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FallThrough","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuiltIn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VectorSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScalarKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArraySize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemberOrigin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDimension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstantInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnaryOperator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinaryOperator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntrinsicFunction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DerivativeAxis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionOrigin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expression","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindTarget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindSource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Options&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Writer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriterFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplingFlags","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Parser&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ParseError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Token&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Error&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Typifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnexpectedConstantTypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Validator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolveError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationError","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl UnwindSafe for TcpBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UdpBuilder","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; !UnwindSafe for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Errno","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SealFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FdFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FallocateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlockArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MsFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MntFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FdFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MqAttr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenptyResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForkptyResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PtyMaster","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CloneFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LioOpcode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LioMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EfdFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MapFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MsFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MmapAdvise","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Options","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dqblk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuotaType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuotaFmt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RebootMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FdSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SaFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigmaskHow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigHandler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigevNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SfdFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AlgAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VsockAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MsgFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixCredentials","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddressFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InetAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockProtocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shutdown","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReuseAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReusePort","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Linger","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpAddMembership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpDropMembership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SendTimeout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Broadcast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OobInline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeepAlive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PeerCredentials","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RcvBuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SndBuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RcvBufForce","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SndBufForce","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcceptConn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OriginalDst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpTransparent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mark","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PassCred","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpCongestion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statfs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FsType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FsFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statvfs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SysInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Termios","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaudRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlushArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeVal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IoVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UtsName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Inotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Uid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for User","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FchownatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Whence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathconfVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SysconfVar","synthetic":true,"types":[]}];
implementors["nom"] = [{"text":"impl UnwindSafe for CompareResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Needed","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for Err&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for VerboseError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VerboseErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;I, E, F&gt; UnwindSafe for ParserIterator&lt;I, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Endianness","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; UnwindSafe for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl UnwindSafe for ParseFloatError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloatErrorKind","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T, F&gt; UnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; UnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;UnwindSafe&gt; UnwindSafe for OnceCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; UnwindSafe for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["owned_ttf_parser"] = [{"text":"impl UnwindSafe for OwnedFont","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl UnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawFairMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawThreadId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl UnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinWait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl UnwindSafe for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl UnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntoIter","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl UnwindSafe for Diagnostic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpanRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl UnwindSafe for Bernoulli","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Open01","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenClosed01","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binomial","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cauchy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dirichlet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Beta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChiSquared","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FisherF","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StudentT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogNormal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StandardNormal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pareto","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Poisson","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Triangular","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnitCircle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; UnwindSafe for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Standard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntropyRng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdRng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadRng","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; UnwindSafe for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; UnwindSafe for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl UnwindSafe for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["raw_string"] = [{"text":"impl&lt;'a&gt; UnwindSafe for Utf8Chunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Utf8ChunksIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawString","synthetic":true,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Chain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Chunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Cloned&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Copied&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Enumerate&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for Filter&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for FilterMap&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for FlatMap&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for FlatMapIter&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Flatten&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for FlattenIter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, ID, F&gt; UnwindSafe for Fold&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; UnwindSafe for FoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for Inspect&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; UnwindSafe for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; UnwindSafe for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as ParallelIterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for MaxLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for MinLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for Map&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, INIT, F&gt; UnwindSafe for MapInit&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T, F&gt; UnwindSafe for MapWith&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for MultiZip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for PanicFuse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; UnwindSafe for IterBridge&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for Positions&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for RepeatN&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Rev&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Skip&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; UnwindSafe for Split&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Take&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, ID, F&gt; UnwindSafe for TryFold&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; UnwindSafe for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Zip&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for ZipEq&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for StepBy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; UnwindSafe for Iter&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; UnwindSafe for Chunks&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; UnwindSafe for ChunksExact&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; UnwindSafe for Windows&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; !UnwindSafe for IterMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; !UnwindSafe for ChunksMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; !UnwindSafe for ChunksExactMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; UnwindSafe for Split&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; !UnwindSafe for SplitMut&lt;'data, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; UnwindSafe for Chars&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; UnwindSafe for CharIndices&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; UnwindSafe for Bytes&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; UnwindSafe for EncodeUtf16&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; UnwindSafe for Split&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; UnwindSafe for SplitTerminator&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; UnwindSafe for Lines&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; UnwindSafe for SplitWhitespace&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; UnwindSafe for Matches&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; UnwindSafe for MatchIndices&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Drain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; !UnwindSafe for Drain&lt;'data, T&gt;","synthetic":true,"types":[]}];
implementors["rayon_core"] = [{"text":"impl !UnwindSafe for ThreadBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; !UnwindSafe for Scope&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; !UnwindSafe for ScopeFifo&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThreadPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThreadPoolBuildError","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;DefaultSpawn&gt; !UnwindSafe for ThreadPoolBuilder&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Configuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FnContext","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl UnwindSafe for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetMatches","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; UnwindSafe for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; UnwindSafe for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; UnwindSafe for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; UnwindSafe for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetMatches","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["regex_automata"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; UnwindSafe for Regex&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for DenseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for SparseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for Premultiplied&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for PremultipliedByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl UnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParserBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WithComments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Comment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Alternation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Concat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassPerl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassAscii","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassBracketed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Assertion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Repetition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaptureName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlagsItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LiteralKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssertionKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GroupKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParserBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Printer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaseFoldError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hir","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Repetition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HirKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WordBoundary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GroupKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Printer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Translator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Utf8Range","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Utf8Sequences","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Utf8Sequence","synthetic":true,"types":[]}];
implementors["rspirv"] = [{"text":"impl&lt;'a&gt; UnwindSafe for Decoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'd&gt; !UnwindSafe for Parser&lt;'c, 'd&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Action","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instruction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Loader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InsertPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Operand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoreInstructionTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlslStd450InstructionTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenCLStd100InstructionTable","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExtendedInstruction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Instruction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogicalOperand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OperandKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OperandQuantifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LiftContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OperandError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstructionError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConversionError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructMember","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Decoration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtInstImport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtInst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutionMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionParameter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionEnd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutionModeId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Branch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Terminator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Op","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Jump","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Token&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Storage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl UnwindSafe for Curve","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Codepoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; UnwindSafe for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for LayoutIter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl UnwindSafe for Handle","synthetic":true,"types":[]}];
implementors["scoped_tls"] = [{"text":"impl&lt;T&gt; UnwindSafe for ScopedKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl UnwindSafe for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; UnwindSafe for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; UnwindSafe for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; UnwindSafe for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; UnwindSafe for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; UnwindSafe for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; UnwindSafe for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; UnwindSafe for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; UnwindSafe for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; UnwindSafe for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; UnwindSafe for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Number","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CharEscape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Serializer","synthetic":true,"types":[]}];
implementors["sharded_slab"] = [{"text":"impl UnwindSafe for DefaultConfig","synthetic":true,"types":[]},{"text":"impl&lt;T, C&gt; UnwindSafe for Pool&lt;T, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&gt; !UnwindSafe for PoolGuard&lt;'a, T, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, C&gt; UnwindSafe for Slab&lt;T, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&nbsp;=&nbsp;DefaultConfig&gt; !UnwindSafe for Guard&lt;'a, T, C&gt;","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; UnwindSafe for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl !UnwindSafe for Environment","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Shell","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataDevice","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataOffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadPipe","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RMLVO","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputMgr","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThemeManager","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThemedPointer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AutoThemer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AutoPointer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MemPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BasicFrame","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FrameRequest","synthetic":true,"types":[]}];
implementors["spirv_builder"] = [{"text":"impl UnwindSafe for SpirvBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpirvBuilderError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryModel","synthetic":true,"types":[]}];
implementors["spirv_headers"] = [{"text":"impl UnwindSafe for ImageOperands","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FPFastMathMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectionControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoopControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemorySemantics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAccess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KernelProfilingInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceLanguage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutionModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddressingModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutionMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dim","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerAddressingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerFilterMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageChannelOrder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageChannelDataType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FPRoundingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessQualifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionParameterAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Decoration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuiltIn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GroupOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KernelEnqueueFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayQueryIntersection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayQueryCommittedIntersectionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayQueryCandidateIntersectionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Op","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CLOp","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; UnwindSafe for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; UnwindSafe for FontNameIter&lt;'a, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlatformId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnicodeEid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacEid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacLang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl UnwindSafe for StrSimError","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl UnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprInPlace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprVerbatim","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitVerbatim","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeVerbatim","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloatSuffix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntSuffix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BareFnArgName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl UnwindSafe for As","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Existential","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for For","synthetic":true,"types":[]},{"text":"impl UnwindSafe for If","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for In","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl UnwindSafe for While","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for And","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for At","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; UnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; !UnwindSafe for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for IntoIter&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !UnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]}];
implementors["tar"] = [{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for Archive&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for Entries&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for Builder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for Entry&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GnuExtSparseHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GnuHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GnuSparseHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OldHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UstarHeader","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; UnwindSafe for PaxExtension&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; UnwindSafe for PaxExtensions&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unpacked","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderMode","synthetic":true,"types":[]}];
implementors["tempfile"] = [{"text":"impl UnwindSafe for TempDir","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamedTempFile","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PathPersistError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PersistError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TempPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpooledTempFile","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for Builder&lt;'a, 'b&gt;","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl UnwindSafe for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoHyphenation","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; UnwindSafe for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; UnwindSafe for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; UnwindSafe for WrapIter&lt;'w, 'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !UnwindSafe for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send + UnwindSafe&gt; UnwindSafe for CachedThreadLocal&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send + UnwindSafe&gt; UnwindSafe for ThreadLocal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl UnwindSafe for Duration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timespec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreciseTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SteadyTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]}];
implementors["topological_sort"] = [{"text":"impl&lt;T&gt; UnwindSafe for TopologicalSort&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DependencyLink&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl !UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for WithDispatch&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Instrumented&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Entered&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl !UnwindSafe for Dispatch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DefaultGuard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Current","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Interest","synthetic":true,"types":[]}];
implementors["tracing_log"] = [{"text":"impl UnwindSafe for LogTracer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceLogger","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]}];
implementors["tracing_serde"] = [{"text":"impl !UnwindSafe for SerializeField","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SerializeFieldSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SerializeLevel&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SerializeId&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SerializeMetadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SerializeEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SerializeAttributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SerializeRecord&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for SerdeMapVisitor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as SerializeMap&gt;::Error: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for SerdeStructVisitor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as SerializeStruct&gt;::Error: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for SerializeFieldMap&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing_subscriber"] = [{"text":"impl UnwindSafe for EnvFilter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Registry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CurrentSpan","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for Alt&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, V&gt; UnwindSafe for Delimited&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, V&gt; UnwindSafe for VisitDelimited&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for Messages&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Directive","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BadName","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FromEnvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, N&gt; UnwindSafe for FmtContext&lt;'a, S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for FormattedFields&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, N, E, W&gt; UnwindSafe for Layer&lt;S, N, E, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TestWriter","synthetic":true,"types":[]},{"text":"impl&lt;N&nbsp;=&nbsp;DefaultFields, E&nbsp;=&nbsp;Format&lt;Full, SystemTime&gt;, F&nbsp;=&nbsp;LevelFilter, W&nbsp;=&nbsp;fn() -&gt; Stdout&gt; !UnwindSafe for Subscriber&lt;N, E, F, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N&nbsp;=&nbsp;DefaultFields, E&nbsp;=&nbsp;Format&lt;Full, SystemTime&gt;, F&nbsp;=&nbsp;LevelFilter, W&nbsp;=&nbsp;fn() -&gt; Stdout&gt; !UnwindSafe for SubscriberBuilder&lt;N, E, F, W&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Json","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonFields","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for JsonVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for FieldFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; !UnwindSafe for FieldFnVisitor&lt;'a, F&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Compact","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Full","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; UnwindSafe for Format&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultFields","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DefaultVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FmtSpan","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SystemTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Uptime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChronoUtc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChronoLocal","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BoxMakeWriter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; UnwindSafe for Context&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, I, S&gt; UnwindSafe for Layered&lt;L, I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Identity","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; UnwindSafe for Scope&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;L as LookupSpan&lt;'a&gt;&gt;::Data: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Extensions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExtensionsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Data&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; UnwindSafe for SpanRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as LookupSpan&lt;'a&gt;&gt;::Data: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; UnwindSafe for Parents&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; UnwindSafe for FromRoot&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as LookupSpan&lt;'a&gt;&gt;::Data: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, S&gt; UnwindSafe for Layer&lt;L, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, S&gt; UnwindSafe for Handle&lt;L, S&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TryInitError","synthetic":true,"types":[]}];
implementors["ttf_parser"] = [{"text":"impl&lt;'a&gt; UnwindSafe for VariationAxes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VariationAxis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Names&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScriptMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Variation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LineMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RasterGlyphImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlatformId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Weight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Width","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RasterImageFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Subtable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Subtables&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueOffset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Machine&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["typed_arena"] = [{"text":"impl&lt;T&gt; UnwindSafe for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; UnwindSafe for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; !UnwindSafe for VacantEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; !UnwindSafe for OccupiedEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; UnwindSafe for Iter&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; !UnwindSafe for IterMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; UnwindSafe for Keys&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; UnwindSafe for Values&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; !UnwindSafe for ValuesMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; UnwindSafe for Drain&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; !UnwindSafe for Entry&lt;'a, V&gt;","synthetic":true,"types":[]}];
implementors["void"] = [{"text":"impl UnwindSafe for Void","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl UnwindSafe for DirEntry","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WalkDir","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl !UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtocolError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EventQueue","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for QueueToken","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for NewProxy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !UnwindSafe for Proxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AnonymousObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CursorTheme","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for CursorImageBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlEglSurface","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for BlockingMsgIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlRegistry","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlCompositor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlShmPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlShm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlDataOffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlDataSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlDataDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DndAction","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlShell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Resize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transient","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlShellSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlSeat","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlPointer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Axis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AxisSource","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlKeyboard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeymapFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlTouch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlOutput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Subpixel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WlSubsurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for ThreadGuard&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DispatchData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for Filter&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; UnwindSafe for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; UnwindSafe for ObjectMap&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferedSocket","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UserData","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UserDataMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArgumentType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Argument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageWriteError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageParseError","synthetic":true,"types":[]}];
implementors["wayland_cursor"] = [{"text":"impl !UnwindSafe for CursorTheme","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Cursor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CursorImageBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameAndDuration","synthetic":true,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl !UnwindSafe for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentPurpose","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreeditStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextDirection","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentHint","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChangeCause","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentPurpose","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgShell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgPopup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GtkPrimarySelectionDeviceManager","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GtkPrimarySelectionDevice","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GtkPrimarySelectionOffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GtkPrimarySelectionSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CancelReason","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WpPresentation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgWmBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgPositioner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgToplevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgPopup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WpViewporter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WpViewport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl UnwindSafe for wl_message","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_interface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_list","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_array","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_argument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_proxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_event_queue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_listener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_signal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_client","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_event_loop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_event_source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_global","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_resource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_shm_buffer","synthetic":true,"types":[]}];
implementors["wgpu"] = [{"text":"impl !UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Adapter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BufferSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TextureView","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwapChain","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BindGroupLayout","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BindGroup","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PipelineLayout","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderPipeline","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ComputePipeline","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CommandEncoder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ComputePass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderBundleEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBundle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for Operations&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPassColorAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPassDepthStencilAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderBundleDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !UnwindSafe for RenderPassDescriptor&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwapChainTexture","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwapChainFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferAsyncError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BufferView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BufferViewMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Maintain","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for LoadOp&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapChainError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MapMode","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StagingBelt","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferInitDescriptor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl UnwindSafe for BindingTypeMaxCountError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for BindGroupLayout&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for PipelineLayout&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BufferBinding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindGroupDynamicBindingData","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for BindGroup&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreateBindGroupError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindingZone","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindingTypeMaxCountErrorKind","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreatePipelineLayoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushConstantUploadError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBundleEncoder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBundle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ComputePass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComputePassDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for PassChannel&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ColorAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPassDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for CommandBuffer&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; UnwindSafe for BasePassRef&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandAllocatorError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateRenderBundleError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBundleError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ComputePassError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderCommandError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoadOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StoreOp","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderPassError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TransferError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CopyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandEncoderError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UsageConflict","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for Device&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidDevice","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; UnwindSafe for ImplicitPipelineIds&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HostMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateDeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentityManager","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; UnwindSafe for Storage&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Token&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentityManagerFactory","synthetic":true,"types":[]},{"text":"impl&lt;T, I, F&gt; UnwindSafe for Registry&lt;T, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;I&gt;&gt;::Filter: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, F&gt; !UnwindSafe for Hub&lt;B, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for Hubs&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; !UnwindSafe for Global&lt;G&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Root","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Id&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidAdapter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for AdapterInputs&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestAdapterError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for ShaderModule&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for ComputePipeline&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineFlags","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for RenderPipeline&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateShaderModuleError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ImplicitLayoutError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreateComputePipelineError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreateRenderPipelineError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMapOperation","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for Buffer&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for Texture&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for TextureView&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for Sampler&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMapAsyncStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferAccessError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureDimensionError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateTextureError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateTextureViewError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureViewDestroyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateSamplerError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for SwapChain&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwapChainOutput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidSwapChain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapChainError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateSwapChainError","synthetic":true,"types":[]}];
implementors["wgpu_subscriber"] = [{"text":"impl !UnwindSafe for ChromeTracingLayer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FmtLayer","synthetic":true,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl UnwindSafe for BackendBit","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for RequestAdapterOptions&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Limits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorStateDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RasterizationStateDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorWrite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilStateFaceDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexAttributeDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for BufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for CommandEncoderDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapChainDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Origin3d","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent3d","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for TextureDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for CommandBufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for RenderBundleDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureDataLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindGroupLayoutEntry","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for BufferCopyView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TextureCopyView&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PowerPreference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureViewDimension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CullMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompareFunction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputStepMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapChainStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureDimension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureAspect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddressMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureComponentType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindingType","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl&lt;P&gt; UnwindSafe for LogicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for PhysicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for LogicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for PhysicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Size","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotSupportedError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OsError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyboardInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Event&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StartCause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for WindowEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TouchPhase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Force","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ElementState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for EventLoop&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for EventLoopWindowTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for EventLoopProxy&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for EventLoopClosed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlFlow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Icon","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BadIcon","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VideoMode","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MonitorHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XNotSupported","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowId","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WindowBuilder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CursorIcon","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Fullscreen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Theme","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]}];
implementors["x11"] = [{"text":"impl UnwindSafe for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcmsColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbBounds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControls","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMods","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOutline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbSection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XAnyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XButtonEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XColormapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XErrorEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGravityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMappingEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMotionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XReparentEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScreenFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XArc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XChar2b","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCharStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XClassHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XComposeStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtCodes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontProp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGCValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XHostAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIconSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyboardState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XmbTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XrmValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSizeHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XStandardColormap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextItem16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XwcTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWindowChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWMHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XICCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AspectRatio","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClientMessageData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFns","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMTextString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XOC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XOM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorComment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorComments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorImages","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFont","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftCharSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFontSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcCharSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcEndian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFontInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftDraw","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFeedbackState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInputClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIModifierState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIValuatorState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEventMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIRawEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _AtomRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuScanline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRPanning","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XCircle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XFilters","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIndexValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XLineFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XPointDouble","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XPointFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XSpanFix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTrap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTriangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTransform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _TranslationData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _WidgetRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XtWidgetGeometry","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl UnwindSafe for OpenError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xlib","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcmsColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbBounds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControls","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMods","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOutline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbSection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XAnyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XButtonEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XColormapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XErrorEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGravityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMappingEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMotionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XReparentEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScreenFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XArc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XChar2b","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCharStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XClassHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XComposeStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtCodes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontProp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGCValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XHostAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIconSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyboardState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XmbTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XrmValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSizeHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XStandardColormap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextItem16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XwcTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWindowChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWMHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XICCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AspectRatio","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClientMessageData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFns","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMTextString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XOC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XOM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Glx","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xcursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorComment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorComments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorImages","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xft","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFont","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftCharSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFontSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcCharSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcEndian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFontInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftDraw","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xlib","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFeedbackState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInputClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInput2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIModifierState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIValuatorState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEventMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIRawEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xmu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _AtomRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuScanline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xrender","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XCircle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XFilters","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIndexValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XLineFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XPointDouble","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XPointFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XSpanFix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTrap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTriangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTransform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xss","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _TranslationData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _WidgetRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xlib_xcb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xrandr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRPanning","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xrandr_2_2_0","synthetic":true,"types":[]}];
implementors["xattr"] = [{"text":"impl UnwindSafe for UnsupportedPlatformError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XAttrs","synthetic":true,"types":[]}];
implementors["xcursor"] = [{"text":"impl UnwindSafe for CursorTheme","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl UnwindSafe for BaseDirectories","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileFindIterator","synthetic":true,"types":[]}];
implementors["xkb"] = [{"text":"impl UnwindSafe for Keycode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LedIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LedMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Keysym","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Keymap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Include&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Log&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Mods&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Layouts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Leds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Serialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Update&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Mods&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Layouts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Leds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Consumed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Components","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Table","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Result","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]}];
implementors["xkbcommon_sys"] = [{"text":"impl UnwindSafe for xkb_rule_names","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xkb_compose_format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xkb_compose_status","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xkb_compose_feed_result","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xkb_keymap_format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xkb_log_level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xkb_key_direction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xkb_consumed_mode","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl UnwindSafe for ParserConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XmlVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Namespace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for EventReader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for Events&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XmlEvent","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()