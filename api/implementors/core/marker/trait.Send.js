(function() {var implementors = {};
implementors["ab_glyph_rasterizer"] = [{"text":"impl Send for Point","synthetic":true,"types":[]},{"text":"impl Send for Rasterizer","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Send for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Send for FindIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Send for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; Send for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Match","synthetic":true,"types":[]},{"text":"impl Send for MatchKind","synthetic":true,"types":[]},{"text":"impl Send for ErrorKind","synthetic":true,"types":[]},{"text":"impl Send for Builder","synthetic":true,"types":[]},{"text":"impl Send for Config","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; Send for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl Send for Searcher","synthetic":true,"types":[]},{"text":"impl Send for MatchKind","synthetic":true,"types":[]}];
implementors["andrew"] = [{"text":"impl&lt;'a&gt; Send for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Endian","synthetic":true,"types":[]},{"text":"impl Send for Line","synthetic":true,"types":[]},{"text":"impl Send for Sides","synthetic":true,"types":[]},{"text":"impl Send for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for FontConfig","synthetic":true,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Send for Prefix","synthetic":true,"types":[]},{"text":"impl Send for Infix","synthetic":true,"types":[]},{"text":"impl Send for Suffix","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Send for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Send for ANSIGenericStrings&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Colour","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Send for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Send for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Send for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Send for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A:&nbsp;Array + Send&gt; Send for Drain&lt;'a, A&gt;","synthetic":false,"types":[]}];
implementors["ash"] = [{"text":"impl Send for Device","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for EntryCustom&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for LoadingError","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for InstanceError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for Align&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for AlignIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineCacheCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for CullModeFlags","synthetic":true,"types":[]},{"text":"impl Send for QueueFlags","synthetic":true,"types":[]},{"text":"impl Send for RenderPassCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DeviceQueueCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for MemoryPropertyFlags","synthetic":true,"types":[]},{"text":"impl Send for MemoryHeapFlags","synthetic":true,"types":[]},{"text":"impl Send for AccessFlags","synthetic":true,"types":[]},{"text":"impl Send for BufferUsageFlags","synthetic":true,"types":[]},{"text":"impl Send for BufferCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl Send for ImageUsageFlags","synthetic":true,"types":[]},{"text":"impl Send for ImageCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for ImageViewCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for SamplerCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineShaderStageCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for ColorComponentFlags","synthetic":true,"types":[]},{"text":"impl Send for FenceCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for SemaphoreCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for FormatFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for QueryControlFlags","synthetic":true,"types":[]},{"text":"impl Send for QueryResultFlags","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferUsageFlags","synthetic":true,"types":[]},{"text":"impl Send for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl Send for ImageAspectFlags","synthetic":true,"types":[]},{"text":"impl Send for SparseImageFormatFlags","synthetic":true,"types":[]},{"text":"impl Send for SparseMemoryBindFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineStageFlags","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolResetFlags","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferResetFlags","synthetic":true,"types":[]},{"text":"impl Send for SampleCountFlags","synthetic":true,"types":[]},{"text":"impl Send for AttachmentDescriptionFlags","synthetic":true,"types":[]},{"text":"impl Send for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DependencyFlags","synthetic":true,"types":[]},{"text":"impl Send for SemaphoreWaitFlags","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlaneAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for CompositeAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for SurfaceTransformFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for SwapchainImageUsageFlagsANDROID","synthetic":true,"types":[]},{"text":"impl Send for DebugReportFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryHandleTypeFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryFeatureFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for SubgroupFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for IndirectCommandsLayoutUsageFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for IndirectStateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSetLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalSemaphoreHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalSemaphoreFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for SemaphoreImportFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalFenceHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalFenceFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for FenceImportFlags","synthetic":true,"types":[]},{"text":"impl Send for SurfaceCounterFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PeerMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for MemoryAllocateFlags","synthetic":true,"types":[]},{"text":"impl Send for DeviceGroupPresentModeFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for SwapchainCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for SubpassDescriptionFlags","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessageSeverityFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessageTypeFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DescriptorBindingFlags","synthetic":true,"types":[]},{"text":"impl Send for ConditionalRenderingFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for ResolveModeFlags","synthetic":true,"types":[]},{"text":"impl Send for GeometryInstanceFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for GeometryFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for BuildAccelerationStructureFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for FramebufferCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DeviceDiagnosticsConfigFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for PipelineCreationFeedbackFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterDescriptionFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for AcquireProfilingLockFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for ShaderCorePropertiesFlagsAMD","synthetic":true,"types":[]},{"text":"impl Send for ShaderModuleCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineCompilerControlFlagsAMD","synthetic":true,"types":[]},{"text":"impl Send for ToolPurposeFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for QueryPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineDepthStencilStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineDynamicStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineColorBlendStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineMultisampleStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineRasterizationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineViewportStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineTessellationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineInputAssemblyStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineVertexInputStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for BufferViewCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for InstanceCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DeviceCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for EventCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for MemoryMapFlags","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolResetFlags","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DisplayModeCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplaySurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for AndroidSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for ViSurfaceCreateFlagsNN","synthetic":true,"types":[]},{"text":"impl Send for WaylandSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for Win32SurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for XlibSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for XcbSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for IOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl Send for MacOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl Send for MetalSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for ImagePipeSurfaceCreateFlagsFUCHSIA","synthetic":true,"types":[]},{"text":"impl Send for StreamDescriptorSurfaceCreateFlagsGGP","synthetic":true,"types":[]},{"text":"impl Send for HeadlessSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolTrimFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineViewportSwizzleStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for PipelineDiscardRectangleStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PipelineCoverageToColorStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for PipelineCoverageModulationStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for PipelineCoverageReductionStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for ValidationCacheCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessengerCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessengerCallbackDataFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PipelineRasterizationConservativeStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PipelineRasterizationStateStreamCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PipelineRasterizationDepthClipStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DeviceMemory","synthetic":true,"types":[]},{"text":"impl Send for CommandPool","synthetic":true,"types":[]},{"text":"impl Send for Buffer","synthetic":true,"types":[]},{"text":"impl Send for BufferView","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl Send for ImageView","synthetic":true,"types":[]},{"text":"impl Send for ShaderModule","synthetic":true,"types":[]},{"text":"impl Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayout","synthetic":true,"types":[]},{"text":"impl Send for Sampler","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSet","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPool","synthetic":true,"types":[]},{"text":"impl Send for Fence","synthetic":true,"types":[]},{"text":"impl Send for Semaphore","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for QueryPool","synthetic":true,"types":[]},{"text":"impl Send for Framebuffer","synthetic":true,"types":[]},{"text":"impl Send for RenderPass","synthetic":true,"types":[]},{"text":"impl Send for PipelineCache","synthetic":true,"types":[]},{"text":"impl Send for IndirectCommandsLayoutNV","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplate","synthetic":true,"types":[]},{"text":"impl Send for SamplerYcbcrConversion","synthetic":true,"types":[]},{"text":"impl Send for ValidationCacheEXT","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl Send for PerformanceConfigurationINTEL","synthetic":true,"types":[]},{"text":"impl Send for DeferredOperationKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplayKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplayModeKHR","synthetic":true,"types":[]},{"text":"impl Send for SurfaceKHR","synthetic":true,"types":[]},{"text":"impl Send for SwapchainKHR","synthetic":true,"types":[]},{"text":"impl Send for DebugReportCallbackEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessengerEXT","synthetic":true,"types":[]},{"text":"impl !Send for BaseOutStructure","synthetic":true,"types":[]},{"text":"impl !Send for BaseInStructure","synthetic":true,"types":[]},{"text":"impl Send for Offset2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Offset2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Offset3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Offset3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Extent2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Extent2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Extent3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Extent3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ViewportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Rect2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Rect2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ClearRect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ClearRectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ComponentMapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ComponentMappingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDevicePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ExtensionPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for LayerProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for LayerPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ApplicationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AllocationCallbacksBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceQueueCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for InstanceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for QueueFamilyPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDeviceMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SparseImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SparseImageMemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryTypeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for MemoryHeap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryHeapBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MappedMemoryRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for FormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WriteDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CopyDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageSubresourceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageSubresourceLayersBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageSubresourceRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubresourceLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BufferCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SparseMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SparseImageMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseBufferMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseImageOpaqueMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseImageMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageBlit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageBlitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ShaderModuleCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetLayoutBindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorPoolSizeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SpecializationMapEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SpecializationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineShaderStageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ComputePipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexInputBindingDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexInputAttributeDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineVertexInputStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineInputAssemblyStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineTessellationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineMultisampleStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineColorBlendAttachmentStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineColorBlendStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineDynamicStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for StencilOpState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StencilOpStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineDepthStencilStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GraphicsPipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCacheCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PushConstantRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferInheritanceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ClearDepthStencilValueBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ClearAttachment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ClearAttachmentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AttachmentDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AttachmentReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AttachmentReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubpassDependencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for EventCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDeviceFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDeviceSparsePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDeviceLimitsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueryPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FramebufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DrawIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DrawIndexedIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DispatchIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DisplayPlanePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DisplayModeParametersKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DisplayModePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayModeCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DisplayPlaneCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplaySurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AndroidSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ViSurfaceCreateInfoNNBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WaylandSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Win32SurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for XlibSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for XcbSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImagePipeSurfaceCreateInfoFUCHSIA","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImagePipeSurfaceCreateInfoFUCHSIABuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StreamDescriptorSurfaceCreateInfoGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for StreamDescriptorSurfaceCreateInfoGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SurfaceFormatKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugReportCallbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugReportCallbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ValidationFlagsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ValidationFlagsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ValidationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ValidationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationStateRasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationStateRasterizationOrderAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugMarkerObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugMarkerObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugMarkerObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugMarkerObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugMarkerMarkerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugMarkerMarkerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DedicatedAllocationImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DedicatedAllocationImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DedicatedAllocationBufferCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DedicatedAllocationBufferCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DedicatedAllocationMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DedicatedAllocationMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ExternalImageFormatPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ExternalImageFormatPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalMemoryImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalMemoryImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Win32KeyedMutexAcquireReleaseInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Win32KeyedMutexAcquireReleaseInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDeviceGeneratedCommandsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDeviceGeneratedCommandsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GraphicsShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GraphicsShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GraphicsPipelineShaderGroupsCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GraphicsPipelineShaderGroupsCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindShaderGroupIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindShaderGroupIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindIndexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindIndexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindVertexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindVertexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SetStateFlagsIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SetStateFlagsIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for IndirectCommandsStreamNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IndirectCommandsStreamNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IndirectCommandsLayoutTokenNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for IndirectCommandsLayoutTokenNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IndirectCommandsLayoutCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for IndirectCommandsLayoutCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeneratedCommandsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeneratedCommandsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeneratedCommandsMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeneratedCommandsMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFeatures2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFeatures2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueueFamilyProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueueFamilyProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMemoryProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMemoryProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSparseImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSparseImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePushDescriptorPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ConformanceVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ConformanceVersionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDriverProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDriverPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentRegionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RectLayerKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVariablePointersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVariablePointersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ExternalMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalImageFormatInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalImageFormatInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalBufferProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalBufferPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceIDProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceIDPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalMemoryImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalMemoryImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalMemoryBufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalMemoryBufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportMemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportMemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryWin32HandlePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryWin32HandlePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportMemoryFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportMemoryFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryFdPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryFdPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Win32KeyedMutexAcquireReleaseInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Win32KeyedMutexAcquireReleaseInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalSemaphoreInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalSemaphoreInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportSemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportSemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for D3D12FenceSubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for D3D12FenceSubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportSemaphoreFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportSemaphoreFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalFenceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalFenceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalFenceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalFencePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportFenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportFenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FenceGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FenceGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportFenceFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportFenceFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FenceGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FenceGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMultiviewFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMultiviewFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMultiviewProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMultiviewPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassMultiviewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassMultiviewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceCapabilities2EXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceCapabilities2EXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPowerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPowerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainCounterCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SwapchainCounterCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceGroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceGroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryAllocateFlagsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryAllocateFlagsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindBufferMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindBufferMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindBufferMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindBufferMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindImageMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindImageMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindImageMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindImageMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupRenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupRenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupCommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupCommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupBindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupBindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupPresentCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupPresentCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindImageMemorySwapchainInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindImageMemorySwapchainInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AcquireNextImageInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AcquireNextImageInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupDeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupDeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplateEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorUpdateTemplateEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorUpdateTemplateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorUpdateTemplateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for XYColorEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for XYColorEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for HdrMetadataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for HdrMetadataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayNativeHdrSurfaceCapabilitiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayNativeHdrSurfaceCapabilitiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainDisplayNativeHdrCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SwapchainDisplayNativeHdrCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RefreshCycleDurationGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RefreshCycleDurationGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PastPresentationTimingGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PastPresentationTimingGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentTimesInfoGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentTimesInfoGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PresentTimeGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PresentTimeGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for IOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MacOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MetalSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MetalSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ViewportWScalingNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ViewportWScalingNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportWScalingStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportWScalingStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ViewportSwizzleNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ViewportSwizzleNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportSwizzleStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportSwizzleStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDiscardRectanglePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDiscardRectanglePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineDiscardRectangleStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineDiscardRectangleStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for InputAttachmentAspectReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for InputAttachmentAspectReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassInputAttachmentAspectCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassInputAttachmentAspectCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSurfaceInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSurfaceInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceFormat2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceFormat2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPlaneProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPlaneProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayModeProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayModeProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPlaneInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPlaneInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPlaneCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPlaneCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SharedPresentSurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SharedPresentSurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevice16BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevice16BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSubgroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderSubgroupExtendedTypesFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderSubgroupExtendedTypesFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageSparseMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageSparseMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageMemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseImageMemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePointClippingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePointClippingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryDedicatedRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryDedicatedRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryDedicatedAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryDedicatedAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageViewUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineTessellationDomainOriginStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineTessellationDomainOriginStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerYcbcrConversionInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerYcbcrConversionInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerYcbcrConversionCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerYcbcrConversionCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindImagePlaneMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindImagePlaneMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImagePlaneMemoryRequirementsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImagePlaneMemoryRequirementsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSamplerYcbcrConversionFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSamplerYcbcrConversionFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerYcbcrConversionImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerYcbcrConversionImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for TextureLODGatherFormatPropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TextureLODGatherFormatPropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ConditionalRenderingBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ConditionalRenderingBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ProtectedSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ProtectedSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceProtectedMemoryFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceProtectedMemoryFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceProtectedMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceProtectedMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceQueueInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceQueueInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCoverageToColorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCoverageToColorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSamplerFilterMinmaxProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSamplerFilterMinmaxPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SampleLocationEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SampleLocationEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SampleLocationsInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SampleLocationsInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassSampleLocationsBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassSampleLocationsBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineSampleLocationsStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineSampleLocationsStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSampleLocationsPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSampleLocationsPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MultisamplePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MultisamplePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerReductionModeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerReductionModeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBlendOperationAdvancedFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceBlendOperationAdvancedFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBlendOperationAdvancedPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceBlendOperationAdvancedPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineColorBlendAdvancedStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineColorBlendAdvancedStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceInlineUniformBlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceInlineUniformBlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceInlineUniformBlockPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceInlineUniformBlockPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for WriteDescriptorSetInlineUniformBlockEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WriteDescriptorSetInlineUniformBlockEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorPoolInlineUniformBlockCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorPoolInlineUniformBlockCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCoverageModulationStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCoverageModulationStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageFormatListCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageFormatListCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ShaderModuleValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ShaderModuleValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMaintenance3Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMaintenance3PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderDrawParametersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderDrawParametersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderFloat16Int8Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderFloat16Int8FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFloatControlsProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFloatControlsPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceHostQueryResetFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceHostQueryResetFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for NativeBufferUsage2ANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for NativeBufferUsage2ANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for NativeBufferANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for NativeBufferANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainImageCreateInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SwapchainImageCreateInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePresentationPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePresentationPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ShaderResourceUsageAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ShaderResourceUsageAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ShaderStatisticsInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ShaderStatisticsInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceQueueGlobalPriorityCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceQueueGlobalPriorityCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsLabelEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsMessengerCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsMessengerCallbackDataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportMemoryHostPointerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportMemoryHostPointerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryHostPointerPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryHostPointerPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalMemoryHostPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalMemoryHostPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceConservativeRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceConservativeRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CalibratedTimestampInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CalibratedTimestampInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderCorePropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderCorePropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderCoreProperties2AMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderCoreProperties2AMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationConservativeStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationConservativeStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDescriptorIndexingFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDescriptorIndexingFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDescriptorIndexingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDescriptorIndexingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutBindingFlagsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetLayoutBindingFlagsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetVariableDescriptorCountAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetVariableDescriptorCountAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetVariableDescriptorCountLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetVariableDescriptorCountLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentReference2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentReference2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDependency2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassDependency2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassCreateInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassCreateInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassEndInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassEndInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTimelineSemaphoreFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTimelineSemaphoreFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTimelineSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTimelineSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreTypeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreTypeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for TimelineSemaphoreSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TimelineSemaphoreSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreWaitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreWaitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreSignalInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreSignalInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for VertexInputBindingDivisorDescriptionEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexInputBindingDivisorDescriptionEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineVertexInputDivisorStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineVertexInputDivisorStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVertexAttributeDivisorPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVertexAttributeDivisorPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePCIBusInfoPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePCIBusInfoPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AndroidHardwareBufferUsageANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AndroidHardwareBufferUsageANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AndroidHardwareBufferPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AndroidHardwareBufferPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryGetAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryGetAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AndroidHardwareBufferFormatPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AndroidHardwareBufferFormatPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferInheritanceConditionalRenderingInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferInheritanceConditionalRenderingInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalFormatANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalFormatANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevice8BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevice8BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceConditionalRenderingFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceConditionalRenderingFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkanMemoryModelFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkanMemoryModelFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderAtomicInt64Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderAtomicInt64FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVertexAttributeDivisorFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVertexAttributeDivisorFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueueFamilyCheckpointPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueueFamilyCheckpointPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CheckpointDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CheckpointDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDepthStencilResolveProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDepthStencilResolvePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDescriptionDepthStencilResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassDescriptionDepthStencilResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewASTCDecodeModeEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageViewASTCDecodeModeEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceASTCDecodeFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceASTCDecodeFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTransformFeedbackFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTransformFeedbackFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTransformFeedbackPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTransformFeedbackPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationStateStreamCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationStateStreamCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceRepresentativeFragmentTestFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceRepresentativeFragmentTestFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRepresentativeFragmentTestStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRepresentativeFragmentTestStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExclusiveScissorFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExclusiveScissorFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportExclusiveScissorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportExclusiveScissorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCornerSampledImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCornerSampledImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceComputeShaderDerivativesFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceComputeShaderDerivativesFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFragmentShaderBarycentricFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFragmentShaderBarycentricFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderImageFootprintFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderImageFootprintFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ShadingRatePaletteNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ShadingRatePaletteNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportShadingRateImageStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportShadingRateImageStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShadingRateImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShadingRateImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShadingRateImagePropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShadingRateImagePropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CoarseSampleLocationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for CoarseSampleLocationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CoarseSampleOrderCustomNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CoarseSampleOrderCustomNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportCoarseSampleOrderStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportCoarseSampleOrderStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMeshShaderFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMeshShaderFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMeshShaderPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMeshShaderPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrawMeshTasksIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DrawMeshTasksIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingShaderGroupCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingShaderGroupCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingPipelineCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingPipelineCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingPipelineCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingPipelineCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeometryTrianglesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeometryTrianglesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeometryAABBNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeometryAABBNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeometryDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeometryDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeometryNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeometryNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindAccelerationStructureMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindAccelerationStructureMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for WriteDescriptorSetAccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WriteDescriptorSetAccelerationStructureKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureMemoryRequirementsInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureMemoryRequirementsInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceRayTracingFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceRayTracingFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceRayTracingPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceRayTracingPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceRayTracingPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceRayTracingPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for StridedBufferRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StridedBufferRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for TraceRaysIndirectCommandKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TraceRaysIndirectCommandKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DrmFormatModifierPropertiesListEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DrmFormatModifierPropertiesListEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImageDrmFormatModifierInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceImageDrmFormatModifierInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageDrmFormatModifierListCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageDrmFormatModifierListCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageDrmFormatModifierExplicitCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageDrmFormatModifierExplicitCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageDrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageDrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageStencilUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageStencilUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceMemoryOverallocationCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceMemoryOverallocationCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFragmentDensityMapFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFragmentDensityMapFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFragmentDensityMapPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFragmentDensityMapPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassFragmentDensityMapCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassFragmentDensityMapCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceScalarBlockLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceScalarBlockLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceProtectedCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceProtectedCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceUniformBufferStandardLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceUniformBufferStandardLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDepthClipEnableFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDepthClipEnableFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationDepthClipStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationDepthClipStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMemoryBudgetPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMemoryBudgetPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMemoryPriorityFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMemoryPriorityFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryPriorityAllocateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryPriorityAllocateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBufferDeviceAddressFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceBufferDeviceAddressFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBufferDeviceAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceBufferDeviceAddressFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferDeviceAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferOpaqueCaptureAddressCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferOpaqueCaptureAddressCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferDeviceAddressCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferDeviceAddressCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImageViewImageFormatInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceImageViewImageFormatInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FilterCubicImageViewImageFormatPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FilterCubicImageViewImageFormatPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImagelessFramebufferFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceImagelessFramebufferFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferAttachmentsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FramebufferAttachmentsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferAttachmentImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FramebufferAttachmentImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassAttachmentBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassAttachmentBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCooperativeMatrixFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCooperativeMatrixFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceYcbcrImageArraysFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceYcbcrImageArraysFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewHandleInfoNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageViewHandleInfoNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentFrameTokenGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentFrameTokenGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineCreationFeedbackEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineCreationFeedbackEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCreationFeedbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCreationFeedbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceFullScreenExclusiveInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceFullScreenExclusiveWin32InfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceFullScreenExclusiveWin32InfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceCapabilitiesFullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceCapabilitiesFullScreenExclusiveEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePerformanceQueryFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePerformanceQueryFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePerformanceQueryPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePerformanceQueryPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceCounterKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceCounterKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceCounterDescriptionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceCounterDescriptionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueryPoolPerformanceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueryPoolPerformanceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AcquireProfilingLockInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AcquireProfilingLockInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceQuerySubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceQuerySubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for HeadlessSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for HeadlessSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCoverageReductionModeFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCoverageReductionModeFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCoverageReductionStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCoverageReductionStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferMixedSamplesCombinationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FramebufferMixedSamplesCombinationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderIntegerFunctions2FeaturesINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceValueINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceValueINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for InitializePerformanceApiInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for InitializePerformanceApiInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueryPoolPerformanceQueryCreateInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueryPoolPerformanceQueryCreateInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceStreamMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceStreamMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceOverrideInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceOverrideInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceConfigurationAcquireInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceConfigurationAcquireInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderClockFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderClockFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceIndexTypeUint8FeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceIndexTypeUint8FeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderSMBuiltinsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderSMBuiltinsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderSMBuiltinsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderSMBuiltinsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFragmentShaderInterlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFragmentShaderInterlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSeparateDepthStencilLayoutsFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSeparateDepthStencilLayoutsFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentReferenceStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentReferenceStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentDescriptionStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentDescriptionStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePipelineExecutablePropertiesFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineExecutablePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineExecutablePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineExecutableInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineExecutableInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineExecutableStatisticKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineExecutableStatisticKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineExecutableInternalRepresentationKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineExecutableInternalRepresentationKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTexelBufferAlignmentFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTexelBufferAlignmentFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTexelBufferAlignmentPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTexelBufferAlignmentPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSubgroupSizeControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSubgroupSizeControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSubgroupSizeControlPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSubgroupSizeControlPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryOpaqueCaptureAddressAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryOpaqueCaptureAddressAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceMemoryOpaqueCaptureAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceMemoryOpaqueCaptureAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceLineRasterizationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceLineRasterizationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceLineRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceLineRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationLineStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationLineStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePipelineCreationCacheControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePipelineCreationCacheControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkan11Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkan11FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkan11Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkan11PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkan12Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkan12FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkan12Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkan12PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCompilerControlCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCompilerControlCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCoherentMemoryFeaturesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCoherentMemoryFeaturesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceToolPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceToolPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryTrianglesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureGeometryTrianglesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryAabbsDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureGeometryAabbsDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryInstancesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureGeometryInstancesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureGeometryKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureBuildGeometryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureBuildGeometryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureBuildOffsetInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AccelerationStructureBuildOffsetInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureCreateGeometryTypeInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureCreateGeometryTypeInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AabbPositionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AabbPositionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for TransformMatrixKHR","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureInstanceKHR","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureDeviceAddressInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureDeviceAddressInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureVersionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureVersionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CopyAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CopyAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CopyAccelerationStructureToMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CopyAccelerationStructureToMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CopyMemoryToAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CopyMemoryToAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingPipelineInterfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingPipelineInterfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeferredOperationInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeferredOperationInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineLibraryCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineLibraryCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassTransformBeginInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassTransformBeginInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferInheritanceRenderPassTransformInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferInheritanceRenderPassTransformInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDiagnosticsConfigFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDiagnosticsConfigFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceDiagnosticsConfigCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceDiagnosticsConfigCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageLayout","synthetic":true,"types":[]},{"text":"impl Send for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl Send for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl Send for ImageType","synthetic":true,"types":[]},{"text":"impl Send for ImageTiling","synthetic":true,"types":[]},{"text":"impl Send for ImageViewType","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferLevel","synthetic":true,"types":[]},{"text":"impl Send for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl Send for DescriptorType","synthetic":true,"types":[]},{"text":"impl Send for QueryType","synthetic":true,"types":[]},{"text":"impl Send for BorderColor","synthetic":true,"types":[]},{"text":"impl Send for PipelineBindPoint","synthetic":true,"types":[]},{"text":"impl Send for PipelineCacheHeaderVersion","synthetic":true,"types":[]},{"text":"impl Send for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl Send for SharingMode","synthetic":true,"types":[]},{"text":"impl Send for IndexType","synthetic":true,"types":[]},{"text":"impl Send for Filter","synthetic":true,"types":[]},{"text":"impl Send for SamplerMipmapMode","synthetic":true,"types":[]},{"text":"impl Send for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl Send for CompareOp","synthetic":true,"types":[]},{"text":"impl Send for PolygonMode","synthetic":true,"types":[]},{"text":"impl Send for FrontFace","synthetic":true,"types":[]},{"text":"impl Send for BlendFactor","synthetic":true,"types":[]},{"text":"impl Send for BlendOp","synthetic":true,"types":[]},{"text":"impl Send for StencilOp","synthetic":true,"types":[]},{"text":"impl Send for LogicOp","synthetic":true,"types":[]},{"text":"impl Send for InternalAllocationType","synthetic":true,"types":[]},{"text":"impl Send for SystemAllocationScope","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl Send for VertexInputRate","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for StructureType","synthetic":true,"types":[]},{"text":"impl Send for SubpassContents","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for DynamicState","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplateType","synthetic":true,"types":[]},{"text":"impl Send for ObjectType","synthetic":true,"types":[]},{"text":"impl Send for SemaphoreType","synthetic":true,"types":[]},{"text":"impl Send for PresentModeKHR","synthetic":true,"types":[]},{"text":"impl Send for ColorSpaceKHR","synthetic":true,"types":[]},{"text":"impl Send for TimeDomainEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugReportObjectTypeEXT","synthetic":true,"types":[]},{"text":"impl Send for RasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl Send for ValidationCheckEXT","synthetic":true,"types":[]},{"text":"impl Send for ValidationFeatureEnableEXT","synthetic":true,"types":[]},{"text":"impl Send for ValidationFeatureDisableEXT","synthetic":true,"types":[]},{"text":"impl Send for IndirectCommandsTokenTypeNV","synthetic":true,"types":[]},{"text":"impl Send for DisplayPowerStateEXT","synthetic":true,"types":[]},{"text":"impl Send for DeviceEventTypeEXT","synthetic":true,"types":[]},{"text":"impl Send for DisplayEventTypeEXT","synthetic":true,"types":[]},{"text":"impl Send for ViewportCoordinateSwizzleNV","synthetic":true,"types":[]},{"text":"impl Send for DiscardRectangleModeEXT","synthetic":true,"types":[]},{"text":"impl Send for PointClippingBehavior","synthetic":true,"types":[]},{"text":"impl Send for SamplerReductionMode","synthetic":true,"types":[]},{"text":"impl Send for TessellationDomainOrigin","synthetic":true,"types":[]},{"text":"impl Send for SamplerYcbcrModelConversion","synthetic":true,"types":[]},{"text":"impl Send for SamplerYcbcrRange","synthetic":true,"types":[]},{"text":"impl Send for ChromaLocation","synthetic":true,"types":[]},{"text":"impl Send for BlendOverlapEXT","synthetic":true,"types":[]},{"text":"impl Send for CoverageModulationModeNV","synthetic":true,"types":[]},{"text":"impl Send for CoverageReductionModeNV","synthetic":true,"types":[]},{"text":"impl Send for ValidationCacheHeaderVersionEXT","synthetic":true,"types":[]},{"text":"impl Send for ShaderInfoTypeAMD","synthetic":true,"types":[]},{"text":"impl Send for QueueGlobalPriorityEXT","synthetic":true,"types":[]},{"text":"impl Send for ConservativeRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl Send for VendorId","synthetic":true,"types":[]},{"text":"impl Send for DriverId","synthetic":true,"types":[]},{"text":"impl Send for ShadingRatePaletteEntryNV","synthetic":true,"types":[]},{"text":"impl Send for CoarseSampleOrderTypeNV","synthetic":true,"types":[]},{"text":"impl Send for CopyAccelerationStructureModeKHR","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for GeometryTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureMemoryRequirementsTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureBuildTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for RayTracingShaderGroupTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for MemoryOverallocationBehaviorAMD","synthetic":true,"types":[]},{"text":"impl Send for ScopeNV","synthetic":true,"types":[]},{"text":"impl Send for ComponentTypeNV","synthetic":true,"types":[]},{"text":"impl Send for FullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterScopeKHR","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterUnitKHR","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterStorageKHR","synthetic":true,"types":[]},{"text":"impl Send for PerformanceConfigurationTypeINTEL","synthetic":true,"types":[]},{"text":"impl Send for QueryPoolSamplingModeINTEL","synthetic":true,"types":[]},{"text":"impl Send for PerformanceOverrideTypeINTEL","synthetic":true,"types":[]},{"text":"impl Send for PerformanceParameterTypeINTEL","synthetic":true,"types":[]},{"text":"impl Send for PerformanceValueTypeINTEL","synthetic":true,"types":[]},{"text":"impl Send for ShaderFloatControlsIndependence","synthetic":true,"types":[]},{"text":"impl Send for PipelineExecutableStatisticFormatKHR","synthetic":true,"types":[]},{"text":"impl Send for LineRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl Send for ClearColorValue","synthetic":true,"types":[]},{"text":"impl Send for ClearValue","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterResultKHR","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceValueDataINTEL","synthetic":true,"types":[]},{"text":"impl Send for PipelineExecutableStatisticValueKHR","synthetic":true,"types":[]},{"text":"impl !Send for DeviceOrHostAddressKHR","synthetic":true,"types":[]},{"text":"impl !Send for DeviceOrHostAddressConstKHR","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryDataKHR","synthetic":true,"types":[]},{"text":"impl Send for GpaSqShaderStageFlags","synthetic":true,"types":[]},{"text":"impl Send for GpaDeviceClockModeAmd","synthetic":true,"types":[]},{"text":"impl Send for GpaPerfBlockAmd","synthetic":true,"types":[]},{"text":"impl Send for GpaSampleTypeAmd","synthetic":true,"types":[]},{"text":"impl Send for GpaSessionAmd","synthetic":true,"types":[]},{"text":"impl !Send for GpaSessionCreateInfoAmd","synthetic":true,"types":[]},{"text":"impl Send for GpaPerfBlockPropertiesAmd","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceGpaFeaturesAmd","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceGpaPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceGpaPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for GpaPerfCounterAmd","synthetic":true,"types":[]},{"text":"impl !Send for GpaSampleBeginInfoAmd","synthetic":true,"types":[]},{"text":"impl !Send for GpaDeviceClockModeInfoAmd","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceWaveLimitPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceWaveLimitPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineShaderStageCreateInfoWaveLimitAmd","synthetic":true,"types":[]},{"text":"impl Send for DebugMarker","synthetic":true,"types":[]},{"text":"impl Send for DebugReport","synthetic":true,"types":[]},{"text":"impl Send for DebugUtils","synthetic":true,"types":[]},{"text":"impl Send for MetalSurface","synthetic":true,"types":[]},{"text":"impl Send for AndroidSurface","synthetic":true,"types":[]},{"text":"impl Send for Display","synthetic":true,"types":[]},{"text":"impl Send for DisplaySwapchain","synthetic":true,"types":[]},{"text":"impl Send for DrawIndirectCount","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryFd","synthetic":true,"types":[]},{"text":"impl Send for PushDescriptor","synthetic":true,"types":[]},{"text":"impl Send for RayTracing","synthetic":true,"types":[]},{"text":"impl Send for Surface","synthetic":true,"types":[]},{"text":"impl Send for Swapchain","synthetic":true,"types":[]},{"text":"impl Send for TimelineSemaphore","synthetic":true,"types":[]},{"text":"impl Send for WaylandSurface","synthetic":true,"types":[]},{"text":"impl Send for Win32Surface","synthetic":true,"types":[]},{"text":"impl Send for XcbSurface","synthetic":true,"types":[]},{"text":"impl Send for XlibSurface","synthetic":true,"types":[]},{"text":"impl Send for IOSSurface","synthetic":true,"types":[]},{"text":"impl Send for MacOSSurface","synthetic":true,"types":[]},{"text":"impl Send for MeshShader","synthetic":true,"types":[]},{"text":"impl Send for RayTracing","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":false,"types":[]},{"text":"impl Send for PhysicalDevice","synthetic":false,"types":[]},{"text":"impl Send for Device","synthetic":false,"types":[]},{"text":"impl Send for Queue","synthetic":false,"types":[]},{"text":"impl Send for CommandBuffer","synthetic":false,"types":[]},{"text":"impl Send for KhrSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSwapchainFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDisplayFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDisplaySwapchainFn","synthetic":false,"types":[]},{"text":"impl Send for KhrXlibSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrXcbSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrWaylandSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrMirSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrAndroidSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrWin32SurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for AndroidNativeBufferFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDebugReportFn","synthetic":false,"types":[]},{"text":"impl Send for NvGlslShaderFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDepthRangeUnrestrictedFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSamplerMirrorClampToEdgeFn","synthetic":false,"types":[]},{"text":"impl Send for ImgFilterCubicFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension17Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension18Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdRasterizationOrderFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension20Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderTrinaryMinmaxFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderExplicitVertexParameterFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDebugMarkerFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension24Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension25Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdGcnShaderFn","synthetic":false,"types":[]},{"text":"impl Send for NvDedicatedAllocationFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension28Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtTransformFeedbackFn","synthetic":false,"types":[]},{"text":"impl Send for NvxExtension30Fn","synthetic":false,"types":[]},{"text":"impl Send for NvxImageViewHandleFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension32Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension33Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdDrawIndirectCountFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension35Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdNegativeViewportHeightFn","synthetic":false,"types":[]},{"text":"impl Send for AmdGpuShaderHalfFloatFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderBallotFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension39Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension40Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension41Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdTextureGatherBiasLodFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderInfoFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension44Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension45Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension46Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderImageLoadStoreLodFn","synthetic":false,"types":[]},{"text":"impl Send for NvxExtension48Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension49Fn","synthetic":false,"types":[]},{"text":"impl Send for GgpStreamDescriptorSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for NvCornerSampledImageFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension52Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension53Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrMultiviewFn","synthetic":false,"types":[]},{"text":"impl Send for ImgFormatPvrtcFn","synthetic":false,"types":[]},{"text":"impl Send for NvExternalMemoryCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for NvExternalMemoryFn","synthetic":false,"types":[]},{"text":"impl Send for NvExternalMemoryWin32Fn","synthetic":false,"types":[]},{"text":"impl Send for NvWin32KeyedMutexFn","synthetic":false,"types":[]},{"text":"impl Send for KhrGetPhysicalDeviceProperties2Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDeviceGroupFn","synthetic":false,"types":[]},{"text":"impl Send for ExtValidationFlagsFn","synthetic":false,"types":[]},{"text":"impl Send for NnViSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderDrawParametersFn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderSubgroupBallotFn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderSubgroupVoteFn","synthetic":false,"types":[]},{"text":"impl Send for ExtTextureCompressionAstcHdrFn","synthetic":false,"types":[]},{"text":"impl Send for ExtAstcDecodeModeFn","synthetic":false,"types":[]},{"text":"impl Send for ImgExtension69Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrMaintenance1Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDeviceGroupCreationFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalMemoryCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalMemoryFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalMemoryWin32Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalMemoryFdFn","synthetic":false,"types":[]},{"text":"impl Send for KhrWin32KeyedMutexFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalSemaphoreCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalSemaphoreFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalSemaphoreWin32Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalSemaphoreFdFn","synthetic":false,"types":[]},{"text":"impl Send for KhrPushDescriptorFn","synthetic":false,"types":[]},{"text":"impl Send for ExtConditionalRenderingFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderFloat16Int8Fn","synthetic":false,"types":[]},{"text":"impl Send for Khr16bitStorageFn","synthetic":false,"types":[]},{"text":"impl Send for KhrIncrementalPresentFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDescriptorUpdateTemplateFn","synthetic":false,"types":[]},{"text":"impl Send for NvxDeviceGeneratedCommandsFn","synthetic":false,"types":[]},{"text":"impl Send for NvClipSpaceWScalingFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDirectModeDisplayFn","synthetic":false,"types":[]},{"text":"impl Send for ExtAcquireXlibDisplayFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDisplaySurfaceCounterFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDisplayControlFn","synthetic":false,"types":[]},{"text":"impl Send for GoogleDisplayTimingFn","synthetic":false,"types":[]},{"text":"impl Send for NvSampleMaskOverrideCoverageFn","synthetic":false,"types":[]},{"text":"impl Send for NvGeometryShaderPassthroughFn","synthetic":false,"types":[]},{"text":"impl Send for NvViewportArray2Fn","synthetic":false,"types":[]},{"text":"impl Send for NvxMultiviewPerViewAttributesFn","synthetic":false,"types":[]},{"text":"impl Send for NvViewportSwizzleFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDiscardRectanglesFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension101Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtConservativeRasterizationFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDepthClipEnableFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension104Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtSwapchainColorspaceFn","synthetic":false,"types":[]},{"text":"impl Send for ExtHdrMetadataFn","synthetic":false,"types":[]},{"text":"impl Send for ImgExtension107Fn","synthetic":false,"types":[]},{"text":"impl Send for ImgExtension108Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrImagelessFramebufferFn","synthetic":false,"types":[]},{"text":"impl Send for KhrCreateRenderpass2Fn","synthetic":false,"types":[]},{"text":"impl Send for ImgExtension111Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrSharedPresentableImageFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalFenceCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalFenceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalFenceWin32Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalFenceFdFn","synthetic":false,"types":[]},{"text":"impl Send for KhrPerformanceQueryFn","synthetic":false,"types":[]},{"text":"impl Send for KhrMaintenance2Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension119Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrGetSurfaceCapabilities2Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrVariablePointersFn","synthetic":false,"types":[]},{"text":"impl Send for KhrGetDisplayProperties2Fn","synthetic":false,"types":[]},{"text":"impl Send for MvkIosSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for MvkMacosSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for MvkMoltenvkFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExternalMemoryDmaBufFn","synthetic":false,"types":[]},{"text":"impl Send for ExtQueueFamilyForeignFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDedicatedAllocationFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDebugUtilsFn","synthetic":false,"types":[]},{"text":"impl Send for AndroidExternalMemoryAndroidHardwareBufferFn","synthetic":false,"types":[]},{"text":"impl Send for ExtSamplerFilterMinmaxFn","synthetic":false,"types":[]},{"text":"impl Send for KhrStorageBufferStorageClassFn","synthetic":false,"types":[]},{"text":"impl Send for AmdGpuShaderInt16Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension134Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension135Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension136Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdMixedAttachmentSamplesFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderFragmentMaskFn","synthetic":false,"types":[]},{"text":"impl Send for ExtInlineUniformBlockFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension140Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderStencilExportFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension142Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension143Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtSampleLocationsFn","synthetic":false,"types":[]},{"text":"impl Send for KhrRelaxedBlockLayoutFn","synthetic":false,"types":[]},{"text":"impl Send for KhrGetMemoryRequirements2Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrImageFormatListFn","synthetic":false,"types":[]},{"text":"impl Send for ExtBlendOperationAdvancedFn","synthetic":false,"types":[]},{"text":"impl Send for NvFragmentCoverageToColorFn","synthetic":false,"types":[]},{"text":"impl Send for KhrRayTracingFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension152Fn","synthetic":false,"types":[]},{"text":"impl Send for NvFramebufferMixedSamplesFn","synthetic":false,"types":[]},{"text":"impl Send for NvFillRectangleFn","synthetic":false,"types":[]},{"text":"impl Send for NvShaderSmBuiltinsFn","synthetic":false,"types":[]},{"text":"impl Send for ExtPostDepthCoverageFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSamplerYcbcrConversionFn","synthetic":false,"types":[]},{"text":"impl Send for KhrBindMemory2Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtImageDrmFormatModifierFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension160Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtValidationCacheFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDescriptorIndexingFn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderViewportIndexLayerFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension164Fn","synthetic":false,"types":[]},{"text":"impl Send for NvShadingRateImageFn","synthetic":false,"types":[]},{"text":"impl Send for NvRayTracingFn","synthetic":false,"types":[]},{"text":"impl Send for NvRepresentativeFragmentTestFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension168Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrMaintenance3Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDrawIndirectCountFn","synthetic":false,"types":[]},{"text":"impl Send for ExtFilterCubicFn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension172Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension173Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension174Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtGlobalPriorityFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderSubgroupExtendedTypesFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension177Fn","synthetic":false,"types":[]},{"text":"impl Send for Khr8bitStorageFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExternalMemoryHostFn","synthetic":false,"types":[]},{"text":"impl Send for AmdBufferMarkerFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderAtomicInt64Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderClockFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension183Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdPipelineCompilerControlFn","synthetic":false,"types":[]},{"text":"impl Send for ExtCalibratedTimestampsFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderCorePropertiesFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension187Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension188Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension189Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdMemoryOverallocationBehaviorFn","synthetic":false,"types":[]},{"text":"impl Send for ExtVertexAttributeDivisorFn","synthetic":false,"types":[]},{"text":"impl Send for GgpFrameTokenFn","synthetic":false,"types":[]},{"text":"impl Send for ExtPipelineCreationFeedbackFn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension194Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension195Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension196Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDriverPropertiesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderFloatControlsFn","synthetic":false,"types":[]},{"text":"impl Send for NvShaderSubgroupPartitionedFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDepthStencilResolveFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSwapchainMutableFormatFn","synthetic":false,"types":[]},{"text":"impl Send for NvComputeShaderDerivativesFn","synthetic":false,"types":[]},{"text":"impl Send for NvMeshShaderFn","synthetic":false,"types":[]},{"text":"impl Send for NvFragmentShaderBarycentricFn","synthetic":false,"types":[]},{"text":"impl Send for NvShaderImageFootprintFn","synthetic":false,"types":[]},{"text":"impl Send for NvScissorExclusiveFn","synthetic":false,"types":[]},{"text":"impl Send for NvDeviceDiagnosticCheckpointsFn","synthetic":false,"types":[]},{"text":"impl Send for KhrTimelineSemaphoreFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension209Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelShaderIntegerFunctions2Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelPerformanceQueryFn","synthetic":false,"types":[]},{"text":"impl Send for KhrVulkanMemoryModelFn","synthetic":false,"types":[]},{"text":"impl Send for ExtPciBusInfoFn","synthetic":false,"types":[]},{"text":"impl Send for AmdDisplayNativeHdrFn","synthetic":false,"types":[]},{"text":"impl Send for FuchsiaImagepipeSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension216Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension217Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtMetalSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for ExtFragmentDensityMapFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension220Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension221Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtScalarBlockLayoutFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension223Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleHlslFunctionality1Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleDecorateStringFn","synthetic":false,"types":[]},{"text":"impl Send for ExtSubgroupSizeControlFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension227Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderCoreProperties2Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension229Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdDeviceCoherentMemoryFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension231Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension232Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension233Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension234Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension235Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension236Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrSpirv14Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtMemoryBudgetFn","synthetic":false,"types":[]},{"text":"impl Send for ExtMemoryPriorityFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSurfaceProtectedCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for NvDedicatedAllocationImageAliasingFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSeparateDepthStencilLayoutsFn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension243Fn","synthetic":false,"types":[]},{"text":"impl Send for MesaExtension244Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtBufferDeviceAddressFn","synthetic":false,"types":[]},{"text":"impl Send for ExtToolingInfoFn","synthetic":false,"types":[]},{"text":"impl Send for ExtSeparateStencilUsageFn","synthetic":false,"types":[]},{"text":"impl Send for ExtValidationFeaturesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension249Fn","synthetic":false,"types":[]},{"text":"impl Send for NvCooperativeMatrixFn","synthetic":false,"types":[]},{"text":"impl Send for NvCoverageReductionModeFn","synthetic":false,"types":[]},{"text":"impl Send for ExtFragmentShaderInterlockFn","synthetic":false,"types":[]},{"text":"impl Send for ExtYcbcrImageArraysFn","synthetic":false,"types":[]},{"text":"impl Send for KhrUniformBufferStandardLayoutFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension255Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtFullScreenExclusiveFn","synthetic":false,"types":[]},{"text":"impl Send for ExtHeadlessSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrBufferDeviceAddressFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension259Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtLineRasterizationFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension261Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtHostQueryResetFn","synthetic":false,"types":[]},{"text":"impl Send for GgpExtension263Fn","synthetic":false,"types":[]},{"text":"impl Send for BrcmExtension264Fn","synthetic":false,"types":[]},{"text":"impl Send for BrcmExtension265Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtIndexTypeUint8Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension267Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension268Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDeferredHostOperationsFn","synthetic":false,"types":[]},{"text":"impl Send for KhrPipelineExecutablePropertiesFn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension271Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension272Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension273Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension274Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension275Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension276Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderDemoteToHelperInvocationFn","synthetic":false,"types":[]},{"text":"impl Send for NvDeviceGeneratedCommandsFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension279Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension280Fn","synthetic":false,"types":[]},{"text":"impl Send for ArmExtension281Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtTexelBufferAlignmentFn","synthetic":false,"types":[]},{"text":"impl Send for QcomRenderPassTransformFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension284Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension285Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension286Fn","synthetic":false,"types":[]},{"text":"impl Send for NvxExtension287Fn","synthetic":false,"types":[]},{"text":"impl Send for NvxExtension288Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension289Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleUserTypeFn","synthetic":false,"types":[]},{"text":"impl Send for KhrPipelineLibraryFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension292Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension293Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderNonSemanticInfoFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension295Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension296Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension297Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtPipelineCreationCacheControlFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension299Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension300Fn","synthetic":false,"types":[]},{"text":"impl Send for NvDeviceDiagnosticsConfigFn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension302Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension303Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension304Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension305Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension306Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension307Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension308Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension309Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension310Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension311Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension312Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension313Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension314Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension315Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension316Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension317Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension318Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension319Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension320Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension321Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension322Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension323Fn","synthetic":false,"types":[]},{"text":"impl Send for StaticFn","synthetic":false,"types":[]},{"text":"impl Send for EntryFnV1_0","synthetic":false,"types":[]},{"text":"impl Send for InstanceFnV1_0","synthetic":false,"types":[]},{"text":"impl Send for DeviceFnV1_0","synthetic":false,"types":[]},{"text":"impl Send for EntryFnV1_1","synthetic":false,"types":[]},{"text":"impl Send for InstanceFnV1_1","synthetic":false,"types":[]},{"text":"impl Send for DeviceFnV1_1","synthetic":false,"types":[]},{"text":"impl Send for EntryFnV1_2","synthetic":false,"types":[]},{"text":"impl Send for InstanceFnV1_2","synthetic":false,"types":[]},{"text":"impl Send for DeviceFnV1_2","synthetic":false,"types":[]},{"text":"impl Send for AmdGpaInterfaceFn","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Send for Stream","synthetic":true,"types":[]}];
implementors["bimap"] = [{"text":"impl&lt;L, R&gt; Send for Overwritten&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !Send for IntoIter&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Send for Iter&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Send for LeftValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Send for RightValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Send for LeftRange&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Send for RightRange&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !Send for IntoIter&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Send for Iter&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Send for LeftValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Send for RightValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Send for BiBTreeMap&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;L, R, LS, RS&gt; Send for BiHashMap&lt;L, R, LS, RS&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;LS: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;RS: Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["bit_set"] = [{"text":"impl&lt;B&gt; Send for BitSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Iter&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Union&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Intersection&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Difference&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for SymmetricDifference&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["bit_vec"] = [{"text":"impl&lt;B&gt; Send for BitVec&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Iter&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for IntoIter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Blocks&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Send for BigEndian","synthetic":true,"types":[]},{"text":"impl Send for LittleEndian","synthetic":true,"types":[]}];
implementors["calloop"] = [{"text":"impl&lt;Data&gt; !Send for EventLoop&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for InsertError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Data&gt; !Send for LoopHandle&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl Send for LoopSignal","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Send for Source&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Idle","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Send for Generic&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Send for Event&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for EventedFd&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EventedRawFd","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl !Send for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Timer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TimerHandle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl Send for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Send for ParseMonthError","synthetic":true,"types":[]},{"text":"impl Send for SecondsFormat","synthetic":true,"types":[]},{"text":"impl Send for RoundingError","synthetic":true,"types":[]},{"text":"impl Send for Weekday","synthetic":true,"types":[]},{"text":"impl Send for Month","synthetic":true,"types":[]},{"text":"impl Send for FixedOffset","synthetic":true,"types":[]},{"text":"impl Send for Local","synthetic":true,"types":[]},{"text":"impl Send for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for NaiveDate","synthetic":true,"types":[]},{"text":"impl Send for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Send for IsoWeek","synthetic":true,"types":[]},{"text":"impl Send for NaiveTime","synthetic":true,"types":[]},{"text":"impl Send for Parsed","synthetic":true,"types":[]},{"text":"impl Send for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Send for InternalFixed","synthetic":true,"types":[]},{"text":"impl Send for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Pad","synthetic":true,"types":[]},{"text":"impl Send for Numeric","synthetic":true,"types":[]},{"text":"impl Send for Fixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Send for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Send for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; !Send for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !Send for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for AppSettings","synthetic":true,"types":[]},{"text":"impl Send for ArgSettings","synthetic":true,"types":[]},{"text":"impl Send for Shell","synthetic":true,"types":[]},{"text":"impl Send for ErrorKind","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; !Send for BoxAllocation&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for VecAllocation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for VecEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for TryIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl Send for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl Send for TryReadyError","synthetic":true,"types":[]},{"text":"impl Send for TrySelectError","synthetic":true,"types":[]},{"text":"impl Send for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl Send for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Send for Select&lt;'_&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Send for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Worker&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Stealer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Injector&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T, P&gt; !Send for CompareAndSetError&lt;'g, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Send for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; !Send for Shared&lt;'g, T&gt;","synthetic":true,"types":[]},{"text":"impl !Send for LocalHandle","synthetic":true,"types":[]},{"text":"impl !Send for Guard","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Pointable + Send + Sync&gt; Send for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for Collector","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl Send for Backoff","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Send for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Send for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for Parker","synthetic":false,"types":[]},{"text":"impl Send for Unparker","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Send for ShardedLock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, '_&gt; Send for ScopedJoinHandle&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["dlib"] = [{"text":"impl Send for DlError","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Send for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["example_runner"] = [{"text":"impl Send for ExampleBase","synthetic":true,"types":[]},{"text":"impl Send for Vertex","synthetic":true,"types":[]},{"text":"impl Send for Options","synthetic":true,"types":[]}];
implementors["filetime"] = [{"text":"impl Send for FileTime","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Send for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UnboundedSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UnboundedReceiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Cancellation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl&lt;S&gt; Send for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Send for LocalPool","synthetic":true,"types":[]},{"text":"impl !Send for LocalSpawner","synthetic":true,"types":[]},{"text":"impl Send for Enter","synthetic":true,"types":[]},{"text":"impl Send for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl Send for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, '_&gt; Send for FutureObj&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;F&gt; Send for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Send for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; Send for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Remote&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for RemoteHandle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Shared&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Send for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Send for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Send for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Send for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; Send for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Send for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; Send for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Send for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Send for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Send for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Send for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Send for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Send for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Send for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Send for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AbortHandle","synthetic":true,"types":[]},{"text":"impl Send for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Send for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Send for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Send for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; Send for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Send for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Send for Next&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; Send for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; Send for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Send for SelectNextSome&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; Send for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Send for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; Send for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for BufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Buffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;St as Stream&gt;::Item as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for ForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Send for ReuniteError&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; Send for SplitSink&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for SplitStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; Send for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Send for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Send for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Send for TryNext&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Send for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for TryBufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Send for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Send for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for FuturesOrdered&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for SelectAll&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Send for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Send for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Send for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Send for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Send for Close&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; Send for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Send for Flush&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; Send for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; Send for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Send for Send&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; Send for SendAll&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Send for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; Send for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; Send for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Send for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for Close&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Send for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Send for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for FillBuf&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for Flush&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; Send for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for Read&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadVectored&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadExact&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadLine&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadToEnd&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadToString&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadUntil&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Send for Seek&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ReadHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for WriteHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ReuniteError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for Write&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for WriteVectored&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for WriteAll&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut:&nbsp;Send&gt; Send for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Send for Mutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send, '_&gt; Send for MutexLockFuture&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send, '_&gt; Send for MutexGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send, U:&nbsp;?Sized, '_&gt; Send for MappedMutexGuard&lt;'_, T, U&gt;","synthetic":false,"types":[]}];
implementors["fxhash"] = [{"text":"impl Send for FxHasher","synthetic":true,"types":[]},{"text":"impl Send for FxHasher64","synthetic":true,"types":[]},{"text":"impl Send for FxHasher32","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Send for Error","synthetic":true,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl Send for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl Send for CommandQueue","synthetic":true,"types":[]},{"text":"impl Send for Device","synthetic":true,"types":[]},{"text":"impl Send for QueueFamily","synthetic":true,"types":[]},{"text":"impl Send for CommandPool","synthetic":true,"types":[]},{"text":"impl Send for CommandBuffer","synthetic":true,"types":[]},{"text":"impl Send for Surface","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for Backend","synthetic":true,"types":[]}];
implementors["gfx_backend_vulkan"] = [{"text":"impl Send for VK_ENTRY","synthetic":true,"types":[]},{"text":"impl Send for RawInstance","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for QueueFamily","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl !Send for DeviceCreationFeatures","synthetic":true,"types":[]},{"text":"impl Send for CommandQueue","synthetic":true,"types":[]},{"text":"impl Send for Device","synthetic":true,"types":[]},{"text":"impl Send for DebugMessenger","synthetic":true,"types":[]},{"text":"impl Send for Backend","synthetic":true,"types":[]}];
implementors["gfx_descriptor"] = [{"text":"impl&lt;B&gt; Send for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DescriptorCounts","synthetic":true,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl Send for Features","synthetic":true,"types":[]},{"text":"impl Send for Hints","synthetic":true,"types":[]},{"text":"impl Send for Limits","synthetic":true,"types":[]},{"text":"impl Send for UnsupportedBackend","synthetic":true,"types":[]},{"text":"impl Send for MemoryTypeId","synthetic":true,"types":[]},{"text":"impl Send for IndexType","synthetic":true,"types":[]},{"text":"impl Send for MemoryType","synthetic":true,"types":[]},{"text":"impl Send for MemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Gpu&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AdapterInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DeviceType","synthetic":true,"types":[]},{"text":"impl Send for SubRange","synthetic":true,"types":[]},{"text":"impl Send for Usage","synthetic":true,"types":[]},{"text":"impl Send for Access","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for IndexBufferView&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for ViewCreationError","synthetic":true,"types":[]},{"text":"impl Send for ClearDepthStencil","synthetic":true,"types":[]},{"text":"impl Send for BufferCopy","synthetic":true,"types":[]},{"text":"impl Send for ImageCopy","synthetic":true,"types":[]},{"text":"impl Send for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl Send for ImageResolve","synthetic":true,"types":[]},{"text":"impl Send for ImageBlit","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for CommandBufferInheritanceInfo&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ClearColor","synthetic":true,"types":[]},{"text":"impl Send for ClearValue","synthetic":true,"types":[]},{"text":"impl Send for AttachmentClear","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]},{"text":"impl Send for SubpassContents","synthetic":true,"types":[]},{"text":"impl Send for DeviceLost","synthetic":true,"types":[]},{"text":"impl Send for SurfaceLost","synthetic":true,"types":[]},{"text":"impl Send for WindowInUse","synthetic":true,"types":[]},{"text":"impl Send for OutOfMemory","synthetic":true,"types":[]},{"text":"impl Send for OomOrDeviceLost","synthetic":true,"types":[]},{"text":"impl Send for AllocationError","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for MapError","synthetic":true,"types":[]},{"text":"impl Send for BindError","synthetic":true,"types":[]},{"text":"impl Send for WaitFor","synthetic":true,"types":[]},{"text":"impl Send for ShaderError","synthetic":true,"types":[]},{"text":"impl Send for Aspects","synthetic":true,"types":[]},{"text":"impl Send for FormatDesc","synthetic":true,"types":[]},{"text":"impl Send for FormatBits","synthetic":true,"types":[]},{"text":"impl Send for Swizzle","synthetic":true,"types":[]},{"text":"impl Send for Properties","synthetic":true,"types":[]},{"text":"impl Send for ImageFeature","synthetic":true,"types":[]},{"text":"impl Send for BufferFeature","synthetic":true,"types":[]},{"text":"impl Send for BaseFormat","synthetic":true,"types":[]},{"text":"impl Send for Rg4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bgra4Unorm","synthetic":true,"types":[]},{"text":"impl Send for R5g6b5Unorm","synthetic":true,"types":[]},{"text":"impl Send for B5g6r5Unorm","synthetic":true,"types":[]},{"text":"impl Send for R5g5b5a1Unorm","synthetic":true,"types":[]},{"text":"impl Send for B5g5r5a1Unorm","synthetic":true,"types":[]},{"text":"impl Send for A1r5g5b5Unorm","synthetic":true,"types":[]},{"text":"impl Send for R8Unorm","synthetic":true,"types":[]},{"text":"impl Send for R8Snorm","synthetic":true,"types":[]},{"text":"impl Send for R8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R8Uint","synthetic":true,"types":[]},{"text":"impl Send for R8Sint","synthetic":true,"types":[]},{"text":"impl Send for R8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Rg8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rg8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rg8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rg8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rg8Uint","synthetic":true,"types":[]},{"text":"impl Send for Rg8Sint","synthetic":true,"types":[]},{"text":"impl Send for Rg8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Uint","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Sint","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Uint","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Sint","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Uint","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Sint","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Srgb","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Unorm","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Snorm","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Uscaled","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Sscaled","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Uint","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Sint","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Unorm","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Snorm","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Uscaled","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Sscaled","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Uint","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Sint","synthetic":true,"types":[]},{"text":"impl Send for R16Unorm","synthetic":true,"types":[]},{"text":"impl Send for R16Snorm","synthetic":true,"types":[]},{"text":"impl Send for R16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R16Uint","synthetic":true,"types":[]},{"text":"impl Send for R16Sint","synthetic":true,"types":[]},{"text":"impl Send for R16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rg16Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rg16Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rg16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rg16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rg16Uint","synthetic":true,"types":[]},{"text":"impl Send for Rg16Sint","synthetic":true,"types":[]},{"text":"impl Send for Rg16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R32Uint","synthetic":true,"types":[]},{"text":"impl Send for R32Sint","synthetic":true,"types":[]},{"text":"impl Send for R32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rg32Uint","synthetic":true,"types":[]},{"text":"impl Send for Rg32Sint","synthetic":true,"types":[]},{"text":"impl Send for Rg32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgb32Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgb32Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgb32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgba32Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgba32Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgba32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R64Uint","synthetic":true,"types":[]},{"text":"impl Send for R64Sint","synthetic":true,"types":[]},{"text":"impl Send for R64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rg64Uint","synthetic":true,"types":[]},{"text":"impl Send for Rg64Sint","synthetic":true,"types":[]},{"text":"impl Send for Rg64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgb64Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgb64Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgb64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgba64Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgba64Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgba64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for B10g11r11Ufloat","synthetic":true,"types":[]},{"text":"impl Send for E5b9g9r9Ufloat","synthetic":true,"types":[]},{"text":"impl Send for D16Unorm","synthetic":true,"types":[]},{"text":"impl Send for X8D24Unorm","synthetic":true,"types":[]},{"text":"impl Send for D32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for S8Uint","synthetic":true,"types":[]},{"text":"impl Send for D16UnormS8Uint","synthetic":true,"types":[]},{"text":"impl Send for D24UnormS8Uint","synthetic":true,"types":[]},{"text":"impl Send for D32SfloatS8Uint","synthetic":true,"types":[]},{"text":"impl Send for Bc1RgbUnorm","synthetic":true,"types":[]},{"text":"impl Send for Bc1RgbSrgb","synthetic":true,"types":[]},{"text":"impl Send for Bc1RgbaUnorm","synthetic":true,"types":[]},{"text":"impl Send for Bc1RgbaSrgb","synthetic":true,"types":[]},{"text":"impl Send for Bc2Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc2Srgb","synthetic":true,"types":[]},{"text":"impl Send for Bc3Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc3Srgb","synthetic":true,"types":[]},{"text":"impl Send for Bc4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc4Snorm","synthetic":true,"types":[]},{"text":"impl Send for Bc5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc5Snorm","synthetic":true,"types":[]},{"text":"impl Send for Bc6hUfloat","synthetic":true,"types":[]},{"text":"impl Send for Bc6hSfloat","synthetic":true,"types":[]},{"text":"impl Send for Bc7Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc7Srgb","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8a1Unorm","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8a1Srgb","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8a8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8a8Srgb","synthetic":true,"types":[]},{"text":"impl Send for EacR11Unorm","synthetic":true,"types":[]},{"text":"impl Send for EacR11Snorm","synthetic":true,"types":[]},{"text":"impl Send for EacR11g11Unorm","synthetic":true,"types":[]},{"text":"impl Send for EacR11g11Snorm","synthetic":true,"types":[]},{"text":"impl Send for Astc4x4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc4x4Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc5x4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc5x4Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc5x5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc5x5Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc6x5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc6x5Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc6x6Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc6x6Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc8x5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc8x5Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc8x6Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc8x6Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc8x8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc8x8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc10x5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc10x5Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc10x6Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc10x6Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc10x8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc10x8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc10x10Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc10x10Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc12x10Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc12x10Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc12x12Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc12x12Srgb","synthetic":true,"types":[]},{"text":"impl Send for Component","synthetic":true,"types":[]},{"text":"impl Send for ChannelType","synthetic":true,"types":[]},{"text":"impl Send for SurfaceType","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for Extent","synthetic":true,"types":[]},{"text":"impl Send for Offset","synthetic":true,"types":[]},{"text":"impl Send for ViewCapabilities","synthetic":true,"types":[]},{"text":"impl Send for Usage","synthetic":true,"types":[]},{"text":"impl Send for Lod","synthetic":true,"types":[]},{"text":"impl Send for PackedColor","synthetic":true,"types":[]},{"text":"impl Send for SamplerDesc","synthetic":true,"types":[]},{"text":"impl Send for Access","synthetic":true,"types":[]},{"text":"impl Send for Subresource","synthetic":true,"types":[]},{"text":"impl Send for SubresourceLayers","synthetic":true,"types":[]},{"text":"impl Send for SubresourceRange","synthetic":true,"types":[]},{"text":"impl Send for FormatProperties","synthetic":true,"types":[]},{"text":"impl Send for SubresourceFootprint","synthetic":true,"types":[]},{"text":"impl Send for Tiling","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for ViewCreationError","synthetic":true,"types":[]},{"text":"impl Send for LayerError","synthetic":true,"types":[]},{"text":"impl Send for Filter","synthetic":true,"types":[]},{"text":"impl Send for CubeFace","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for ViewKind","synthetic":true,"types":[]},{"text":"impl Send for WrapMode","synthetic":true,"types":[]},{"text":"impl Send for Layout","synthetic":true,"types":[]},{"text":"impl Send for Properties","synthetic":true,"types":[]},{"text":"impl Send for Dependencies","synthetic":true,"types":[]},{"text":"impl Send for Requirements","synthetic":true,"types":[]},{"text":"impl Send for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Barrier&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AttachmentOps","synthetic":true,"types":[]},{"text":"impl Send for Attachment","synthetic":true,"types":[]},{"text":"impl Send for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubpassDesc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Subpass&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl Send for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for ComputePipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl Send for DescriptorRangeDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, WI&gt; Send for DescriptorSetWrite&lt;'a, B, WI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;WI: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for DescriptorSetCopy&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for Rect","synthetic":true,"types":[]},{"text":"impl Send for ClearRect","synthetic":true,"types":[]},{"text":"impl Send for Viewport","synthetic":true,"types":[]},{"text":"impl Send for BakedStates","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for GraphicsPipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DepthBias","synthetic":true,"types":[]},{"text":"impl Send for Rasterizer","synthetic":true,"types":[]},{"text":"impl Send for BlendDesc","synthetic":true,"types":[]},{"text":"impl Send for Multisampling","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl Send for AttributeDesc","synthetic":true,"types":[]},{"text":"impl Send for InputAssemblerDesc","synthetic":true,"types":[]},{"text":"impl Send for ColorMask","synthetic":true,"types":[]},{"text":"impl Send for BlendState","synthetic":true,"types":[]},{"text":"impl Send for ColorBlendDesc","synthetic":true,"types":[]},{"text":"impl Send for DepthTest","synthetic":true,"types":[]},{"text":"impl Send for StencilFace","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for StencilTest","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl Send for Face","synthetic":true,"types":[]},{"text":"impl Send for SpecializationConstant","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Specialization&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineStage","synthetic":true,"types":[]},{"text":"impl Send for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for EntryPoint&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PipelineCreationFlags","synthetic":true,"types":[]},{"text":"impl Send for BufferDescriptorType","synthetic":true,"types":[]},{"text":"impl Send for BufferDescriptorFormat","synthetic":true,"types":[]},{"text":"impl Send for ImageDescriptorType","synthetic":true,"types":[]},{"text":"impl Send for DescriptorType","synthetic":true,"types":[]},{"text":"impl Send for AllocationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Descriptor&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::BufferView: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for PrimitiveAssemblerDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PolygonMode","synthetic":true,"types":[]},{"text":"impl Send for FrontFace","synthetic":true,"types":[]},{"text":"impl Send for LogicOp","synthetic":true,"types":[]},{"text":"impl Send for VertexInputRate","synthetic":true,"types":[]},{"text":"impl Send for Primitive","synthetic":true,"types":[]},{"text":"impl Send for Comparison","synthetic":true,"types":[]},{"text":"impl Send for Factor","synthetic":true,"types":[]},{"text":"impl Send for BlendOp","synthetic":true,"types":[]},{"text":"impl Send for StencilOp","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Send for BasePipeline&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Query&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueryPool: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ControlFlags","synthetic":true,"types":[]},{"text":"impl Send for ResultFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineStatistic","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl&lt;Ic, Iw, Is&gt; Send for Submission&lt;Ic, Iw, Is&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ic: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Is: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Iw: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for QueueType","synthetic":true,"types":[]},{"text":"impl Send for QueueFamilyId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for QueueGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Extent2D","synthetic":true,"types":[]},{"text":"impl Send for SurfaceCapabilities","synthetic":true,"types":[]},{"text":"impl Send for PresentMode","synthetic":true,"types":[]},{"text":"impl Send for CompositeAlphaMode","synthetic":true,"types":[]},{"text":"impl Send for SwapchainConfig","synthetic":true,"types":[]},{"text":"impl Send for Suboptimal","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for AcquireError","synthetic":true,"types":[]},{"text":"impl Send for PresentError","synthetic":true,"types":[]},{"text":"impl Send for InitError","synthetic":true,"types":[]}];
implementors["gfx_memory"] = [{"text":"impl Send for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl Send for GeneralConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for LinearAllocator&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Send for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Heaps&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for MemoryBlock&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; !Send for MappedRange&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, B&gt; Send for Writer&lt;'a, 'b, T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl Send for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl Send for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl Send for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for HeapsError","synthetic":true,"types":[]},{"text":"impl Send for MemoryUsage","synthetic":true,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for DedicatedBlock&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for GeneralBlock&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for GeneralAllocator&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for LinearBlock&lt;B&gt;","synthetic":false,"types":[]}];
implementors["inplace_it"] = [{"text":"impl&lt;'a, T&gt; Send for UninitializedSliceMemoryGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for SliceMemoryGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl Send for IoVec","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Send for Buffer","synthetic":true,"types":[]}];
implementors["lazycell"] = [{"text":"impl&lt;T&gt; Send for LazyCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for AtomicLazyCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl !Send for group","synthetic":true,"types":[]},{"text":"impl Send for utimbuf","synthetic":true,"types":[]},{"text":"impl Send for timeval","synthetic":true,"types":[]},{"text":"impl Send for timespec","synthetic":true,"types":[]},{"text":"impl Send for rlimit","synthetic":true,"types":[]},{"text":"impl Send for rusage","synthetic":true,"types":[]},{"text":"impl Send for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Send for hostent","synthetic":true,"types":[]},{"text":"impl !Send for iovec","synthetic":true,"types":[]},{"text":"impl Send for pollfd","synthetic":true,"types":[]},{"text":"impl Send for winsize","synthetic":true,"types":[]},{"text":"impl Send for linger","synthetic":true,"types":[]},{"text":"impl !Send for sigval","synthetic":true,"types":[]},{"text":"impl Send for itimerval","synthetic":true,"types":[]},{"text":"impl Send for tms","synthetic":true,"types":[]},{"text":"impl !Send for servent","synthetic":true,"types":[]},{"text":"impl !Send for protoent","synthetic":true,"types":[]},{"text":"impl Send for in_addr","synthetic":true,"types":[]},{"text":"impl Send for ip_mreq","synthetic":true,"types":[]},{"text":"impl Send for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Send for sockaddr","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Send for addrinfo","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Send for fd_set","synthetic":true,"types":[]},{"text":"impl !Send for tm","synthetic":true,"types":[]},{"text":"impl Send for sched_param","synthetic":true,"types":[]},{"text":"impl !Send for Dl_info","synthetic":true,"types":[]},{"text":"impl !Send for lconv","synthetic":true,"types":[]},{"text":"impl Send for in_pktinfo","synthetic":true,"types":[]},{"text":"impl !Send for ifaddrs","synthetic":true,"types":[]},{"text":"impl Send for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Send for arpreq","synthetic":true,"types":[]},{"text":"impl Send for arpreq_old","synthetic":true,"types":[]},{"text":"impl Send for arphdr","synthetic":true,"types":[]},{"text":"impl !Send for mmsghdr","synthetic":true,"types":[]},{"text":"impl Send for epoll_event","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Send for utsname","synthetic":true,"types":[]},{"text":"impl !Send for sigevent","synthetic":true,"types":[]},{"text":"impl Send for rlimit64","synthetic":true,"types":[]},{"text":"impl !Send for glob_t","synthetic":true,"types":[]},{"text":"impl !Send for passwd","synthetic":true,"types":[]},{"text":"impl !Send for spwd","synthetic":true,"types":[]},{"text":"impl Send for dqblk","synthetic":true,"types":[]},{"text":"impl Send for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Send for itimerspec","synthetic":true,"types":[]},{"text":"impl Send for fsid_t","synthetic":true,"types":[]},{"text":"impl Send for packet_mreq","synthetic":true,"types":[]},{"text":"impl Send for cpu_set_t","synthetic":true,"types":[]},{"text":"impl !Send for if_nameindex","synthetic":true,"types":[]},{"text":"impl Send for msginfo","synthetic":true,"types":[]},{"text":"impl Send for sembuf","synthetic":true,"types":[]},{"text":"impl Send for input_event","synthetic":true,"types":[]},{"text":"impl Send for input_id","synthetic":true,"types":[]},{"text":"impl Send for input_absinfo","synthetic":true,"types":[]},{"text":"impl Send for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Send for input_mask","synthetic":true,"types":[]},{"text":"impl Send for ff_replay","synthetic":true,"types":[]},{"text":"impl Send for ff_trigger","synthetic":true,"types":[]},{"text":"impl Send for ff_envelope","synthetic":true,"types":[]},{"text":"impl Send for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl !Send for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_effect","synthetic":true,"types":[]},{"text":"impl !Send for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Send for ucred","synthetic":true,"types":[]},{"text":"impl !Send for mntent","synthetic":true,"types":[]},{"text":"impl !Send for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Send for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Send for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Send for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Send for arpd_request","synthetic":true,"types":[]},{"text":"impl Send for inotify_event","synthetic":true,"types":[]},{"text":"impl Send for fanotify_response","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Send for regmatch_t","synthetic":true,"types":[]},{"text":"impl Send for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Send for dirent","synthetic":true,"types":[]},{"text":"impl Send for dirent64","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Send for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Send for mq_attr","synthetic":true,"types":[]},{"text":"impl Send for statx","synthetic":true,"types":[]},{"text":"impl Send for statx_timestamp","synthetic":true,"types":[]},{"text":"impl !Send for aiocb","synthetic":true,"types":[]},{"text":"impl Send for __exit_status","synthetic":true,"types":[]},{"text":"impl Send for __timeval","synthetic":true,"types":[]},{"text":"impl !Send for glob64_t","synthetic":true,"types":[]},{"text":"impl !Send for msghdr","synthetic":true,"types":[]},{"text":"impl Send for cmsghdr","synthetic":true,"types":[]},{"text":"impl Send for termios","synthetic":true,"types":[]},{"text":"impl Send for mallinfo","synthetic":true,"types":[]},{"text":"impl Send for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Send for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Send for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Send for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Send for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Send for nlattr","synthetic":true,"types":[]},{"text":"impl !Send for rtentry","synthetic":true,"types":[]},{"text":"impl Send for timex","synthetic":true,"types":[]},{"text":"impl Send for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Send for regex_t","synthetic":true,"types":[]},{"text":"impl Send for utmpx","synthetic":true,"types":[]},{"text":"impl Send for sigset_t","synthetic":true,"types":[]},{"text":"impl Send for sysinfo","synthetic":true,"types":[]},{"text":"impl Send for msqid_ds","synthetic":true,"types":[]},{"text":"impl Send for sigaction","synthetic":true,"types":[]},{"text":"impl Send for statfs","synthetic":true,"types":[]},{"text":"impl Send for flock","synthetic":true,"types":[]},{"text":"impl Send for flock64","synthetic":true,"types":[]},{"text":"impl Send for siginfo_t","synthetic":true,"types":[]},{"text":"impl !Send for stack_t","synthetic":true,"types":[]},{"text":"impl Send for stat","synthetic":true,"types":[]},{"text":"impl Send for stat64","synthetic":true,"types":[]},{"text":"impl Send for statfs64","synthetic":true,"types":[]},{"text":"impl Send for statvfs64","synthetic":true,"types":[]},{"text":"impl Send for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Send for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Send for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Send for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Send for user_regs_struct","synthetic":true,"types":[]},{"text":"impl !Send for user","synthetic":true,"types":[]},{"text":"impl !Send for mcontext_t","synthetic":true,"types":[]},{"text":"impl Send for ipc_perm","synthetic":true,"types":[]},{"text":"impl Send for shmid_ds","synthetic":true,"types":[]},{"text":"impl Send for termios2","synthetic":true,"types":[]},{"text":"impl Send for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Send for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl !Send for ucontext_t","synthetic":true,"types":[]},{"text":"impl Send for statvfs","synthetic":true,"types":[]},{"text":"impl Send for max_align_t","synthetic":true,"types":[]},{"text":"impl Send for sem_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Send for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Send for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Send for in6_addr","synthetic":true,"types":[]},{"text":"impl Send for DIR","synthetic":true,"types":[]},{"text":"impl Send for FILE","synthetic":true,"types":[]},{"text":"impl Send for fpos_t","synthetic":true,"types":[]},{"text":"impl Send for timezone","synthetic":true,"types":[]},{"text":"impl Send for fpos64_t","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Library","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Symbol&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for Library","synthetic":false,"types":[]},{"text":"impl&lt;'lib, T:&nbsp;Send&gt; Send for Symbol&lt;'lib, T&gt;","synthetic":false,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; Send for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Send for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Send for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Send for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Send for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Octant","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Send for GuardSend","synthetic":true,"types":[]},{"text":"impl !Send for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Send for MutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawMutex&gt;::GuardMarker: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T&gt; !Send for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T&gt; !Send for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Send for RwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Send for RwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Send for RwLockUpgradableReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Send, T:&nbsp;?Sized + Send&gt; Send for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, T:&nbsp;?Sized + 'a&gt; Send for MappedMutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::GuardMarker: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Send, G:&nbsp;GetThreadId + Send, T:&nbsp;?Sized + Send&gt; Send for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock + Send, T:&nbsp;?Sized + Send&gt; Send for RwLock&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Send for MappedRwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::GuardMarker: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Send for MappedRwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::GuardMarker: Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; !Send for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Send for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]},{"text":"impl Send for LevelFilter","synthetic":true,"types":[]}];
implementors["matchers"] = [{"text":"impl&lt;S, A&gt; Send for Pattern&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, A&gt; Send for Matcher&lt;'a, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Send for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl Send for MmapOptions","synthetic":true,"types":[]},{"text":"impl Send for Mmap","synthetic":true,"types":[]},{"text":"impl Send for MmapMut","synthetic":true,"types":[]}];
implementors["minifb"] = [{"text":"impl !Send for Window","synthetic":true,"types":[]},{"text":"impl Send for WindowOptions","synthetic":true,"types":[]},{"text":"impl Send for UnixMenu","synthetic":true,"types":[]},{"text":"impl Send for UnixMenuItem","synthetic":true,"types":[]},{"text":"impl Send for Menu","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MenuItem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Scale","synthetic":true,"types":[]},{"text":"impl Send for KeyRepeat","synthetic":true,"types":[]},{"text":"impl Send for MouseButton","synthetic":true,"types":[]},{"text":"impl Send for MouseMode","synthetic":true,"types":[]},{"text":"impl Send for CursorStyle","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Key","synthetic":true,"types":[]},{"text":"impl Send for ScaleMode","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Send for Poll","synthetic":true,"types":[]},{"text":"impl Send for PollOpt","synthetic":true,"types":[]},{"text":"impl Send for Ready","synthetic":true,"types":[]},{"text":"impl Send for Token","synthetic":true,"types":[]},{"text":"impl Send for Events","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for UnixReady","synthetic":true,"types":[]},{"text":"impl Send for TcpListener","synthetic":true,"types":[]},{"text":"impl Send for TcpStream","synthetic":true,"types":[]},{"text":"impl Send for UdpSocket","synthetic":true,"types":[]},{"text":"impl Send for Registration","synthetic":false,"types":[]},{"text":"impl Send for SetReadiness","synthetic":false,"types":[]}];
implementors["mio_extras"] = [{"text":"impl&lt;T&gt; Send for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SyncSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Timer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Builder","synthetic":true,"types":[]},{"text":"impl Send for Timeout","synthetic":true,"types":[]}];
implementors["naga"] = [{"text":"impl&lt;T&gt; Send for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Header","synthetic":true,"types":[]},{"text":"impl Send for StructMember","synthetic":true,"types":[]},{"text":"impl Send for ImageFlags","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Constant","synthetic":true,"types":[]},{"text":"impl Send for GlobalUse","synthetic":true,"types":[]},{"text":"impl Send for GlobalVariable","synthetic":true,"types":[]},{"text":"impl Send for LocalVariable","synthetic":true,"types":[]},{"text":"impl Send for FallThrough","synthetic":true,"types":[]},{"text":"impl Send for Function","synthetic":true,"types":[]},{"text":"impl Send for EntryPoint","synthetic":true,"types":[]},{"text":"impl Send for Module","synthetic":true,"types":[]},{"text":"impl Send for ShaderStage","synthetic":true,"types":[]},{"text":"impl Send for StorageClass","synthetic":true,"types":[]},{"text":"impl Send for BuiltIn","synthetic":true,"types":[]},{"text":"impl Send for VectorSize","synthetic":true,"types":[]},{"text":"impl Send for ScalarKind","synthetic":true,"types":[]},{"text":"impl Send for ArraySize","synthetic":true,"types":[]},{"text":"impl Send for MemberOrigin","synthetic":true,"types":[]},{"text":"impl Send for ImageDimension","synthetic":true,"types":[]},{"text":"impl Send for TypeInner","synthetic":true,"types":[]},{"text":"impl Send for ConstantInner","synthetic":true,"types":[]},{"text":"impl Send for Binding","synthetic":true,"types":[]},{"text":"impl Send for UnaryOperator","synthetic":true,"types":[]},{"text":"impl Send for BinaryOperator","synthetic":true,"types":[]},{"text":"impl Send for IntrinsicFunction","synthetic":true,"types":[]},{"text":"impl Send for DerivativeAxis","synthetic":true,"types":[]},{"text":"impl Send for FunctionOrigin","synthetic":true,"types":[]},{"text":"impl Send for Expression","synthetic":true,"types":[]},{"text":"impl Send for Statement","synthetic":true,"types":[]},{"text":"impl Send for BindTarget","synthetic":true,"types":[]},{"text":"impl Send for BindSource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Options&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Writer","synthetic":true,"types":[]},{"text":"impl Send for WriterFlags","synthetic":true,"types":[]},{"text":"impl Send for SamplingFlags","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Parser&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for ModuleState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ParseError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Parser","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Token&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Error&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Scope","synthetic":true,"types":[]},{"text":"impl Send for Typifier","synthetic":true,"types":[]},{"text":"impl Send for UnexpectedConstantTypeError","synthetic":true,"types":[]},{"text":"impl Send for Validator","synthetic":true,"types":[]},{"text":"impl Send for ResolveError","synthetic":true,"types":[]},{"text":"impl Send for ValidationError","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl Send for TcpBuilder","synthetic":true,"types":[]},{"text":"impl Send for UdpBuilder","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; Send for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Send for Entry","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Errno","synthetic":true,"types":[]},{"text":"impl Send for AtFlags","synthetic":true,"types":[]},{"text":"impl Send for OFlag","synthetic":true,"types":[]},{"text":"impl Send for SealFlag","synthetic":true,"types":[]},{"text":"impl Send for FdFlag","synthetic":true,"types":[]},{"text":"impl Send for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Send for FallocateFlags","synthetic":true,"types":[]},{"text":"impl Send for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for FlockArg","synthetic":true,"types":[]},{"text":"impl Send for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl !Send for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Send for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Send for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Send for MsFlags","synthetic":true,"types":[]},{"text":"impl Send for MntFlags","synthetic":true,"types":[]},{"text":"impl Send for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Send for FdFlag","synthetic":true,"types":[]},{"text":"impl Send for MqAttr","synthetic":true,"types":[]},{"text":"impl Send for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Send for PollFd","synthetic":true,"types":[]},{"text":"impl Send for PollFlags","synthetic":true,"types":[]},{"text":"impl Send for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Send for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Send for PtyMaster","synthetic":true,"types":[]},{"text":"impl Send for CloneFlags","synthetic":true,"types":[]},{"text":"impl Send for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Send for LioOpcode","synthetic":true,"types":[]},{"text":"impl Send for LioMode","synthetic":true,"types":[]},{"text":"impl Send for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for EpollFlags","synthetic":true,"types":[]},{"text":"impl Send for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for EpollEvent","synthetic":true,"types":[]},{"text":"impl Send for EpollOp","synthetic":true,"types":[]},{"text":"impl Send for EfdFlags","synthetic":true,"types":[]},{"text":"impl Send for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Send for ProtFlags","synthetic":true,"types":[]},{"text":"impl Send for MapFlags","synthetic":true,"types":[]},{"text":"impl Send for MsFlags","synthetic":true,"types":[]},{"text":"impl Send for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Send for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Send for Options","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Send for Dqblk","synthetic":true,"types":[]},{"text":"impl Send for QuotaType","synthetic":true,"types":[]},{"text":"impl Send for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Send for RebootMode","synthetic":true,"types":[]},{"text":"impl Send for FdSet","synthetic":true,"types":[]},{"text":"impl !Send for SigEvent","synthetic":true,"types":[]},{"text":"impl Send for SignalIterator","synthetic":true,"types":[]},{"text":"impl Send for SaFlags","synthetic":true,"types":[]},{"text":"impl Send for SigSet","synthetic":true,"types":[]},{"text":"impl Send for SigAction","synthetic":true,"types":[]},{"text":"impl Send for Signal","synthetic":true,"types":[]},{"text":"impl Send for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Send for SigHandler","synthetic":true,"types":[]},{"text":"impl Send for SigevNotify","synthetic":true,"types":[]},{"text":"impl Send for SfdFlags","synthetic":true,"types":[]},{"text":"impl Send for SignalFd","synthetic":true,"types":[]},{"text":"impl Send for UnixAddr","synthetic":true,"types":[]},{"text":"impl Send for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Send for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Send for LinkAddr","synthetic":true,"types":[]},{"text":"impl Send for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Send for AlgAddr","synthetic":true,"types":[]},{"text":"impl Send for VsockAddr","synthetic":true,"types":[]},{"text":"impl Send for SockFlag","synthetic":true,"types":[]},{"text":"impl Send for MsgFlags","synthetic":true,"types":[]},{"text":"impl Send for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Send for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Send for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AddressFamily","synthetic":true,"types":[]},{"text":"impl Send for SockAddr","synthetic":true,"types":[]},{"text":"impl Send for InetAddr","synthetic":true,"types":[]},{"text":"impl Send for IpAddr","synthetic":true,"types":[]},{"text":"impl Send for SockType","synthetic":true,"types":[]},{"text":"impl Send for SockProtocol","synthetic":true,"types":[]},{"text":"impl Send for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SockLevel","synthetic":true,"types":[]},{"text":"impl Send for Shutdown","synthetic":true,"types":[]},{"text":"impl Send for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Send for ReusePort","synthetic":true,"types":[]},{"text":"impl Send for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Send for Linger","synthetic":true,"types":[]},{"text":"impl Send for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Send for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Send for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Send for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Send for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Send for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Send for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Send for SendTimeout","synthetic":true,"types":[]},{"text":"impl Send for Broadcast","synthetic":true,"types":[]},{"text":"impl Send for OobInline","synthetic":true,"types":[]},{"text":"impl Send for SocketError","synthetic":true,"types":[]},{"text":"impl Send for KeepAlive","synthetic":true,"types":[]},{"text":"impl Send for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Send for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Send for RcvBuf","synthetic":true,"types":[]},{"text":"impl Send for SndBuf","synthetic":true,"types":[]},{"text":"impl Send for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Send for SndBufForce","synthetic":true,"types":[]},{"text":"impl Send for SockType","synthetic":true,"types":[]},{"text":"impl Send for AcceptConn","synthetic":true,"types":[]},{"text":"impl Send for OriginalDst","synthetic":true,"types":[]},{"text":"impl Send for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Send for IpTransparent","synthetic":true,"types":[]},{"text":"impl Send for Mark","synthetic":true,"types":[]},{"text":"impl Send for PassCred","synthetic":true,"types":[]},{"text":"impl Send for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Send for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Send for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Send for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SFlag","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Send for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Send for Statfs","synthetic":true,"types":[]},{"text":"impl Send for FsType","synthetic":true,"types":[]},{"text":"impl Send for FsFlags","synthetic":true,"types":[]},{"text":"impl Send for Statvfs","synthetic":true,"types":[]},{"text":"impl Send for SysInfo","synthetic":true,"types":[]},{"text":"impl Send for Termios","synthetic":true,"types":[]},{"text":"impl Send for InputFlags","synthetic":true,"types":[]},{"text":"impl Send for OutputFlags","synthetic":true,"types":[]},{"text":"impl Send for ControlFlags","synthetic":true,"types":[]},{"text":"impl Send for LocalFlags","synthetic":true,"types":[]},{"text":"impl Send for BaudRate","synthetic":true,"types":[]},{"text":"impl Send for SetArg","synthetic":true,"types":[]},{"text":"impl Send for FlushArg","synthetic":true,"types":[]},{"text":"impl Send for FlowArg","synthetic":true,"types":[]},{"text":"impl Send for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Send for TimeSpec","synthetic":true,"types":[]},{"text":"impl Send for TimeVal","synthetic":true,"types":[]},{"text":"impl Send for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for IoVec&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Send for UtsName","synthetic":true,"types":[]},{"text":"impl Send for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Send for WaitStatus","synthetic":true,"types":[]},{"text":"impl Send for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Send for InitFlags","synthetic":true,"types":[]},{"text":"impl Send for Inotify","synthetic":true,"types":[]},{"text":"impl Send for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Send for InotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for UContext","synthetic":true,"types":[]},{"text":"impl Send for Uid","synthetic":true,"types":[]},{"text":"impl Send for Gid","synthetic":true,"types":[]},{"text":"impl Send for Pid","synthetic":true,"types":[]},{"text":"impl Send for AccessFlags","synthetic":true,"types":[]},{"text":"impl Send for User","synthetic":true,"types":[]},{"text":"impl Send for Group","synthetic":true,"types":[]},{"text":"impl Send for ForkResult","synthetic":true,"types":[]},{"text":"impl Send for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Send for Whence","synthetic":true,"types":[]},{"text":"impl Send for LinkatFlags","synthetic":true,"types":[]},{"text":"impl Send for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl Send for PathconfVar","synthetic":true,"types":[]},{"text":"impl Send for SysconfVar","synthetic":true,"types":[]},{"text":"impl Send for Dir","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Send for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Send for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Send for FloatErrorKind","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; Send for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Send for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Send for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; Send for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["owned_ttf_parser"] = [{"text":"impl Send for OwnedFont","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Send for Condvar","synthetic":true,"types":[]},{"text":"impl Send for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Send for Once","synthetic":true,"types":[]},{"text":"impl Send for RawFairMutex","synthetic":true,"types":[]},{"text":"impl Send for RawMutex","synthetic":true,"types":[]},{"text":"impl Send for RawRwLock","synthetic":true,"types":[]},{"text":"impl Send for RawThreadId","synthetic":true,"types":[]},{"text":"impl Send for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Send for ParkToken","synthetic":true,"types":[]},{"text":"impl Send for UnparkResult","synthetic":true,"types":[]},{"text":"impl Send for UnparkToken","synthetic":true,"types":[]},{"text":"impl Send for SpinWait","synthetic":true,"types":[]},{"text":"impl Send for FilterOp","synthetic":true,"types":[]},{"text":"impl Send for ParkResult","synthetic":true,"types":[]},{"text":"impl Send for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Send for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Send for YesS3","synthetic":true,"types":[]},{"text":"impl Send for NoS3","synthetic":true,"types":[]},{"text":"impl Send for YesS4","synthetic":true,"types":[]},{"text":"impl Send for NoS4","synthetic":true,"types":[]},{"text":"impl Send for YesA1","synthetic":true,"types":[]},{"text":"impl Send for NoA1","synthetic":true,"types":[]},{"text":"impl Send for YesA2","synthetic":true,"types":[]},{"text":"impl Send for NoA2","synthetic":true,"types":[]},{"text":"impl Send for YesNI","synthetic":true,"types":[]},{"text":"impl Send for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Send for SseMachine&lt;S3, S4, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S4: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for Avx2Machine&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for vec128_storage","synthetic":true,"types":[]},{"text":"impl Send for vec256_storage","synthetic":true,"types":[]},{"text":"impl Send for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !Send for TokenStream","synthetic":true,"types":[]},{"text":"impl !Send for LexError","synthetic":true,"types":[]},{"text":"impl !Send for Span","synthetic":true,"types":[]},{"text":"impl !Send for Group","synthetic":true,"types":[]},{"text":"impl !Send for Punct","synthetic":true,"types":[]},{"text":"impl !Send for Ident","synthetic":true,"types":[]},{"text":"impl !Send for Literal","synthetic":true,"types":[]},{"text":"impl !Send for TokenTree","synthetic":true,"types":[]},{"text":"impl Send for Delimiter","synthetic":true,"types":[]},{"text":"impl Send for Spacing","synthetic":true,"types":[]},{"text":"impl !Send for IntoIter","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl !Send for Diagnostic","synthetic":true,"types":[]},{"text":"impl !Send for SpanRange","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Send for Bernoulli","synthetic":true,"types":[]},{"text":"impl Send for Open01","synthetic":true,"types":[]},{"text":"impl Send for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Send for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Send for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Binomial","synthetic":true,"types":[]},{"text":"impl Send for Cauchy","synthetic":true,"types":[]},{"text":"impl Send for Dirichlet","synthetic":true,"types":[]},{"text":"impl Send for Exp","synthetic":true,"types":[]},{"text":"impl Send for Exp1","synthetic":true,"types":[]},{"text":"impl Send for Beta","synthetic":true,"types":[]},{"text":"impl Send for ChiSquared","synthetic":true,"types":[]},{"text":"impl Send for FisherF","synthetic":true,"types":[]},{"text":"impl Send for Gamma","synthetic":true,"types":[]},{"text":"impl Send for StudentT","synthetic":true,"types":[]},{"text":"impl Send for LogNormal","synthetic":true,"types":[]},{"text":"impl Send for Normal","synthetic":true,"types":[]},{"text":"impl Send for StandardNormal","synthetic":true,"types":[]},{"text":"impl Send for Pareto","synthetic":true,"types":[]},{"text":"impl Send for Poisson","synthetic":true,"types":[]},{"text":"impl Send for Triangular","synthetic":true,"types":[]},{"text":"impl Send for UnitCircle","synthetic":true,"types":[]},{"text":"impl Send for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Send for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Send for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Standard","synthetic":true,"types":[]},{"text":"impl Send for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Send for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Send for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Send for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EntropyRng","synthetic":true,"types":[]},{"text":"impl Send for StdRng","synthetic":true,"types":[]},{"text":"impl !Send for ThreadRng","synthetic":true,"types":[]},{"text":"impl Send for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Send for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Send for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Send for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Send for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Send for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Send for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Send for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Send for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Send for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Send for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["raw_string"] = [{"text":"impl&lt;'a&gt; Send for Utf8Chunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Utf8ChunksIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RawStr","synthetic":true,"types":[]},{"text":"impl Send for RawString","synthetic":true,"types":[]}];
implementors["raw_window_handle"] = [{"text":"impl !Send for RawWindowHandle","synthetic":true,"types":[]},{"text":"impl !Send for XlibHandle","synthetic":true,"types":[]},{"text":"impl !Send for XcbHandle","synthetic":true,"types":[]},{"text":"impl !Send for WaylandHandle","synthetic":true,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Send for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Send for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for Chain&lt;A, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Chunks&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Cloned&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Copied&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Empty&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Enumerate&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Send for Filter&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Send for FilterMap&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Send for FlatMap&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Send for FlatMapIter&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Flatten&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for FlattenIter&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, ID, F&gt; Send for Fold&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Send for FoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Send for Inspect&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Send for Interleave&lt;I, J&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Send for InterleaveShortest&lt;I, J&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as ParallelIterator&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for MaxLen&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for MinLen&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Send for Map&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, INIT, F&gt; Send for MapInit&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T, F&gt; Send for MapWith&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for MultiZip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Once&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for PanicFuse&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Send for IterBridge&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Send for Positions&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Repeat&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for RepeatN&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Rev&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Skip&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Send for Split&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Take&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, ID, F&gt; Send for TryFold&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Send for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Send for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for WhileSome&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for Zip&lt;A, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for ZipEq&lt;A, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for StepBy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Send for Iter&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Send for Chunks&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Send for ChunksExact&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Send for Windows&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Send for IterMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Send for ChunksMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Send for ChunksExactMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Send for Split&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Send for SplitMut&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Send for Chars&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Send for CharIndices&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Send for Bytes&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Send for EncodeUtf16&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Send for Split&lt;'ch, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Send for SplitTerminator&lt;'ch, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Send for Lines&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Send for SplitWhitespace&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Send for Matches&lt;'ch, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Send for MatchIndices&lt;'ch, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Drain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Send for Drain&lt;'data, T&gt;","synthetic":true,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Send for ThreadBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Send for Scope&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Send for ScopeFifo&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Send for ThreadPool","synthetic":true,"types":[]},{"text":"impl Send for ThreadPoolBuildError","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;DefaultSpawn&gt; !Send for ThreadPoolBuilder&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Configuration","synthetic":true,"types":[]},{"text":"impl !Send for FnContext","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl Send for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl Send for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Send for RegexSet","synthetic":true,"types":[]},{"text":"impl Send for SetMatches","synthetic":true,"types":[]},{"text":"impl Send for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Send for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Send for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Send for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Send for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Send for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Send for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Send for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Send for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Send for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Send for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Send for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Send for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Send for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Send for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Send for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Send for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Send for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Send for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl Send for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Send for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Send for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Send for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Send for RegexSet","synthetic":true,"types":[]},{"text":"impl Send for SetMatches","synthetic":true,"types":[]},{"text":"impl Send for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["regex_automata"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for Regex&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RegexBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for DenseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for SparseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for Premultiplied&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for PremultipliedByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Send for Parser","synthetic":true,"types":[]},{"text":"impl Send for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Send for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Span","synthetic":true,"types":[]},{"text":"impl Send for Position","synthetic":true,"types":[]},{"text":"impl Send for WithComments","synthetic":true,"types":[]},{"text":"impl Send for Comment","synthetic":true,"types":[]},{"text":"impl Send for Alternation","synthetic":true,"types":[]},{"text":"impl Send for Concat","synthetic":true,"types":[]},{"text":"impl Send for Literal","synthetic":true,"types":[]},{"text":"impl Send for ClassPerl","synthetic":true,"types":[]},{"text":"impl Send for ClassAscii","synthetic":true,"types":[]},{"text":"impl Send for ClassUnicode","synthetic":true,"types":[]},{"text":"impl Send for ClassBracketed","synthetic":true,"types":[]},{"text":"impl Send for ClassSetRange","synthetic":true,"types":[]},{"text":"impl Send for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl Send for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl Send for Assertion","synthetic":true,"types":[]},{"text":"impl Send for Repetition","synthetic":true,"types":[]},{"text":"impl Send for RepetitionOp","synthetic":true,"types":[]},{"text":"impl Send for Group","synthetic":true,"types":[]},{"text":"impl Send for CaptureName","synthetic":true,"types":[]},{"text":"impl Send for SetFlags","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for FlagsItem","synthetic":true,"types":[]},{"text":"impl Send for ErrorKind","synthetic":true,"types":[]},{"text":"impl Send for Ast","synthetic":true,"types":[]},{"text":"impl Send for LiteralKind","synthetic":true,"types":[]},{"text":"impl Send for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl Send for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl Send for Class","synthetic":true,"types":[]},{"text":"impl Send for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl Send for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl Send for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl Send for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl Send for ClassSet","synthetic":true,"types":[]},{"text":"impl Send for ClassSetItem","synthetic":true,"types":[]},{"text":"impl Send for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl Send for AssertionKind","synthetic":true,"types":[]},{"text":"impl Send for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Send for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Send for GroupKind","synthetic":true,"types":[]},{"text":"impl Send for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl Send for Flag","synthetic":true,"types":[]},{"text":"impl Send for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Send for Parser","synthetic":true,"types":[]},{"text":"impl Send for Printer","synthetic":true,"types":[]},{"text":"impl Send for CaseFoldError","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Hir","synthetic":true,"types":[]},{"text":"impl Send for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl Send for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl Send for Group","synthetic":true,"types":[]},{"text":"impl Send for Repetition","synthetic":true,"types":[]},{"text":"impl Send for ErrorKind","synthetic":true,"types":[]},{"text":"impl Send for HirKind","synthetic":true,"types":[]},{"text":"impl Send for Literal","synthetic":true,"types":[]},{"text":"impl Send for Class","synthetic":true,"types":[]},{"text":"impl Send for Anchor","synthetic":true,"types":[]},{"text":"impl Send for WordBoundary","synthetic":true,"types":[]},{"text":"impl Send for GroupKind","synthetic":true,"types":[]},{"text":"impl Send for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Send for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Send for Literals","synthetic":true,"types":[]},{"text":"impl Send for Literal","synthetic":true,"types":[]},{"text":"impl Send for Printer","synthetic":true,"types":[]},{"text":"impl Send for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl Send for Translator","synthetic":true,"types":[]},{"text":"impl Send for Utf8Range","synthetic":true,"types":[]},{"text":"impl Send for Utf8Sequences","synthetic":true,"types":[]},{"text":"impl Send for Utf8Sequence","synthetic":true,"types":[]}];
implementors["rspirv"] = [{"text":"impl&lt;'a&gt; Send for Decoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'd&gt; !Send for Parser&lt;'c, 'd&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Action","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Builder","synthetic":true,"types":[]},{"text":"impl Send for Block","synthetic":true,"types":[]},{"text":"impl Send for Function","synthetic":true,"types":[]},{"text":"impl Send for Instruction","synthetic":true,"types":[]},{"text":"impl Send for Module","synthetic":true,"types":[]},{"text":"impl Send for ModuleHeader","synthetic":true,"types":[]},{"text":"impl Send for Loader","synthetic":true,"types":[]},{"text":"impl Send for InsertPoint","synthetic":true,"types":[]},{"text":"impl Send for Operand","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for CoreInstructionTable","synthetic":true,"types":[]},{"text":"impl Send for GlslStd450InstructionTable","synthetic":true,"types":[]},{"text":"impl Send for OpenCLStd100InstructionTable","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ExtendedInstruction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Instruction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for LogicalOperand","synthetic":true,"types":[]},{"text":"impl Send for OperandKind","synthetic":true,"types":[]},{"text":"impl Send for OperandQuantifier","synthetic":true,"types":[]},{"text":"impl Send for LiftContext","synthetic":true,"types":[]},{"text":"impl Send for OperandError","synthetic":true,"types":[]},{"text":"impl Send for InstructionError","synthetic":true,"types":[]},{"text":"impl Send for ConversionError","synthetic":true,"types":[]},{"text":"impl Send for StructMember","synthetic":true,"types":[]},{"text":"impl Send for Decoration","synthetic":true,"types":[]},{"text":"impl Send for Constant","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Extension","synthetic":true,"types":[]},{"text":"impl Send for ExtInstImport","synthetic":true,"types":[]},{"text":"impl Send for ExtInst","synthetic":true,"types":[]},{"text":"impl Send for MemoryModel","synthetic":true,"types":[]},{"text":"impl Send for EntryPoint","synthetic":true,"types":[]},{"text":"impl Send for ExecutionMode","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for Function","synthetic":true,"types":[]},{"text":"impl Send for FunctionParameter","synthetic":true,"types":[]},{"text":"impl Send for FunctionEnd","synthetic":true,"types":[]},{"text":"impl Send for FunctionCall","synthetic":true,"types":[]},{"text":"impl Send for ExecutionModeId","synthetic":true,"types":[]},{"text":"impl Send for Branch","synthetic":true,"types":[]},{"text":"impl Send for Terminator","synthetic":true,"types":[]},{"text":"impl Send for Op","synthetic":true,"types":[]},{"text":"impl Send for EntryPoint","synthetic":true,"types":[]},{"text":"impl Send for Block","synthetic":true,"types":[]},{"text":"impl Send for Jump","synthetic":true,"types":[]},{"text":"impl Send for Function","synthetic":true,"types":[]},{"text":"impl Send for Module","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Token&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Storage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl Send for Curve","synthetic":true,"types":[]},{"text":"impl Send for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Codepoint","synthetic":true,"types":[]},{"text":"impl Send for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl Send for HMetrics","synthetic":true,"types":[]},{"text":"impl Send for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; Send for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for LayoutIter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Send for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Segment","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Send for Buffer","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Send for Handle","synthetic":true,"types":[]}];
implementors["scoped_tls"] = [{"text":"impl&lt;T&gt; Send for ScopedKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Send for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Always","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Send for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Send for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Send for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Send for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Send for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Send for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Send for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Send for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; Send for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Send for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Send for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Send for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Number","synthetic":true,"types":[]},{"text":"impl Send for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CharEscape","synthetic":true,"types":[]},{"text":"impl Send for Serializer","synthetic":true,"types":[]}];
implementors["sharded_slab"] = [{"text":"impl Send for DefaultConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&gt; !Send for PoolGuard&lt;'a, T, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&nbsp;=&nbsp;DefaultConfig&gt; !Send for Guard&lt;'a, T, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, C&gt; Send for Pool&lt;T, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Clear + Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Config,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send, C:&nbsp;Config&gt; Send for Slab&lt;T, C&gt;","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Send for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A&gt; Send for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CollectionAllocErr","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Send + Array&gt; Send for Drain&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Send for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl Send for Environment","synthetic":true,"types":[]},{"text":"impl Send for Shell","synthetic":true,"types":[]},{"text":"impl Send for DataDevice","synthetic":true,"types":[]},{"text":"impl Send for DataOffer","synthetic":true,"types":[]},{"text":"impl Send for ReadPipe","synthetic":true,"types":[]},{"text":"impl Send for DataSource","synthetic":true,"types":[]},{"text":"impl Send for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl Send for ModifiersState","synthetic":true,"types":[]},{"text":"impl Send for RMLVO","synthetic":true,"types":[]},{"text":"impl Send for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl Send for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for OutputInfo","synthetic":true,"types":[]},{"text":"impl Send for OutputMgr","synthetic":true,"types":[]},{"text":"impl Send for ThemeManager","synthetic":true,"types":[]},{"text":"impl Send for ThemedPointer","synthetic":true,"types":[]},{"text":"impl Send for AutoThemer","synthetic":true,"types":[]},{"text":"impl Send for AutoPointer","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl Send for MemPool","synthetic":true,"types":[]},{"text":"impl Send for BasicFrame","synthetic":true,"types":[]},{"text":"impl Send for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for FrameRequest","synthetic":true,"types":[]}];
implementors["spirv_builder"] = [{"text":"impl Send for SpirvBuilder","synthetic":true,"types":[]},{"text":"impl Send for SpirvBuilderError","synthetic":true,"types":[]},{"text":"impl Send for MemoryModel","synthetic":true,"types":[]}];
implementors["spirv_headers"] = [{"text":"impl Send for ImageOperands","synthetic":true,"types":[]},{"text":"impl Send for FPFastMathMode","synthetic":true,"types":[]},{"text":"impl Send for SelectionControl","synthetic":true,"types":[]},{"text":"impl Send for LoopControl","synthetic":true,"types":[]},{"text":"impl Send for FunctionControl","synthetic":true,"types":[]},{"text":"impl Send for MemorySemantics","synthetic":true,"types":[]},{"text":"impl Send for MemoryAccess","synthetic":true,"types":[]},{"text":"impl Send for KernelProfilingInfo","synthetic":true,"types":[]},{"text":"impl Send for RayFlags","synthetic":true,"types":[]},{"text":"impl Send for SourceLanguage","synthetic":true,"types":[]},{"text":"impl Send for ExecutionModel","synthetic":true,"types":[]},{"text":"impl Send for AddressingModel","synthetic":true,"types":[]},{"text":"impl Send for MemoryModel","synthetic":true,"types":[]},{"text":"impl Send for ExecutionMode","synthetic":true,"types":[]},{"text":"impl Send for StorageClass","synthetic":true,"types":[]},{"text":"impl Send for Dim","synthetic":true,"types":[]},{"text":"impl Send for SamplerAddressingMode","synthetic":true,"types":[]},{"text":"impl Send for SamplerFilterMode","synthetic":true,"types":[]},{"text":"impl Send for ImageFormat","synthetic":true,"types":[]},{"text":"impl Send for ImageChannelOrder","synthetic":true,"types":[]},{"text":"impl Send for ImageChannelDataType","synthetic":true,"types":[]},{"text":"impl Send for FPRoundingMode","synthetic":true,"types":[]},{"text":"impl Send for LinkageType","synthetic":true,"types":[]},{"text":"impl Send for AccessQualifier","synthetic":true,"types":[]},{"text":"impl Send for FunctionParameterAttribute","synthetic":true,"types":[]},{"text":"impl Send for Decoration","synthetic":true,"types":[]},{"text":"impl Send for BuiltIn","synthetic":true,"types":[]},{"text":"impl Send for Scope","synthetic":true,"types":[]},{"text":"impl Send for GroupOperation","synthetic":true,"types":[]},{"text":"impl Send for KernelEnqueueFlags","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for RayQueryIntersection","synthetic":true,"types":[]},{"text":"impl Send for RayQueryCommittedIntersectionType","synthetic":true,"types":[]},{"text":"impl Send for RayQueryCandidateIntersectionType","synthetic":true,"types":[]},{"text":"impl Send for Op","synthetic":true,"types":[]},{"text":"impl Send for GLOp","synthetic":true,"types":[]},{"text":"impl Send for CLOp","synthetic":true,"types":[]}];
implementors["spirv_std"] = [{"text":"impl&lt;'a, T&gt; Send for UniformConstant&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Input&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Uniform&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Output&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Workgroup&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for CrossWorkgroup&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Private&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Function&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Generic&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for PushConstant&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for AtomicCounter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Image&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for StorageBuffer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for CallableDataKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IncomingCallableDataKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for RayPayloadKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for HitAttributeKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IncomingRayPayloadKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for ShaderRecordBufferKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for PhysicalStorageBuffer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Mat2","synthetic":true,"types":[]},{"text":"impl Send for Mat3","synthetic":true,"types":[]},{"text":"impl Send for Mat4","synthetic":true,"types":[]},{"text":"impl Send for Vec2","synthetic":true,"types":[]},{"text":"impl Send for Vec3","synthetic":true,"types":[]},{"text":"impl Send for Vec4","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; Send for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for HMetrics","synthetic":true,"types":[]},{"text":"impl Send for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; Send for FontNameIter&lt;'a, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for VertexType","synthetic":true,"types":[]},{"text":"impl Send for PlatformId","synthetic":true,"types":[]},{"text":"impl Send for UnicodeEid","synthetic":true,"types":[]},{"text":"impl Send for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl Send for MacEid","synthetic":true,"types":[]},{"text":"impl Send for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl Send for MacLang","synthetic":true,"types":[]},{"text":"impl Send for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl Send for StrSimError","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !Send for Attribute","synthetic":true,"types":[]},{"text":"impl !Send for MetaList","synthetic":true,"types":[]},{"text":"impl !Send for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !Send for Field","synthetic":true,"types":[]},{"text":"impl !Send for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !Send for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !Send for Variant","synthetic":true,"types":[]},{"text":"impl !Send for VisCrate","synthetic":true,"types":[]},{"text":"impl !Send for VisPublic","synthetic":true,"types":[]},{"text":"impl !Send for VisRestricted","synthetic":true,"types":[]},{"text":"impl Send for ExprArray","synthetic":true,"types":[]},{"text":"impl Send for ExprAssign","synthetic":true,"types":[]},{"text":"impl Send for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Send for ExprAsync","synthetic":true,"types":[]},{"text":"impl !Send for ExprBinary","synthetic":true,"types":[]},{"text":"impl Send for ExprBlock","synthetic":true,"types":[]},{"text":"impl Send for ExprBox","synthetic":true,"types":[]},{"text":"impl Send for ExprBreak","synthetic":true,"types":[]},{"text":"impl !Send for ExprCall","synthetic":true,"types":[]},{"text":"impl !Send for ExprCast","synthetic":true,"types":[]},{"text":"impl Send for ExprClosure","synthetic":true,"types":[]},{"text":"impl Send for ExprContinue","synthetic":true,"types":[]},{"text":"impl !Send for ExprField","synthetic":true,"types":[]},{"text":"impl Send for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Send for ExprGroup","synthetic":true,"types":[]},{"text":"impl Send for ExprIf","synthetic":true,"types":[]},{"text":"impl Send for ExprInPlace","synthetic":true,"types":[]},{"text":"impl !Send for ExprIndex","synthetic":true,"types":[]},{"text":"impl Send for ExprLet","synthetic":true,"types":[]},{"text":"impl !Send for ExprLit","synthetic":true,"types":[]},{"text":"impl Send for ExprLoop","synthetic":true,"types":[]},{"text":"impl Send for ExprMacro","synthetic":true,"types":[]},{"text":"impl Send for ExprMatch","synthetic":true,"types":[]},{"text":"impl Send for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !Send for ExprParen","synthetic":true,"types":[]},{"text":"impl !Send for ExprPath","synthetic":true,"types":[]},{"text":"impl Send for ExprRange","synthetic":true,"types":[]},{"text":"impl Send for ExprReference","synthetic":true,"types":[]},{"text":"impl Send for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Send for ExprReturn","synthetic":true,"types":[]},{"text":"impl Send for ExprStruct","synthetic":true,"types":[]},{"text":"impl Send for ExprTry","synthetic":true,"types":[]},{"text":"impl Send for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Send for ExprTuple","synthetic":true,"types":[]},{"text":"impl Send for ExprType","synthetic":true,"types":[]},{"text":"impl !Send for ExprUnary","synthetic":true,"types":[]},{"text":"impl Send for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !Send for ExprVerbatim","synthetic":true,"types":[]},{"text":"impl Send for ExprWhile","synthetic":true,"types":[]},{"text":"impl Send for ExprYield","synthetic":true,"types":[]},{"text":"impl !Send for Index","synthetic":true,"types":[]},{"text":"impl !Send for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !Send for ConstParam","synthetic":true,"types":[]},{"text":"impl !Send for Generics","synthetic":true,"types":[]},{"text":"impl !Send for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !Send for PredicateEq","synthetic":true,"types":[]},{"text":"impl !Send for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !Send for PredicateType","synthetic":true,"types":[]},{"text":"impl !Send for TraitBound","synthetic":true,"types":[]},{"text":"impl !Send for TypeParam","synthetic":true,"types":[]},{"text":"impl !Send for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Lifetime","synthetic":true,"types":[]},{"text":"impl !Send for LitBool","synthetic":true,"types":[]},{"text":"impl !Send for LitByte","synthetic":true,"types":[]},{"text":"impl !Send for LitByteStr","synthetic":true,"types":[]},{"text":"impl !Send for LitChar","synthetic":true,"types":[]},{"text":"impl !Send for LitFloat","synthetic":true,"types":[]},{"text":"impl !Send for LitInt","synthetic":true,"types":[]},{"text":"impl !Send for LitStr","synthetic":true,"types":[]},{"text":"impl !Send for LitVerbatim","synthetic":true,"types":[]},{"text":"impl !Send for Macro","synthetic":true,"types":[]},{"text":"impl !Send for DataEnum","synthetic":true,"types":[]},{"text":"impl !Send for DataStruct","synthetic":true,"types":[]},{"text":"impl !Send for DataUnion","synthetic":true,"types":[]},{"text":"impl !Send for DeriveInput","synthetic":true,"types":[]},{"text":"impl !Send for Abi","synthetic":true,"types":[]},{"text":"impl !Send for BareFnArg","synthetic":true,"types":[]},{"text":"impl !Send for TypeArray","synthetic":true,"types":[]},{"text":"impl !Send for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !Send for TypeGroup","synthetic":true,"types":[]},{"text":"impl !Send for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !Send for TypeInfer","synthetic":true,"types":[]},{"text":"impl !Send for TypeMacro","synthetic":true,"types":[]},{"text":"impl !Send for TypeNever","synthetic":true,"types":[]},{"text":"impl !Send for TypeParen","synthetic":true,"types":[]},{"text":"impl !Send for TypePath","synthetic":true,"types":[]},{"text":"impl !Send for TypePtr","synthetic":true,"types":[]},{"text":"impl !Send for TypeReference","synthetic":true,"types":[]},{"text":"impl !Send for TypeSlice","synthetic":true,"types":[]},{"text":"impl !Send for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !Send for TypeTuple","synthetic":true,"types":[]},{"text":"impl !Send for TypeVerbatim","synthetic":true,"types":[]},{"text":"impl !Send for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Send for Binding","synthetic":true,"types":[]},{"text":"impl !Send for Constraint","synthetic":true,"types":[]},{"text":"impl !Send for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Send for Path","synthetic":true,"types":[]},{"text":"impl !Send for PathSegment","synthetic":true,"types":[]},{"text":"impl !Send for QSelf","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl !Send for AttrStyle","synthetic":true,"types":[]},{"text":"impl !Send for Meta","synthetic":true,"types":[]},{"text":"impl !Send for NestedMeta","synthetic":true,"types":[]},{"text":"impl !Send for Fields","synthetic":true,"types":[]},{"text":"impl !Send for Visibility","synthetic":true,"types":[]},{"text":"impl !Send for Expr","synthetic":true,"types":[]},{"text":"impl !Send for Member","synthetic":true,"types":[]},{"text":"impl !Send for GenericParam","synthetic":true,"types":[]},{"text":"impl !Send for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !Send for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !Send for WherePredicate","synthetic":true,"types":[]},{"text":"impl Send for FloatSuffix","synthetic":true,"types":[]},{"text":"impl Send for IntSuffix","synthetic":true,"types":[]},{"text":"impl !Send for Lit","synthetic":true,"types":[]},{"text":"impl Send for StrStyle","synthetic":true,"types":[]},{"text":"impl !Send for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !Send for Data","synthetic":true,"types":[]},{"text":"impl !Send for BinOp","synthetic":true,"types":[]},{"text":"impl !Send for UnOp","synthetic":true,"types":[]},{"text":"impl !Send for BareFnArgName","synthetic":true,"types":[]},{"text":"impl !Send for ReturnType","synthetic":true,"types":[]},{"text":"impl !Send for Type","synthetic":true,"types":[]},{"text":"impl !Send for GenericArgument","synthetic":true,"types":[]},{"text":"impl !Send for PathArguments","synthetic":true,"types":[]},{"text":"impl !Send for Underscore","synthetic":true,"types":[]},{"text":"impl !Send for Abstract","synthetic":true,"types":[]},{"text":"impl !Send for As","synthetic":true,"types":[]},{"text":"impl !Send for Async","synthetic":true,"types":[]},{"text":"impl !Send for Auto","synthetic":true,"types":[]},{"text":"impl !Send for Become","synthetic":true,"types":[]},{"text":"impl !Send for Box","synthetic":true,"types":[]},{"text":"impl !Send for Break","synthetic":true,"types":[]},{"text":"impl !Send for Const","synthetic":true,"types":[]},{"text":"impl !Send for Continue","synthetic":true,"types":[]},{"text":"impl !Send for Crate","synthetic":true,"types":[]},{"text":"impl !Send for Default","synthetic":true,"types":[]},{"text":"impl !Send for Do","synthetic":true,"types":[]},{"text":"impl !Send for Dyn","synthetic":true,"types":[]},{"text":"impl !Send for Else","synthetic":true,"types":[]},{"text":"impl !Send for Enum","synthetic":true,"types":[]},{"text":"impl !Send for Existential","synthetic":true,"types":[]},{"text":"impl !Send for Extern","synthetic":true,"types":[]},{"text":"impl !Send for Final","synthetic":true,"types":[]},{"text":"impl !Send for Fn","synthetic":true,"types":[]},{"text":"impl !Send for For","synthetic":true,"types":[]},{"text":"impl !Send for If","synthetic":true,"types":[]},{"text":"impl !Send for Impl","synthetic":true,"types":[]},{"text":"impl !Send for In","synthetic":true,"types":[]},{"text":"impl !Send for Let","synthetic":true,"types":[]},{"text":"impl !Send for Loop","synthetic":true,"types":[]},{"text":"impl !Send for Macro","synthetic":true,"types":[]},{"text":"impl !Send for Match","synthetic":true,"types":[]},{"text":"impl !Send for Mod","synthetic":true,"types":[]},{"text":"impl !Send for Move","synthetic":true,"types":[]},{"text":"impl !Send for Mut","synthetic":true,"types":[]},{"text":"impl !Send for Override","synthetic":true,"types":[]},{"text":"impl !Send for Priv","synthetic":true,"types":[]},{"text":"impl !Send for Pub","synthetic":true,"types":[]},{"text":"impl !Send for Ref","synthetic":true,"types":[]},{"text":"impl !Send for Return","synthetic":true,"types":[]},{"text":"impl !Send for SelfType","synthetic":true,"types":[]},{"text":"impl !Send for SelfValue","synthetic":true,"types":[]},{"text":"impl !Send for Static","synthetic":true,"types":[]},{"text":"impl !Send for Struct","synthetic":true,"types":[]},{"text":"impl !Send for Super","synthetic":true,"types":[]},{"text":"impl !Send for Trait","synthetic":true,"types":[]},{"text":"impl !Send for Try","synthetic":true,"types":[]},{"text":"impl !Send for Type","synthetic":true,"types":[]},{"text":"impl !Send for Typeof","synthetic":true,"types":[]},{"text":"impl !Send for Union","synthetic":true,"types":[]},{"text":"impl !Send for Unsafe","synthetic":true,"types":[]},{"text":"impl !Send for Unsized","synthetic":true,"types":[]},{"text":"impl !Send for Use","synthetic":true,"types":[]},{"text":"impl !Send for Virtual","synthetic":true,"types":[]},{"text":"impl !Send for Where","synthetic":true,"types":[]},{"text":"impl !Send for While","synthetic":true,"types":[]},{"text":"impl !Send for Yield","synthetic":true,"types":[]},{"text":"impl !Send for Add","synthetic":true,"types":[]},{"text":"impl !Send for AddEq","synthetic":true,"types":[]},{"text":"impl !Send for And","synthetic":true,"types":[]},{"text":"impl !Send for AndAnd","synthetic":true,"types":[]},{"text":"impl !Send for AndEq","synthetic":true,"types":[]},{"text":"impl !Send for At","synthetic":true,"types":[]},{"text":"impl !Send for Bang","synthetic":true,"types":[]},{"text":"impl !Send for Caret","synthetic":true,"types":[]},{"text":"impl !Send for CaretEq","synthetic":true,"types":[]},{"text":"impl !Send for Colon","synthetic":true,"types":[]},{"text":"impl !Send for Colon2","synthetic":true,"types":[]},{"text":"impl !Send for Comma","synthetic":true,"types":[]},{"text":"impl !Send for Div","synthetic":true,"types":[]},{"text":"impl !Send for DivEq","synthetic":true,"types":[]},{"text":"impl !Send for Dollar","synthetic":true,"types":[]},{"text":"impl !Send for Dot","synthetic":true,"types":[]},{"text":"impl !Send for Dot2","synthetic":true,"types":[]},{"text":"impl !Send for Dot3","synthetic":true,"types":[]},{"text":"impl !Send for DotDotEq","synthetic":true,"types":[]},{"text":"impl !Send for Eq","synthetic":true,"types":[]},{"text":"impl !Send for EqEq","synthetic":true,"types":[]},{"text":"impl !Send for Ge","synthetic":true,"types":[]},{"text":"impl !Send for Gt","synthetic":true,"types":[]},{"text":"impl !Send for Le","synthetic":true,"types":[]},{"text":"impl !Send for Lt","synthetic":true,"types":[]},{"text":"impl !Send for MulEq","synthetic":true,"types":[]},{"text":"impl !Send for Ne","synthetic":true,"types":[]},{"text":"impl !Send for Or","synthetic":true,"types":[]},{"text":"impl !Send for OrEq","synthetic":true,"types":[]},{"text":"impl !Send for OrOr","synthetic":true,"types":[]},{"text":"impl !Send for Pound","synthetic":true,"types":[]},{"text":"impl !Send for Question","synthetic":true,"types":[]},{"text":"impl !Send for RArrow","synthetic":true,"types":[]},{"text":"impl !Send for LArrow","synthetic":true,"types":[]},{"text":"impl !Send for Rem","synthetic":true,"types":[]},{"text":"impl !Send for RemEq","synthetic":true,"types":[]},{"text":"impl !Send for FatArrow","synthetic":true,"types":[]},{"text":"impl !Send for Semi","synthetic":true,"types":[]},{"text":"impl !Send for Shl","synthetic":true,"types":[]},{"text":"impl !Send for ShlEq","synthetic":true,"types":[]},{"text":"impl !Send for Shr","synthetic":true,"types":[]},{"text":"impl !Send for ShrEq","synthetic":true,"types":[]},{"text":"impl !Send for Star","synthetic":true,"types":[]},{"text":"impl !Send for Sub","synthetic":true,"types":[]},{"text":"impl !Send for SubEq","synthetic":true,"types":[]},{"text":"impl !Send for Tilde","synthetic":true,"types":[]},{"text":"impl !Send for Brace","synthetic":true,"types":[]},{"text":"impl !Send for Bracket","synthetic":true,"types":[]},{"text":"impl !Send for Paren","synthetic":true,"types":[]},{"text":"impl !Send for Group","synthetic":true,"types":[]},{"text":"impl !Send for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Send for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Send for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for IntoIter&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !Send for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]}];
implementors["tar"] = [{"text":"impl&lt;R:&nbsp;?Sized&gt; Send for Archive&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !Send for Entries&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for Builder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !Send for Entry&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl Send for GnuExtSparseHeader","synthetic":true,"types":[]},{"text":"impl Send for GnuHeader","synthetic":true,"types":[]},{"text":"impl Send for GnuSparseHeader","synthetic":true,"types":[]},{"text":"impl Send for Header","synthetic":true,"types":[]},{"text":"impl Send for OldHeader","synthetic":true,"types":[]},{"text":"impl Send for UstarHeader","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; Send for PaxExtension&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; Send for PaxExtensions&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl Send for Unpacked","synthetic":true,"types":[]},{"text":"impl Send for EntryType","synthetic":true,"types":[]},{"text":"impl Send for HeaderMode","synthetic":true,"types":[]}];
implementors["tempfile"] = [{"text":"impl Send for TempDir","synthetic":true,"types":[]},{"text":"impl Send for NamedTempFile","synthetic":true,"types":[]},{"text":"impl Send for PathPersistError","synthetic":true,"types":[]},{"text":"impl Send for PersistError","synthetic":true,"types":[]},{"text":"impl Send for TempPath","synthetic":true,"types":[]},{"text":"impl Send for SpooledTempFile","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for Builder&lt;'a, 'b&gt;","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl Send for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl Send for NoHyphenation","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Send for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Send for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; Send for WrapIter&lt;'w, 'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !Send for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Send for Duration","synthetic":true,"types":[]},{"text":"impl Send for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Send for Timespec","synthetic":true,"types":[]},{"text":"impl Send for PreciseTime","synthetic":true,"types":[]},{"text":"impl Send for SteadyTime","synthetic":true,"types":[]},{"text":"impl Send for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ParseError","synthetic":true,"types":[]}];
implementors["topological_sort"] = [{"text":"impl&lt;T&gt; Send for TopologicalSort&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DependencyLink&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl Send for Span","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for WithDispatch&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Entered&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Send for Dispatch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Field","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]},{"text":"impl Send for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Identifier","synthetic":true,"types":[]},{"text":"impl Send for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Send for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl Send for Empty","synthetic":true,"types":[]},{"text":"impl Send for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl Send for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Send for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Current","synthetic":true,"types":[]},{"text":"impl Send for Interest","synthetic":true,"types":[]}];
implementors["tracing_log"] = [{"text":"impl Send for LogTracer","synthetic":true,"types":[]},{"text":"impl Send for TraceLogger","synthetic":true,"types":[]},{"text":"impl Send for Builder","synthetic":true,"types":[]},{"text":"impl Send for Builder","synthetic":true,"types":[]}];
implementors["tracing_serde"] = [{"text":"impl Send for SerializeField","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SerializeFieldSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SerializeLevel&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SerializeId&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SerializeMetadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SerializeEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SerializeAttributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SerializeRecord&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for SerdeMapVisitor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as SerializeMap&gt;::Error: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for SerdeStructVisitor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as SerializeStruct&gt;::Error: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for SerializeFieldMap&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing_subscriber"] = [{"text":"impl Send for EnvFilter","synthetic":true,"types":[]},{"text":"impl Send for Registry","synthetic":true,"types":[]},{"text":"impl Send for CurrentSpan","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for Alt&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, V&gt; Send for Delimited&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, V&gt; Send for VisitDelimited&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for Messages&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Directive","synthetic":true,"types":[]},{"text":"impl Send for ParseError","synthetic":true,"types":[]},{"text":"impl Send for BadName","synthetic":true,"types":[]},{"text":"impl Send for FromEnvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, N&gt; Send for FmtContext&lt;'a, S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for FormattedFields&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, N, E, W&gt; Send for Layer&lt;S, N, E, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for TestWriter","synthetic":true,"types":[]},{"text":"impl&lt;N, E, F, W&gt; Send for Subscriber&lt;N, E, F, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, F, W&gt; Send for SubscriberBuilder&lt;N, E, F, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Json","synthetic":true,"types":[]},{"text":"impl Send for JsonFields","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for JsonVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for FieldFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; !Send for FieldFnVisitor&lt;'a, F&gt;","synthetic":true,"types":[]},{"text":"impl Send for Compact","synthetic":true,"types":[]},{"text":"impl Send for Full","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Send for Format&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DefaultFields","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DefaultVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for FmtSpan","synthetic":true,"types":[]},{"text":"impl Send for SystemTime","synthetic":true,"types":[]},{"text":"impl Send for Uptime","synthetic":true,"types":[]},{"text":"impl Send for ChronoUtc","synthetic":true,"types":[]},{"text":"impl Send for ChronoLocal","synthetic":true,"types":[]},{"text":"impl Send for BoxMakeWriter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Send for Context&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, I, S&gt; Send for Layered&lt;L, I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Identity","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; Send for Scope&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;L as LookupSpan&lt;'a&gt;&gt;::Data: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Extensions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExtensionsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Data&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for SpanRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as LookupSpan&lt;'a&gt;&gt;::Data: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for Parents&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for FromRoot&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as LookupSpan&lt;'a&gt;&gt;::Data: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, S&gt; Send for Layer&lt;L, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, S&gt; Send for Handle&lt;L, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for TryInitError","synthetic":true,"types":[]}];
implementors["ttf_parser"] = [{"text":"impl&lt;'a&gt; Send for VariationAxes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for VariationAxis","synthetic":true,"types":[]},{"text":"impl Send for Class","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Names&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ScriptMetrics","synthetic":true,"types":[]},{"text":"impl Send for GlyphId","synthetic":true,"types":[]},{"text":"impl Send for Variation","synthetic":true,"types":[]},{"text":"impl Send for Tag","synthetic":true,"types":[]},{"text":"impl Send for LineMetrics","synthetic":true,"types":[]},{"text":"impl Send for Rect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RasterGlyphImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for GlyphClass","synthetic":true,"types":[]},{"text":"impl Send for PlatformId","synthetic":true,"types":[]},{"text":"impl Send for Weight","synthetic":true,"types":[]},{"text":"impl Send for Width","synthetic":true,"types":[]},{"text":"impl Send for RasterImageFormat","synthetic":true,"types":[]},{"text":"impl Send for TableName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Subtable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Subtables&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for ValueOffset","synthetic":true,"types":[]},{"text":"impl Send for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Machine&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["typed_arena"] = [{"text":"impl&lt;T&gt; Send for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Send for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for GraphemeCursor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for UWordBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for UWordBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for UnicodeWords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for USentenceBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for USentenceBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for UnicodeSentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for GraphemeIncomplete","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Send for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for VacantEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for OccupiedEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for Iter&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for IterMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for Keys&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for Values&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for ValuesMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for Drain&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Send for Entry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["void"] = [{"text":"impl Send for Void","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl Send for DirEntry","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for WalkDir","synthetic":true,"types":[]},{"text":"impl Send for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Send for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Send for Display","synthetic":true,"types":[]},{"text":"impl Send for ProtocolError","synthetic":true,"types":[]},{"text":"impl !Send for EventQueue","synthetic":true,"types":[]},{"text":"impl !Send for QueueToken","synthetic":true,"types":[]},{"text":"impl !Send for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl Send for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !Send for NewProxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Proxy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AnonymousObject","synthetic":true,"types":[]},{"text":"impl Send for ConnectError","synthetic":true,"types":[]},{"text":"impl Send for GlobalError","synthetic":true,"types":[]},{"text":"impl Send for GlobalEvent","synthetic":true,"types":[]},{"text":"impl Send for ProxyMap","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for BlockingMsgIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Send for WlDisplay","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlRegistry","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlCallback","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlCompositor","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlShmPool","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlShm","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlBuffer","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlDataOffer","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlDataSource","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlDataDevice","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for DndAction","synthetic":true,"types":[]},{"text":"impl Send for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlShell","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Resize","synthetic":true,"types":[]},{"text":"impl Send for Transient","synthetic":true,"types":[]},{"text":"impl Send for WlShellSurface","synthetic":true,"types":[]},{"text":"impl Send for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlSurface","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for WlSeat","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlPointer","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Axis","synthetic":true,"types":[]},{"text":"impl Send for AxisSource","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlKeyboard","synthetic":true,"types":[]},{"text":"impl Send for KeymapFormat","synthetic":true,"types":[]},{"text":"impl Send for KeyState","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlTouch","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for WlOutput","synthetic":true,"types":[]},{"text":"impl Send for Subpixel","synthetic":true,"types":[]},{"text":"impl Send for Transform","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlRegion","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlSubsurface","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for CursorTheme","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for CursorImageBuffer&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Send for WlEglSurface","synthetic":false,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl Send for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DispatchData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Send for Filter&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Send for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Send for ObjectMap&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Socket","synthetic":true,"types":[]},{"text":"impl Send for BufferedSocket","synthetic":true,"types":[]},{"text":"impl Send for UserDataMap","synthetic":true,"types":[]},{"text":"impl Send for MessageDesc","synthetic":true,"types":[]},{"text":"impl Send for Message","synthetic":true,"types":[]},{"text":"impl Send for ArgumentType","synthetic":true,"types":[]},{"text":"impl Send for Argument","synthetic":true,"types":[]},{"text":"impl Send for MessageWriteError","synthetic":true,"types":[]},{"text":"impl Send for MessageParseError","synthetic":true,"types":[]},{"text":"impl Send for UserData","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Send for ThreadGuard&lt;T&gt;","synthetic":false,"types":[]}];
implementors["wayland_cursor"] = [{"text":"impl !Send for CursorTheme","synthetic":true,"types":[]},{"text":"impl Send for Cursor","synthetic":true,"types":[]},{"text":"impl Send for CursorImageBuffer","synthetic":true,"types":[]},{"text":"impl Send for FrameAndDuration","synthetic":true,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl Send for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for PresentMethod","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl Send for Position","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Lifetime","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl Send for Source","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl Send for Source","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl Send for ContentHint","synthetic":true,"types":[]},{"text":"impl Send for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Send for PreeditStyle","synthetic":true,"types":[]},{"text":"impl Send for TextDirection","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ContentHint","synthetic":true,"types":[]},{"text":"impl Send for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl Send for ChangeCause","synthetic":true,"types":[]},{"text":"impl Send for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgShell","synthetic":true,"types":[]},{"text":"impl Send for Version","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgSurface","synthetic":true,"types":[]},{"text":"impl Send for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgPopup","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Anchor","synthetic":true,"types":[]},{"text":"impl Send for Gravity","synthetic":true,"types":[]},{"text":"impl Send for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Send for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl Send for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for GtkPrimarySelectionDeviceManager","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for GtkPrimarySelectionDevice","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for GtkPrimarySelectionOffer","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for GtkPrimarySelectionSource","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for CancelReason","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Layer","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Anchor","synthetic":true,"types":[]},{"text":"impl Send for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WpPresentation","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgWmBase","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Send for XdgPositioner","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Anchor","synthetic":true,"types":[]},{"text":"impl Send for Gravity","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgSurface","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgToplevel","synthetic":true,"types":[]},{"text":"impl Send for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgPopup","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WpViewporter","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WpViewport","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl !Send for wl_message","synthetic":true,"types":[]},{"text":"impl !Send for wl_interface","synthetic":true,"types":[]},{"text":"impl !Send for wl_list","synthetic":true,"types":[]},{"text":"impl !Send for wl_array","synthetic":true,"types":[]},{"text":"impl !Send for wl_argument","synthetic":true,"types":[]},{"text":"impl Send for wl_proxy","synthetic":true,"types":[]},{"text":"impl Send for wl_display","synthetic":true,"types":[]},{"text":"impl Send for wl_event_queue","synthetic":true,"types":[]},{"text":"impl !Send for wl_listener","synthetic":true,"types":[]},{"text":"impl !Send for wl_signal","synthetic":true,"types":[]},{"text":"impl Send for wl_client","synthetic":true,"types":[]},{"text":"impl Send for wl_display","synthetic":true,"types":[]},{"text":"impl Send for wl_event_loop","synthetic":true,"types":[]},{"text":"impl Send for wl_event_source","synthetic":true,"types":[]},{"text":"impl Send for wl_global","synthetic":true,"types":[]},{"text":"impl Send for wl_resource","synthetic":true,"types":[]},{"text":"impl Send for wl_shm_buffer","synthetic":true,"types":[]}];
implementors["wgpu"] = [{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for Adapter","synthetic":true,"types":[]},{"text":"impl Send for Device","synthetic":true,"types":[]},{"text":"impl Send for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Texture","synthetic":true,"types":[]},{"text":"impl Send for TextureView","synthetic":true,"types":[]},{"text":"impl Send for Sampler","synthetic":true,"types":[]},{"text":"impl Send for Surface","synthetic":true,"types":[]},{"text":"impl Send for SwapChain","synthetic":true,"types":[]},{"text":"impl Send for BindGroupLayout","synthetic":true,"types":[]},{"text":"impl Send for BindGroup","synthetic":true,"types":[]},{"text":"impl Send for ShaderModule","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayout","synthetic":true,"types":[]},{"text":"impl Send for RenderPipeline","synthetic":true,"types":[]},{"text":"impl Send for ComputePipeline","synthetic":true,"types":[]},{"text":"impl Send for CommandBuffer","synthetic":true,"types":[]},{"text":"impl !Send for CommandEncoder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ComputePass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderBundleEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RenderBundle","synthetic":true,"types":[]},{"text":"impl Send for Queue","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for Operations&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPassColorAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPassDepthStencilAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for CommandEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderBundleDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextureDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for RenderPassDescriptor&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SwapChainTexture","synthetic":true,"types":[]},{"text":"impl Send for SwapChainFrame","synthetic":true,"types":[]},{"text":"impl Send for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl Send for BufferAsyncError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferViewMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Maintain","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for LoadOp&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SwapChainError","synthetic":true,"types":[]},{"text":"impl Send for MapMode","synthetic":true,"types":[]},{"text":"impl Send for StagingBelt","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferInitDescriptor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl Send for BindingTypeMaxCountError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for BindGroupLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for PipelineLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BufferBinding","synthetic":true,"types":[]},{"text":"impl Send for BindGroupDynamicBindingData","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for BindGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CreateBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl Send for CreateBindGroupError","synthetic":true,"types":[]},{"text":"impl Send for BindingZone","synthetic":true,"types":[]},{"text":"impl Send for BindingTypeMaxCountErrorKind","synthetic":true,"types":[]},{"text":"impl Send for CreatePipelineLayoutError","synthetic":true,"types":[]},{"text":"impl Send for PushConstantUploadError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindError","synthetic":true,"types":[]},{"text":"impl Send for GetBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RenderBundleEncoder","synthetic":true,"types":[]},{"text":"impl Send for ComputePass","synthetic":true,"types":[]},{"text":"impl Send for ComputePassDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for PassChannel&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ColorAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPassDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for CommandBuffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; Send for BasePassRef&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CommandAllocatorError","synthetic":true,"types":[]},{"text":"impl Send for CreateRenderBundleError","synthetic":true,"types":[]},{"text":"impl Send for RenderBundleError","synthetic":true,"types":[]},{"text":"impl Send for DispatchError","synthetic":true,"types":[]},{"text":"impl Send for ComputePassError","synthetic":true,"types":[]},{"text":"impl Send for DrawError","synthetic":true,"types":[]},{"text":"impl Send for RenderCommandError","synthetic":true,"types":[]},{"text":"impl Send for LoadOp","synthetic":true,"types":[]},{"text":"impl Send for StoreOp","synthetic":true,"types":[]},{"text":"impl Send for RenderPassError","synthetic":true,"types":[]},{"text":"impl Send for TransferError","synthetic":true,"types":[]},{"text":"impl Send for CopyError","synthetic":true,"types":[]},{"text":"impl Send for CommandEncoderError","synthetic":true,"types":[]},{"text":"impl Send for UsageConflict","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Device&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for InvalidDevice","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; Send for ImplicitPipelineIds&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for HostMap","synthetic":true,"types":[]},{"text":"impl Send for CreateDeviceError","synthetic":true,"types":[]},{"text":"impl Send for DeviceError","synthetic":true,"types":[]},{"text":"impl Send for IdentityManager","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Send for Storage&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Token&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for IdentityManagerFactory","synthetic":true,"types":[]},{"text":"impl&lt;T, I, F&gt; Send for Registry&lt;T, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;I&gt;&gt;::Filter: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, F&gt; Send for Hub&lt;B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;B as Backend&gt;::Surface as PresentationSurface&lt;B&gt;&gt;::SwapchainImage: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Hubs&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Send for Global&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Surface&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Root","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Id&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for Surface","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AdapterInfo","synthetic":true,"types":[]},{"text":"impl Send for InvalidAdapter","synthetic":true,"types":[]},{"text":"impl Send for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl Send for DeviceType","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for AdapterInputs&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RequestAdapterError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for ShaderModule&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for ComputePipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineFlags","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for RenderPipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CreateShaderModuleError","synthetic":true,"types":[]},{"text":"impl Send for ImplicitLayoutError","synthetic":true,"types":[]},{"text":"impl Send for CreateComputePipelineError","synthetic":true,"types":[]},{"text":"impl Send for CreateRenderPipelineError","synthetic":true,"types":[]},{"text":"impl Send for BufferUse","synthetic":true,"types":[]},{"text":"impl Send for TextureUse","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Buffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Texture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for TextureView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;B as Backend&gt;::Surface as PresentationSurface&lt;B&gt;&gt;::SwapchainImage: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Sampler&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BufferMapAsyncStatus","synthetic":true,"types":[]},{"text":"impl Send for BufferAccessError","synthetic":true,"types":[]},{"text":"impl Send for CreateBufferError","synthetic":true,"types":[]},{"text":"impl Send for TextureDimensionError","synthetic":true,"types":[]},{"text":"impl Send for CreateTextureError","synthetic":true,"types":[]},{"text":"impl Send for CreateTextureViewError","synthetic":true,"types":[]},{"text":"impl Send for TextureViewDestroyError","synthetic":true,"types":[]},{"text":"impl Send for CreateSamplerError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for SwapChain&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SwapChainOutput","synthetic":true,"types":[]},{"text":"impl Send for InvalidSwapChain","synthetic":true,"types":[]},{"text":"impl Send for SwapChainError","synthetic":true,"types":[]},{"text":"impl Send for CreateSwapChainError","synthetic":true,"types":[]},{"text":"impl Send for RenderBundle","synthetic":false,"types":[]},{"text":"impl Send for BufferMapOperation","synthetic":false,"types":[]}];
implementors["wgpu_subscriber"] = [{"text":"impl Send for ChromeTracingLayer","synthetic":true,"types":[]},{"text":"impl Send for FmtLayer","synthetic":true,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl Send for BackendBit","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for RequestAdapterOptions&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Features","synthetic":true,"types":[]},{"text":"impl Send for Limits","synthetic":true,"types":[]},{"text":"impl Send for DeviceDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ShaderStage","synthetic":true,"types":[]},{"text":"impl Send for BlendDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ColorStateDescriptor","synthetic":true,"types":[]},{"text":"impl Send for RasterizationStateDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ColorWrite","synthetic":true,"types":[]},{"text":"impl Send for StencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl Send for StencilStateFaceDescriptor","synthetic":true,"types":[]},{"text":"impl Send for VertexAttributeDescriptor","synthetic":true,"types":[]},{"text":"impl Send for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for BufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for CommandEncoderDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for TextureUsage","synthetic":true,"types":[]},{"text":"impl Send for SwapChainDescriptor","synthetic":true,"types":[]},{"text":"impl Send for Color","synthetic":true,"types":[]},{"text":"impl Send for Origin3d","synthetic":true,"types":[]},{"text":"impl Send for Extent3d","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for TextureDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for CommandBufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for RenderBundleDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for TextureDataLayout","synthetic":true,"types":[]},{"text":"impl Send for BindGroupLayoutEntry","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for BufferCopyView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TextureCopyView&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Backend","synthetic":true,"types":[]},{"text":"impl Send for PowerPreference","synthetic":true,"types":[]},{"text":"impl Send for TextureViewDimension","synthetic":true,"types":[]},{"text":"impl Send for BlendFactor","synthetic":true,"types":[]},{"text":"impl Send for BlendOperation","synthetic":true,"types":[]},{"text":"impl Send for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl Send for FrontFace","synthetic":true,"types":[]},{"text":"impl Send for CullMode","synthetic":true,"types":[]},{"text":"impl Send for TextureFormat","synthetic":true,"types":[]},{"text":"impl Send for IndexFormat","synthetic":true,"types":[]},{"text":"impl Send for StencilOperation","synthetic":true,"types":[]},{"text":"impl Send for CompareFunction","synthetic":true,"types":[]},{"text":"impl Send for InputStepMode","synthetic":true,"types":[]},{"text":"impl Send for VertexFormat","synthetic":true,"types":[]},{"text":"impl Send for PresentMode","synthetic":true,"types":[]},{"text":"impl Send for SwapChainStatus","synthetic":true,"types":[]},{"text":"impl Send for TextureDimension","synthetic":true,"types":[]},{"text":"impl Send for TextureAspect","synthetic":true,"types":[]},{"text":"impl Send for AddressMode","synthetic":true,"types":[]},{"text":"impl Send for FilterMode","synthetic":true,"types":[]},{"text":"impl Send for TextureComponentType","synthetic":true,"types":[]},{"text":"impl Send for BindingType","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl&lt;P&gt; Send for LogicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for PhysicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for LogicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for PhysicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Size","synthetic":true,"types":[]},{"text":"impl Send for Position","synthetic":true,"types":[]},{"text":"impl Send for NotSupportedError","synthetic":true,"types":[]},{"text":"impl Send for OsError","synthetic":true,"types":[]},{"text":"impl Send for ExternalError","synthetic":true,"types":[]},{"text":"impl Send for DeviceId","synthetic":true,"types":[]},{"text":"impl Send for KeyboardInput","synthetic":true,"types":[]},{"text":"impl Send for Touch","synthetic":true,"types":[]},{"text":"impl Send for ModifiersState","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Event&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for StartCause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for WindowEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DeviceEvent","synthetic":true,"types":[]},{"text":"impl Send for TouchPhase","synthetic":true,"types":[]},{"text":"impl Send for Force","synthetic":true,"types":[]},{"text":"impl Send for ElementState","synthetic":true,"types":[]},{"text":"impl Send for MouseButton","synthetic":true,"types":[]},{"text":"impl Send for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl Send for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for EventLoop&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for EventLoopWindowTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for EventLoopProxy&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for EventLoopClosed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ControlFlow","synthetic":true,"types":[]},{"text":"impl Send for Icon","synthetic":true,"types":[]},{"text":"impl Send for BadIcon","synthetic":true,"types":[]},{"text":"impl Send for VideoMode","synthetic":true,"types":[]},{"text":"impl Send for MonitorHandle","synthetic":true,"types":[]},{"text":"impl Send for WindowType","synthetic":true,"types":[]},{"text":"impl Send for XNotSupported","synthetic":true,"types":[]},{"text":"impl Send for Window","synthetic":true,"types":[]},{"text":"impl Send for WindowId","synthetic":true,"types":[]},{"text":"impl !Send for WindowBuilder","synthetic":true,"types":[]},{"text":"impl Send for WindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for CursorIcon","synthetic":true,"types":[]},{"text":"impl Send for Fullscreen","synthetic":true,"types":[]},{"text":"impl Send for Theme","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]}];
implementors["x11"] = [{"text":"impl Send for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl Send for XcmsColor","synthetic":true,"types":[]},{"text":"impl Send for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl Send for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl Send for _XkbAction","synthetic":true,"types":[]},{"text":"impl Send for _XkbBounds","synthetic":true,"types":[]},{"text":"impl Send for _XkbChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbColor","synthetic":true,"types":[]},{"text":"impl Send for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl Send for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl Send for _XkbControls","synthetic":true,"types":[]},{"text":"impl Send for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl Send for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl Send for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl Send for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl Send for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKey","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl Send for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbMods","synthetic":true,"types":[]},{"text":"impl Send for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbOutline","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl Send for _XkbProperty","synthetic":true,"types":[]},{"text":"impl Send for _XkbRow","synthetic":true,"types":[]},{"text":"impl Send for _XkbSection","synthetic":true,"types":[]},{"text":"impl Send for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbShape","synthetic":true,"types":[]},{"text":"impl Send for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl !Send for XAnyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XButtonEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl !Send for XColormapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl !Send for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl !Send for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl !Send for XErrorEvent","synthetic":true,"types":[]},{"text":"impl !Send for XExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XGravityEvent","synthetic":true,"types":[]},{"text":"impl !Send for XKeyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMappingEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMotionEvent","synthetic":true,"types":[]},{"text":"impl !Send for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XReparentEvent","synthetic":true,"types":[]},{"text":"impl !Send for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl !Send for _XkbDesc","synthetic":true,"types":[]},{"text":"impl Send for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl !Send for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl !Send for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for XkbEvent","synthetic":true,"types":[]},{"text":"impl !Send for Depth","synthetic":true,"types":[]},{"text":"impl !Send for Screen","synthetic":true,"types":[]},{"text":"impl !Send for ScreenFormat","synthetic":true,"types":[]},{"text":"impl !Send for Visual","synthetic":true,"types":[]},{"text":"impl Send for XArc","synthetic":true,"types":[]},{"text":"impl Send for XChar2b","synthetic":true,"types":[]},{"text":"impl Send for XCharStruct","synthetic":true,"types":[]},{"text":"impl !Send for XClassHint","synthetic":true,"types":[]},{"text":"impl Send for XColor","synthetic":true,"types":[]},{"text":"impl !Send for XComposeStatus","synthetic":true,"types":[]},{"text":"impl Send for XExtCodes","synthetic":true,"types":[]},{"text":"impl !Send for XExtData","synthetic":true,"types":[]},{"text":"impl Send for XFontProp","synthetic":true,"types":[]},{"text":"impl Send for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl !Send for XFontStruct","synthetic":true,"types":[]},{"text":"impl Send for XGCValues","synthetic":true,"types":[]},{"text":"impl !Send for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl !Send for XHostAddress","synthetic":true,"types":[]},{"text":"impl Send for XIconSize","synthetic":true,"types":[]},{"text":"impl !Send for XImage","synthetic":true,"types":[]},{"text":"impl Send for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl Send for XKeyboardState","synthetic":true,"types":[]},{"text":"impl !Send for XmbTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl !Send for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl Send for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl Send for XPoint","synthetic":true,"types":[]},{"text":"impl Send for XRectangle","synthetic":true,"types":[]},{"text":"impl !Send for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl !Send for XrmValue","synthetic":true,"types":[]},{"text":"impl Send for XSegment","synthetic":true,"types":[]},{"text":"impl Send for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for XSizeHints","synthetic":true,"types":[]},{"text":"impl Send for XStandardColormap","synthetic":true,"types":[]},{"text":"impl !Send for XTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XTextItem16","synthetic":true,"types":[]},{"text":"impl !Send for XTextProperty","synthetic":true,"types":[]},{"text":"impl Send for XTimeCoord","synthetic":true,"types":[]},{"text":"impl !Send for XVisualInfo","synthetic":true,"types":[]},{"text":"impl !Send for XwcTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for XWindowChanges","synthetic":true,"types":[]},{"text":"impl Send for XWMHints","synthetic":true,"types":[]},{"text":"impl !Send for XIMCallback","synthetic":true,"types":[]},{"text":"impl !Send for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl Send for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl !Send for XIMText","synthetic":true,"types":[]},{"text":"impl !Send for XICCallback","synthetic":true,"types":[]},{"text":"impl Send for AspectRatio","synthetic":true,"types":[]},{"text":"impl Send for ClientMessageData","synthetic":true,"types":[]},{"text":"impl Send for ImageFns","synthetic":true,"types":[]},{"text":"impl !Send for XEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIMTextString","synthetic":true,"types":[]},{"text":"impl Send for _XDisplay","synthetic":true,"types":[]},{"text":"impl Send for xError","synthetic":true,"types":[]},{"text":"impl Send for xEvent","synthetic":true,"types":[]},{"text":"impl Send for _XGC","synthetic":true,"types":[]},{"text":"impl Send for _XIC","synthetic":true,"types":[]},{"text":"impl Send for _XIM","synthetic":true,"types":[]},{"text":"impl Send for _XRegion","synthetic":true,"types":[]},{"text":"impl Send for _XOC","synthetic":true,"types":[]},{"text":"impl Send for _XOM","synthetic":true,"types":[]},{"text":"impl Send for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl Send for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl Send for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl Send for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl Send for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl Send for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl Send for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorComment","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorComments","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorFile","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl Send for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorImage","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorImages","synthetic":true,"types":[]},{"text":"impl Send for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl Send for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XftFont","synthetic":true,"types":[]},{"text":"impl Send for XftColor","synthetic":true,"types":[]},{"text":"impl Send for XftCharSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftFontSet","synthetic":true,"types":[]},{"text":"impl Send for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl Send for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl Send for FcCharSet","synthetic":true,"types":[]},{"text":"impl Send for FcPattern","synthetic":true,"types":[]},{"text":"impl Send for FcEndian","synthetic":true,"types":[]},{"text":"impl Send for FcResult","synthetic":true,"types":[]},{"text":"impl Send for XftFontInfo","synthetic":true,"types":[]},{"text":"impl Send for XftDraw","synthetic":true,"types":[]},{"text":"impl Send for XftPattern","synthetic":true,"types":[]},{"text":"impl Send for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl Send for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl !Send for XDevice","synthetic":true,"types":[]},{"text":"impl Send for XDeviceControl","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceState","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl Send for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl Send for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl Send for XFeedbackState","synthetic":true,"types":[]},{"text":"impl Send for XInputClass","synthetic":true,"types":[]},{"text":"impl Send for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl Send for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl !Send for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl Send for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl Send for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Send for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Send for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl Send for XIModifierState","synthetic":true,"types":[]},{"text":"impl !Send for XIButtonState","synthetic":true,"types":[]},{"text":"impl !Send for XIValuatorState","synthetic":true,"types":[]},{"text":"impl !Send for XIEventMask","synthetic":true,"types":[]},{"text":"impl Send for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl Send for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl Send for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIEvent","synthetic":true,"types":[]},{"text":"impl Send for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIRawEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl Send for _AtomRec","synthetic":true,"types":[]},{"text":"impl Send for _XmuArea","synthetic":true,"types":[]},{"text":"impl Send for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl Send for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl Send for _XmuScanline","synthetic":true,"types":[]},{"text":"impl Send for _XmuSegment","synthetic":true,"types":[]},{"text":"impl Send for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl Send for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl Send for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl !Send for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl Send for XRRPanning","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl Send for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl !Send for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange8","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange16","synthetic":true,"types":[]},{"text":"impl !Send for XRecordState","synthetic":true,"types":[]},{"text":"impl Send for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl Send for _XCircle","synthetic":true,"types":[]},{"text":"impl Send for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl !Send for _XFilters","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl Send for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl Send for _XIndexValue","synthetic":true,"types":[]},{"text":"impl Send for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl Send for _XLineFixed","synthetic":true,"types":[]},{"text":"impl Send for _XPointDouble","synthetic":true,"types":[]},{"text":"impl Send for _XPointFixed","synthetic":true,"types":[]},{"text":"impl Send for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl Send for XRenderColor","synthetic":true,"types":[]},{"text":"impl Send for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl Send for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl Send for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl Send for _XSpanFix","synthetic":true,"types":[]},{"text":"impl Send for _XTrap","synthetic":true,"types":[]},{"text":"impl Send for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl Send for _XTriangle","synthetic":true,"types":[]},{"text":"impl Send for _XTransform","synthetic":true,"types":[]},{"text":"impl Send for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl !Send for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for Arg","synthetic":true,"types":[]},{"text":"impl Send for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl Send for _TranslationData","synthetic":true,"types":[]},{"text":"impl Send for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl Send for _WidgetRec","synthetic":true,"types":[]},{"text":"impl Send for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl Send for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl Send for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl Send for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl Send for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl Send for _XtResource","synthetic":true,"types":[]},{"text":"impl Send for XtWidgetGeometry","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Send for OpenError","synthetic":true,"types":[]},{"text":"impl Send for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl Send for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl Send for XcmsColor","synthetic":true,"types":[]},{"text":"impl Send for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl Send for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl Send for _XkbAction","synthetic":true,"types":[]},{"text":"impl Send for _XkbBounds","synthetic":true,"types":[]},{"text":"impl Send for _XkbChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbColor","synthetic":true,"types":[]},{"text":"impl Send for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl Send for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl Send for _XkbControls","synthetic":true,"types":[]},{"text":"impl Send for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl Send for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl Send for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl Send for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl Send for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKey","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl Send for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbMods","synthetic":true,"types":[]},{"text":"impl Send for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbOutline","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl Send for _XkbProperty","synthetic":true,"types":[]},{"text":"impl Send for _XkbRow","synthetic":true,"types":[]},{"text":"impl Send for _XkbSection","synthetic":true,"types":[]},{"text":"impl Send for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbShape","synthetic":true,"types":[]},{"text":"impl Send for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl !Send for XAnyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XButtonEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl !Send for XColormapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl !Send for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl !Send for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl !Send for XErrorEvent","synthetic":true,"types":[]},{"text":"impl !Send for XExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XGravityEvent","synthetic":true,"types":[]},{"text":"impl !Send for XKeyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMappingEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMotionEvent","synthetic":true,"types":[]},{"text":"impl !Send for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XReparentEvent","synthetic":true,"types":[]},{"text":"impl !Send for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl !Send for _XkbDesc","synthetic":true,"types":[]},{"text":"impl Send for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl !Send for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl !Send for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for XkbEvent","synthetic":true,"types":[]},{"text":"impl !Send for Depth","synthetic":true,"types":[]},{"text":"impl !Send for Screen","synthetic":true,"types":[]},{"text":"impl !Send for ScreenFormat","synthetic":true,"types":[]},{"text":"impl !Send for Visual","synthetic":true,"types":[]},{"text":"impl Send for XArc","synthetic":true,"types":[]},{"text":"impl Send for XChar2b","synthetic":true,"types":[]},{"text":"impl Send for XCharStruct","synthetic":true,"types":[]},{"text":"impl !Send for XClassHint","synthetic":true,"types":[]},{"text":"impl Send for XColor","synthetic":true,"types":[]},{"text":"impl !Send for XComposeStatus","synthetic":true,"types":[]},{"text":"impl Send for XExtCodes","synthetic":true,"types":[]},{"text":"impl !Send for XExtData","synthetic":true,"types":[]},{"text":"impl Send for XFontProp","synthetic":true,"types":[]},{"text":"impl Send for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl !Send for XFontStruct","synthetic":true,"types":[]},{"text":"impl Send for XGCValues","synthetic":true,"types":[]},{"text":"impl !Send for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl !Send for XHostAddress","synthetic":true,"types":[]},{"text":"impl Send for XIconSize","synthetic":true,"types":[]},{"text":"impl !Send for XImage","synthetic":true,"types":[]},{"text":"impl Send for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl Send for XKeyboardState","synthetic":true,"types":[]},{"text":"impl !Send for XmbTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl !Send for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl Send for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl Send for XPoint","synthetic":true,"types":[]},{"text":"impl Send for XRectangle","synthetic":true,"types":[]},{"text":"impl !Send for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl !Send for XrmValue","synthetic":true,"types":[]},{"text":"impl Send for XSegment","synthetic":true,"types":[]},{"text":"impl Send for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for XSizeHints","synthetic":true,"types":[]},{"text":"impl Send for XStandardColormap","synthetic":true,"types":[]},{"text":"impl !Send for XTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XTextItem16","synthetic":true,"types":[]},{"text":"impl !Send for XTextProperty","synthetic":true,"types":[]},{"text":"impl Send for XTimeCoord","synthetic":true,"types":[]},{"text":"impl !Send for XVisualInfo","synthetic":true,"types":[]},{"text":"impl !Send for XwcTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for XWindowChanges","synthetic":true,"types":[]},{"text":"impl Send for XWMHints","synthetic":true,"types":[]},{"text":"impl !Send for XIMCallback","synthetic":true,"types":[]},{"text":"impl !Send for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl Send for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl !Send for XIMText","synthetic":true,"types":[]},{"text":"impl !Send for XICCallback","synthetic":true,"types":[]},{"text":"impl Send for AspectRatio","synthetic":true,"types":[]},{"text":"impl Send for ClientMessageData","synthetic":true,"types":[]},{"text":"impl Send for ImageFns","synthetic":true,"types":[]},{"text":"impl !Send for XEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIMTextString","synthetic":true,"types":[]},{"text":"impl Send for _XDisplay","synthetic":true,"types":[]},{"text":"impl Send for xError","synthetic":true,"types":[]},{"text":"impl Send for xEvent","synthetic":true,"types":[]},{"text":"impl Send for _XGC","synthetic":true,"types":[]},{"text":"impl Send for _XIC","synthetic":true,"types":[]},{"text":"impl Send for _XIM","synthetic":true,"types":[]},{"text":"impl Send for _XRegion","synthetic":true,"types":[]},{"text":"impl Send for _XOC","synthetic":true,"types":[]},{"text":"impl Send for _XOM","synthetic":true,"types":[]},{"text":"impl Send for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl Send for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl Send for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl Send for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl Send for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl Send for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl Send for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorComment","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorComments","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorFile","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl Send for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorImage","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorImages","synthetic":true,"types":[]},{"text":"impl Send for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl Send for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XftFont","synthetic":true,"types":[]},{"text":"impl Send for XftColor","synthetic":true,"types":[]},{"text":"impl Send for XftCharSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftFontSet","synthetic":true,"types":[]},{"text":"impl Send for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl Send for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl Send for FcCharSet","synthetic":true,"types":[]},{"text":"impl Send for FcPattern","synthetic":true,"types":[]},{"text":"impl Send for FcEndian","synthetic":true,"types":[]},{"text":"impl Send for FcResult","synthetic":true,"types":[]},{"text":"impl Send for XftFontInfo","synthetic":true,"types":[]},{"text":"impl Send for XftDraw","synthetic":true,"types":[]},{"text":"impl Send for XftPattern","synthetic":true,"types":[]},{"text":"impl Send for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl Send for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl !Send for XDevice","synthetic":true,"types":[]},{"text":"impl Send for XDeviceControl","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceState","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl Send for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl Send for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl Send for XFeedbackState","synthetic":true,"types":[]},{"text":"impl Send for XInputClass","synthetic":true,"types":[]},{"text":"impl Send for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl Send for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl !Send for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl Send for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl Send for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Send for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Send for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl Send for XIModifierState","synthetic":true,"types":[]},{"text":"impl !Send for XIButtonState","synthetic":true,"types":[]},{"text":"impl !Send for XIValuatorState","synthetic":true,"types":[]},{"text":"impl !Send for XIEventMask","synthetic":true,"types":[]},{"text":"impl Send for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl Send for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl Send for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIEvent","synthetic":true,"types":[]},{"text":"impl Send for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIRawEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl Send for _AtomRec","synthetic":true,"types":[]},{"text":"impl Send for _XmuArea","synthetic":true,"types":[]},{"text":"impl Send for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl Send for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl Send for _XmuScanline","synthetic":true,"types":[]},{"text":"impl Send for _XmuSegment","synthetic":true,"types":[]},{"text":"impl Send for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl !Send for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl Send for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl !Send for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange8","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange16","synthetic":true,"types":[]},{"text":"impl !Send for XRecordState","synthetic":true,"types":[]},{"text":"impl Send for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl Send for _XCircle","synthetic":true,"types":[]},{"text":"impl Send for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl !Send for _XFilters","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl Send for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl Send for _XIndexValue","synthetic":true,"types":[]},{"text":"impl Send for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl Send for _XLineFixed","synthetic":true,"types":[]},{"text":"impl Send for _XPointDouble","synthetic":true,"types":[]},{"text":"impl Send for _XPointFixed","synthetic":true,"types":[]},{"text":"impl Send for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl Send for XRenderColor","synthetic":true,"types":[]},{"text":"impl Send for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl Send for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl Send for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl Send for _XSpanFix","synthetic":true,"types":[]},{"text":"impl Send for _XTrap","synthetic":true,"types":[]},{"text":"impl Send for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl Send for _XTriangle","synthetic":true,"types":[]},{"text":"impl Send for _XTransform","synthetic":true,"types":[]},{"text":"impl Send for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl !Send for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for Arg","synthetic":true,"types":[]},{"text":"impl Send for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl Send for _TranslationData","synthetic":true,"types":[]},{"text":"impl Send for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl Send for _WidgetRec","synthetic":true,"types":[]},{"text":"impl Send for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl Send for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl Send for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl Send for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl Send for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl Send for _XtResource","synthetic":true,"types":[]},{"text":"impl Send for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl Send for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl Send for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl !Send for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl Send for XRRPanning","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for Xlib","synthetic":false,"types":[]},{"text":"impl Send for Xext","synthetic":false,"types":[]},{"text":"impl Send for Glx","synthetic":false,"types":[]},{"text":"impl Send for Xcursor","synthetic":false,"types":[]},{"text":"impl Send for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Send for Xft","synthetic":false,"types":[]},{"text":"impl Send for Xlib","synthetic":false,"types":[]},{"text":"impl Send for XInput","synthetic":false,"types":[]},{"text":"impl Send for XInput2","synthetic":false,"types":[]},{"text":"impl Send for Xmu","synthetic":false,"types":[]},{"text":"impl Send for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Send for Xrender","synthetic":false,"types":[]},{"text":"impl Send for Xss","synthetic":false,"types":[]},{"text":"impl Send for Xt","synthetic":false,"types":[]},{"text":"impl Send for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Send for Xlib_xcb","synthetic":false,"types":[]},{"text":"impl Send for Xrandr","synthetic":false,"types":[]},{"text":"impl Send for Xrandr_2_2_0","synthetic":false,"types":[]}];
implementors["xattr"] = [{"text":"impl Send for UnsupportedPlatformError","synthetic":true,"types":[]},{"text":"impl Send for XAttrs","synthetic":true,"types":[]}];
implementors["xcursor"] = [{"text":"impl Send for CursorTheme","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl Send for BaseDirectories","synthetic":true,"types":[]},{"text":"impl Send for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl Send for FileFindIterator","synthetic":true,"types":[]}];
implementors["xkb"] = [{"text":"impl Send for Keycode","synthetic":true,"types":[]},{"text":"impl Send for LayoutIndex","synthetic":true,"types":[]},{"text":"impl Send for LayoutMask","synthetic":true,"types":[]},{"text":"impl Send for LevelIndex","synthetic":true,"types":[]},{"text":"impl Send for ModIndex","synthetic":true,"types":[]},{"text":"impl Send for ModMask","synthetic":true,"types":[]},{"text":"impl Send for LedIndex","synthetic":true,"types":[]},{"text":"impl Send for LedMask","synthetic":true,"types":[]},{"text":"impl Send for Keysym","synthetic":true,"types":[]},{"text":"impl !Send for Context","synthetic":true,"types":[]},{"text":"impl !Send for Keymap","synthetic":true,"types":[]},{"text":"impl !Send for State","synthetic":true,"types":[]},{"text":"impl Send for LogLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Include&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Log&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Mods&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Layouts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Leds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Serialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Update&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Mods&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Layouts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Leds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Consumed","synthetic":true,"types":[]},{"text":"impl Send for Components","synthetic":true,"types":[]},{"text":"impl Send for Direction","synthetic":true,"types":[]},{"text":"impl !Send for Table","synthetic":true,"types":[]},{"text":"impl Send for Status","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl !Send for State","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]}];
implementors["xkbcommon_sys"] = [{"text":"impl !Send for xkb_rule_names","synthetic":true,"types":[]},{"text":"impl Send for xkb_compose_format","synthetic":true,"types":[]},{"text":"impl Send for xkb_compose_status","synthetic":true,"types":[]},{"text":"impl Send for xkb_compose_feed_result","synthetic":true,"types":[]},{"text":"impl Send for xkb_keymap_format","synthetic":true,"types":[]},{"text":"impl Send for xkb_log_level","synthetic":true,"types":[]},{"text":"impl Send for xkb_key_direction","synthetic":true,"types":[]},{"text":"impl Send for xkb_consumed_mode","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl Send for ParserConfig","synthetic":true,"types":[]},{"text":"impl Send for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Send for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl Send for TextPosition","synthetic":true,"types":[]},{"text":"impl Send for XmlVersion","synthetic":true,"types":[]},{"text":"impl Send for Namespace","synthetic":true,"types":[]},{"text":"impl Send for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for EventReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Events&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for XmlEvent","synthetic":true,"types":[]},{"text":"impl Send for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()