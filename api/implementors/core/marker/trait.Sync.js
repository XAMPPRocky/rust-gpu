(function() {var implementors = {};
implementors["ab_glyph_rasterizer"] = [{"text":"impl Sync for Point","synthetic":true,"types":[]},{"text":"impl Sync for Rasterizer","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Sync for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Sync for FindIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Sync for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; Sync for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Match","synthetic":true,"types":[]},{"text":"impl Sync for MatchKind","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; Sync for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Searcher","synthetic":true,"types":[]},{"text":"impl Sync for MatchKind","synthetic":true,"types":[]}];
implementors["andrew"] = [{"text":"impl&lt;'a&gt; Sync for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Endian","synthetic":true,"types":[]},{"text":"impl Sync for Line","synthetic":true,"types":[]},{"text":"impl Sync for Sides","synthetic":true,"types":[]},{"text":"impl Sync for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FontConfig","synthetic":true,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Sync for Prefix","synthetic":true,"types":[]},{"text":"impl Sync for Infix","synthetic":true,"types":[]},{"text":"impl Sync for Suffix","synthetic":true,"types":[]},{"text":"impl Sync for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Sync for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Sync for ANSIGenericStrings&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Colour","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Sync for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Sync for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Sync for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Sync for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A:&nbsp;Array + Sync&gt; Sync for Drain&lt;'a, A&gt;","synthetic":false,"types":[]}];
implementors["ash"] = [{"text":"impl Sync for Device","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Sync for EntryCustom&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for LoadingError","synthetic":true,"types":[]},{"text":"impl Sync for Instance","synthetic":true,"types":[]},{"text":"impl Sync for InstanceError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Align&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for AlignIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCacheCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for CullModeFlags","synthetic":true,"types":[]},{"text":"impl Sync for QueueFlags","synthetic":true,"types":[]},{"text":"impl Sync for RenderPassCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for DeviceQueueCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for MemoryPropertyFlags","synthetic":true,"types":[]},{"text":"impl Sync for MemoryHeapFlags","synthetic":true,"types":[]},{"text":"impl Sync for AccessFlags","synthetic":true,"types":[]},{"text":"impl Sync for BufferUsageFlags","synthetic":true,"types":[]},{"text":"impl Sync for BufferCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl Sync for ImageUsageFlags","synthetic":true,"types":[]},{"text":"impl Sync for ImageCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for ImageViewCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for SamplerCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineShaderStageCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for ColorComponentFlags","synthetic":true,"types":[]},{"text":"impl Sync for FenceCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for SemaphoreCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for FormatFeatureFlags","synthetic":true,"types":[]},{"text":"impl Sync for QueryControlFlags","synthetic":true,"types":[]},{"text":"impl Sync for QueryResultFlags","synthetic":true,"types":[]},{"text":"impl Sync for CommandBufferUsageFlags","synthetic":true,"types":[]},{"text":"impl Sync for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl Sync for ImageAspectFlags","synthetic":true,"types":[]},{"text":"impl Sync for SparseImageFormatFlags","synthetic":true,"types":[]},{"text":"impl Sync for SparseMemoryBindFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineStageFlags","synthetic":true,"types":[]},{"text":"impl Sync for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for CommandPoolResetFlags","synthetic":true,"types":[]},{"text":"impl Sync for CommandBufferResetFlags","synthetic":true,"types":[]},{"text":"impl Sync for SampleCountFlags","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentDescriptionFlags","synthetic":true,"types":[]},{"text":"impl Sync for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for DependencyFlags","synthetic":true,"types":[]},{"text":"impl Sync for SemaphoreWaitFlags","synthetic":true,"types":[]},{"text":"impl Sync for DisplayPlaneAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for CompositeAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceTransformFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for SwapchainImageUsageFlagsANDROID","synthetic":true,"types":[]},{"text":"impl Sync for DebugReportFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for ExternalMemoryHandleTypeFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for ExternalMemoryFeatureFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for SubgroupFeatureFlags","synthetic":true,"types":[]},{"text":"impl Sync for IndirectCommandsLayoutUsageFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for IndirectStateFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorSetLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for ExternalMemoryHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Sync for ExternalMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl Sync for ExternalSemaphoreHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Sync for ExternalSemaphoreFeatureFlags","synthetic":true,"types":[]},{"text":"impl Sync for SemaphoreImportFlags","synthetic":true,"types":[]},{"text":"impl Sync for ExternalFenceHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Sync for ExternalFenceFeatureFlags","synthetic":true,"types":[]},{"text":"impl Sync for FenceImportFlags","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceCounterFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for PeerMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl Sync for MemoryAllocateFlags","synthetic":true,"types":[]},{"text":"impl Sync for DeviceGroupPresentModeFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for SwapchainCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for SubpassDescriptionFlags","synthetic":true,"types":[]},{"text":"impl Sync for DebugUtilsMessageSeverityFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for DebugUtilsMessageTypeFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorBindingFlags","synthetic":true,"types":[]},{"text":"impl Sync for ConditionalRenderingFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for ResolveModeFlags","synthetic":true,"types":[]},{"text":"impl Sync for GeometryInstanceFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for GeometryFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for BuildAccelerationStructureFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for FramebufferCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for DeviceDiagnosticsConfigFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCreationFeedbackFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceCounterDescriptionFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for AcquireProfilingLockFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for ShaderCorePropertiesFlagsAMD","synthetic":true,"types":[]},{"text":"impl Sync for ShaderModuleCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCompilerControlFlagsAMD","synthetic":true,"types":[]},{"text":"impl Sync for ToolPurposeFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for QueryPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineDepthStencilStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineDynamicStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineColorBlendStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineMultisampleStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineRasterizationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineViewportStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineTessellationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineInputAssemblyStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineVertexInputStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for BufferViewCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for InstanceCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for DeviceCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for EventCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for MemoryMapFlags","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorPoolResetFlags","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorUpdateTemplateCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for DisplayModeCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for DisplaySurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for AndroidSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for ViSurfaceCreateFlagsNN","synthetic":true,"types":[]},{"text":"impl Sync for WaylandSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for Win32SurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for XlibSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for XcbSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Sync for IOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl Sync for MacOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl Sync for MetalSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for ImagePipeSurfaceCreateFlagsFUCHSIA","synthetic":true,"types":[]},{"text":"impl Sync for StreamDescriptorSurfaceCreateFlagsGGP","synthetic":true,"types":[]},{"text":"impl Sync for HeadlessSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for CommandPoolTrimFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineViewportSwizzleStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for PipelineDiscardRectangleStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCoverageToColorStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCoverageModulationStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCoverageReductionStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Sync for ValidationCacheCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for DebugUtilsMessengerCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for DebugUtilsMessengerCallbackDataFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for PipelineRasterizationConservativeStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for PipelineRasterizationStateStreamCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for PipelineRasterizationDepthClipStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Sync for DeviceMemory","synthetic":true,"types":[]},{"text":"impl Sync for CommandPool","synthetic":true,"types":[]},{"text":"impl Sync for Buffer","synthetic":true,"types":[]},{"text":"impl Sync for BufferView","synthetic":true,"types":[]},{"text":"impl Sync for Image","synthetic":true,"types":[]},{"text":"impl Sync for ImageView","synthetic":true,"types":[]},{"text":"impl Sync for ShaderModule","synthetic":true,"types":[]},{"text":"impl Sync for Pipeline","synthetic":true,"types":[]},{"text":"impl Sync for PipelineLayout","synthetic":true,"types":[]},{"text":"impl Sync for Sampler","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorSet","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorPool","synthetic":true,"types":[]},{"text":"impl Sync for Fence","synthetic":true,"types":[]},{"text":"impl Sync for Semaphore","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for QueryPool","synthetic":true,"types":[]},{"text":"impl Sync for Framebuffer","synthetic":true,"types":[]},{"text":"impl Sync for RenderPass","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCache","synthetic":true,"types":[]},{"text":"impl Sync for IndirectCommandsLayoutNV","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorUpdateTemplate","synthetic":true,"types":[]},{"text":"impl Sync for SamplerYcbcrConversion","synthetic":true,"types":[]},{"text":"impl Sync for ValidationCacheEXT","synthetic":true,"types":[]},{"text":"impl Sync for AccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceConfigurationINTEL","synthetic":true,"types":[]},{"text":"impl Sync for DeferredOperationKHR","synthetic":true,"types":[]},{"text":"impl Sync for DisplayKHR","synthetic":true,"types":[]},{"text":"impl Sync for DisplayModeKHR","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceKHR","synthetic":true,"types":[]},{"text":"impl Sync for SwapchainKHR","synthetic":true,"types":[]},{"text":"impl Sync for DebugReportCallbackEXT","synthetic":true,"types":[]},{"text":"impl Sync for DebugUtilsMessengerEXT","synthetic":true,"types":[]},{"text":"impl !Sync for BaseOutStructure","synthetic":true,"types":[]},{"text":"impl !Sync for BaseInStructure","synthetic":true,"types":[]},{"text":"impl Sync for Offset2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Offset2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Offset3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Offset3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Extent2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Extent2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Extent3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Extent3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ViewportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Rect2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Rect2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ClearRect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ClearRectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ComponentMapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ComponentMappingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PhysicalDevicePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ExtensionPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LayerProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for LayerPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ApplicationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AllocationCallbacksBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceQueueCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for InstanceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for QueueFamilyPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PhysicalDeviceMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SparseImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SparseImageMemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MemoryTypeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for MemoryHeap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MemoryHeapBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MappedMemoryRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for FormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DescriptorBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DescriptorImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for WriteDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CopyDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BufferViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImageSubresource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ImageSubresourceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ImageSubresourceLayersBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ImageSubresourceRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BufferMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SubresourceLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BufferCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BufferCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SparseMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SparseImageMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SparseBufferMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SparseImageOpaqueMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SparseImageMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImageBlit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ImageBlitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BufferImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImageResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ImageResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ShaderModuleCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorSetLayoutBindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorSetLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DescriptorPoolSizeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorSetAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SpecializationMapEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SpecializationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineShaderStageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ComputePipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VertexInputBindingDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VertexInputAttributeDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineVertexInputStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineInputAssemblyStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineTessellationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineViewportStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineRasterizationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineMultisampleStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PipelineColorBlendAttachmentStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineColorBlendStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineDynamicStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for StencilOpState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StencilOpStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineDepthStencilStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GraphicsPipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineCacheCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PushConstantRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SamplerCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CommandPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CommandBufferAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CommandBufferInheritanceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ClearDepthStencilValueBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ClearAttachment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ClearAttachmentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AttachmentDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AttachmentReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SubpassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SubpassDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SubpassDependencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for EventCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PhysicalDeviceFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PhysicalDeviceSparsePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PhysicalDeviceLimitsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for QueryPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FramebufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DrawIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DrawIndexedIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DispatchIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DisplayPlanePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DisplayModeParametersKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DisplayModePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayModeCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DisplayPlaneCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplaySurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AndroidSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ViSurfaceCreateInfoNNBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for WaylandSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Win32SurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for XlibSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for XcbSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImagePipeSurfaceCreateInfoFUCHSIA","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImagePipeSurfaceCreateInfoFUCHSIABuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for StreamDescriptorSurfaceCreateInfoGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for StreamDescriptorSurfaceCreateInfoGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SurfaceFormatKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugReportCallbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugReportCallbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ValidationFlagsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ValidationFlagsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ValidationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ValidationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineRasterizationStateRasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineRasterizationStateRasterizationOrderAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugMarkerObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugMarkerObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugMarkerObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugMarkerObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugMarkerMarkerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugMarkerMarkerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DedicatedAllocationImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DedicatedAllocationImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DedicatedAllocationBufferCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DedicatedAllocationBufferCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DedicatedAllocationMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DedicatedAllocationMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ExternalImageFormatPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ExternalImageFormatPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalMemoryImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExternalMemoryImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExportMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExportMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Win32KeyedMutexAcquireReleaseInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Win32KeyedMutexAcquireReleaseInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDeviceGeneratedCommandsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDeviceGeneratedCommandsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GraphicsShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GraphicsShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GraphicsPipelineShaderGroupsCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GraphicsPipelineShaderGroupsCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BindShaderGroupIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindShaderGroupIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BindIndexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindIndexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BindVertexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindVertexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SetStateFlagsIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SetStateFlagsIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for IndirectCommandsStreamNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for IndirectCommandsStreamNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for IndirectCommandsLayoutTokenNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for IndirectCommandsLayoutTokenNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for IndirectCommandsLayoutCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for IndirectCommandsLayoutCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GeneratedCommandsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GeneratedCommandsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GeneratedCommandsMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GeneratedCommandsMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceFeatures2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceFeatures2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for QueueFamilyProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for QueueFamilyProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMemoryProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMemoryProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SparseImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SparseImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSparseImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSparseImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevicePushDescriptorPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ConformanceVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ConformanceVersionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDriverProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDriverPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PresentRegionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PresentRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RectLayerKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceVariablePointersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceVariablePointersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ExternalMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ExternalMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceExternalImageFormatInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceExternalImageFormatInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExternalImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceExternalBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceExternalBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalBufferProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExternalBufferPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceIDProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceIDPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalMemoryImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExternalMemoryImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalMemoryBufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExternalMemoryBufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExportMemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExportMemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryWin32HandlePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryWin32HandlePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportMemoryFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportMemoryFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryFdPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryFdPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Win32KeyedMutexAcquireReleaseInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Win32KeyedMutexAcquireReleaseInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceExternalSemaphoreInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceExternalSemaphoreInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExternalSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExportSemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExportSemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for D3D12FenceSubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for D3D12FenceSubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SemaphoreGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SemaphoreGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportSemaphoreFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportSemaphoreFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SemaphoreGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SemaphoreGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceExternalFenceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceExternalFenceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalFenceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExternalFencePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExportFenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExportFenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FenceGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FenceGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportFenceFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportFenceFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FenceGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FenceGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMultiviewFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMultiviewFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMultiviewProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMultiviewPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassMultiviewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassMultiviewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SurfaceCapabilities2EXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SurfaceCapabilities2EXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayPowerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayPowerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SwapchainCounterCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SwapchainCounterCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceGroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceGroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryAllocateFlagsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryAllocateFlagsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BindBufferMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindBufferMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BindBufferMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindBufferMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BindImageMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindImageMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BindImageMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindImageMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceGroupRenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceGroupRenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceGroupCommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceGroupCommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceGroupSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceGroupSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceGroupBindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceGroupBindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceGroupPresentCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceGroupPresentCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BindImageMemorySwapchainInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindImageMemorySwapchainInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AcquireNextImageInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AcquireNextImageInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceGroupPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceGroupPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceGroupDeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceGroupDeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceGroupSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceGroupSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorUpdateTemplateEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DescriptorUpdateTemplateEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorUpdateTemplateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorUpdateTemplateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for XYColorEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for XYColorEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for HdrMetadataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for HdrMetadataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayNativeHdrSurfaceCapabilitiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayNativeHdrSurfaceCapabilitiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SwapchainDisplayNativeHdrCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SwapchainDisplayNativeHdrCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RefreshCycleDurationGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RefreshCycleDurationGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PastPresentationTimingGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PastPresentationTimingGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PresentTimesInfoGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PresentTimesInfoGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PresentTimeGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PresentTimeGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for IOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MacOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MetalSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MetalSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ViewportWScalingNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ViewportWScalingNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineViewportWScalingStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineViewportWScalingStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ViewportSwizzleNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ViewportSwizzleNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineViewportSwizzleStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineViewportSwizzleStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDiscardRectanglePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDiscardRectanglePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineDiscardRectangleStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineDiscardRectangleStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for InputAttachmentAspectReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for InputAttachmentAspectReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassInputAttachmentAspectCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassInputAttachmentAspectCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSurfaceInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSurfaceInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SurfaceCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SurfaceCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SurfaceFormat2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SurfaceFormat2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayPlaneProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayPlaneProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayModeProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayModeProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayPlaneInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayPlaneInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayPlaneCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DisplayPlaneCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SharedPresentSurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SharedPresentSurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevice16BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevice16BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSubgroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderSubgroupExtendedTypesFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderSubgroupExtendedTypesFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BufferMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BufferMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageSparseMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageSparseMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SparseImageMemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SparseImageMemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevicePointClippingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevicePointClippingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryDedicatedRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryDedicatedRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryDedicatedAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryDedicatedAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageViewUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageViewUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineTessellationDomainOriginStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineTessellationDomainOriginStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SamplerYcbcrConversionInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SamplerYcbcrConversionInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SamplerYcbcrConversionCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SamplerYcbcrConversionCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BindImagePlaneMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindImagePlaneMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImagePlaneMemoryRequirementsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImagePlaneMemoryRequirementsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSamplerYcbcrConversionFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSamplerYcbcrConversionFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SamplerYcbcrConversionImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SamplerYcbcrConversionImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for TextureLODGatherFormatPropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for TextureLODGatherFormatPropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ConditionalRenderingBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ConditionalRenderingBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ProtectedSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ProtectedSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceProtectedMemoryFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceProtectedMemoryFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceProtectedMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceProtectedMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceQueueInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceQueueInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineCoverageToColorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineCoverageToColorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSamplerFilterMinmaxProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSamplerFilterMinmaxPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SampleLocationEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SampleLocationEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SampleLocationsInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SampleLocationsInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AttachmentSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AttachmentSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SubpassSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SubpassSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassSampleLocationsBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassSampleLocationsBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineSampleLocationsStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineSampleLocationsStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSampleLocationsPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSampleLocationsPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MultisamplePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MultisamplePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SamplerReductionModeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SamplerReductionModeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceBlendOperationAdvancedFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceBlendOperationAdvancedFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceBlendOperationAdvancedPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceBlendOperationAdvancedPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineColorBlendAdvancedStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineColorBlendAdvancedStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceInlineUniformBlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceInlineUniformBlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceInlineUniformBlockPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceInlineUniformBlockPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for WriteDescriptorSetInlineUniformBlockEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for WriteDescriptorSetInlineUniformBlockEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorPoolInlineUniformBlockCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorPoolInlineUniformBlockCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineCoverageModulationStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineCoverageModulationStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageFormatListCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageFormatListCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ShaderModuleValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ShaderModuleValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMaintenance3Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMaintenance3PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorSetLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorSetLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderDrawParametersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderDrawParametersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderFloat16Int8Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderFloat16Int8FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceFloatControlsProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceFloatControlsPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceHostQueryResetFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceHostQueryResetFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NativeBufferUsage2ANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for NativeBufferUsage2ANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for NativeBufferANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for NativeBufferANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SwapchainImageCreateInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SwapchainImageCreateInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevicePresentationPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevicePresentationPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ShaderResourceUsageAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ShaderResourceUsageAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ShaderStatisticsInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ShaderStatisticsInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceQueueGlobalPriorityCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceQueueGlobalPriorityCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugUtilsObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugUtilsObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugUtilsObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugUtilsLabelEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugUtilsMessengerCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DebugUtilsMessengerCallbackDataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportMemoryHostPointerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportMemoryHostPointerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryHostPointerPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryHostPointerPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceExternalMemoryHostPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceExternalMemoryHostPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceConservativeRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceConservativeRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CalibratedTimestampInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CalibratedTimestampInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderCorePropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderCorePropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderCoreProperties2AMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderCoreProperties2AMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineRasterizationConservativeStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineRasterizationConservativeStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDescriptorIndexingFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDescriptorIndexingFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDescriptorIndexingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDescriptorIndexingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorSetLayoutBindingFlagsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorSetLayoutBindingFlagsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorSetVariableDescriptorCountAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorSetVariableDescriptorCountAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescriptorSetVariableDescriptorCountLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DescriptorSetVariableDescriptorCountLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AttachmentDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AttachmentDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AttachmentReference2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AttachmentReference2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SubpassDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SubpassDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SubpassDependency2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SubpassDependency2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassCreateInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassCreateInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SubpassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SubpassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SubpassEndInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SubpassEndInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceTimelineSemaphoreFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceTimelineSemaphoreFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceTimelineSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceTimelineSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SemaphoreTypeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SemaphoreTypeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for TimelineSemaphoreSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for TimelineSemaphoreSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SemaphoreWaitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SemaphoreWaitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SemaphoreSignalInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SemaphoreSignalInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for VertexInputBindingDivisorDescriptionEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VertexInputBindingDivisorDescriptionEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineVertexInputDivisorStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineVertexInputDivisorStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceVertexAttributeDivisorPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceVertexAttributeDivisorPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevicePCIBusInfoPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevicePCIBusInfoPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImportAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImportAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AndroidHardwareBufferUsageANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AndroidHardwareBufferUsageANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AndroidHardwareBufferPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AndroidHardwareBufferPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryGetAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryGetAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AndroidHardwareBufferFormatPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AndroidHardwareBufferFormatPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CommandBufferInheritanceConditionalRenderingInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CommandBufferInheritanceConditionalRenderingInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ExternalFormatANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ExternalFormatANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevice8BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevice8BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceConditionalRenderingFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceConditionalRenderingFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceVulkanMemoryModelFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceVulkanMemoryModelFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderAtomicInt64Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderAtomicInt64FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceVertexAttributeDivisorFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceVertexAttributeDivisorFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for QueueFamilyCheckpointPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for QueueFamilyCheckpointPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CheckpointDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CheckpointDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDepthStencilResolveProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDepthStencilResolvePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SubpassDescriptionDepthStencilResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SubpassDescriptionDepthStencilResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageViewASTCDecodeModeEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageViewASTCDecodeModeEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceASTCDecodeFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceASTCDecodeFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceTransformFeedbackFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceTransformFeedbackFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceTransformFeedbackPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceTransformFeedbackPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineRasterizationStateStreamCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineRasterizationStateStreamCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceRepresentativeFragmentTestFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceRepresentativeFragmentTestFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineRepresentativeFragmentTestStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineRepresentativeFragmentTestStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceExclusiveScissorFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceExclusiveScissorFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineViewportExclusiveScissorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineViewportExclusiveScissorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceCornerSampledImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceCornerSampledImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceComputeShaderDerivativesFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceComputeShaderDerivativesFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceFragmentShaderBarycentricFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceFragmentShaderBarycentricFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderImageFootprintFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderImageFootprintFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ShadingRatePaletteNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ShadingRatePaletteNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineViewportShadingRateImageStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineViewportShadingRateImageStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShadingRateImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShadingRateImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShadingRateImagePropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShadingRateImagePropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CoarseSampleLocationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CoarseSampleLocationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CoarseSampleOrderCustomNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CoarseSampleOrderCustomNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineViewportCoarseSampleOrderStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineViewportCoarseSampleOrderStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMeshShaderFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMeshShaderFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMeshShaderPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMeshShaderPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DrawMeshTasksIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DrawMeshTasksIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RayTracingShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RayTracingShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RayTracingShaderGroupCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RayTracingShaderGroupCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RayTracingPipelineCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RayTracingPipelineCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RayTracingPipelineCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RayTracingPipelineCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GeometryTrianglesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GeometryTrianglesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GeometryAABBNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GeometryAABBNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GeometryDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GeometryDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for GeometryNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for GeometryNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BindAccelerationStructureMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindAccelerationStructureMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for WriteDescriptorSetAccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for WriteDescriptorSetAccelerationStructureKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureMemoryRequirementsInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureMemoryRequirementsInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceRayTracingFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceRayTracingFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceRayTracingPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceRayTracingPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceRayTracingPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceRayTracingPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for StridedBufferRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StridedBufferRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TraceRaysIndirectCommandKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TraceRaysIndirectCommandKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DrmFormatModifierPropertiesListEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DrmFormatModifierPropertiesListEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceImageDrmFormatModifierInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceImageDrmFormatModifierInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageDrmFormatModifierListCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageDrmFormatModifierListCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageDrmFormatModifierExplicitCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageDrmFormatModifierExplicitCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageDrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageDrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageStencilUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageStencilUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceMemoryOverallocationCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceMemoryOverallocationCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceFragmentDensityMapFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceFragmentDensityMapFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceFragmentDensityMapPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceFragmentDensityMapPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassFragmentDensityMapCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassFragmentDensityMapCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceScalarBlockLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceScalarBlockLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SurfaceProtectedCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SurfaceProtectedCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceUniformBufferStandardLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceUniformBufferStandardLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDepthClipEnableFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDepthClipEnableFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineRasterizationDepthClipStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineRasterizationDepthClipStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMemoryBudgetPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMemoryBudgetPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceMemoryPriorityFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceMemoryPriorityFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryPriorityAllocateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryPriorityAllocateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceBufferDeviceAddressFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceBufferDeviceAddressFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceBufferDeviceAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceBufferDeviceAddressFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BufferDeviceAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BufferOpaqueCaptureAddressCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BufferOpaqueCaptureAddressCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BufferDeviceAddressCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BufferDeviceAddressCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceImageViewImageFormatInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceImageViewImageFormatInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FilterCubicImageViewImageFormatPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FilterCubicImageViewImageFormatPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceImagelessFramebufferFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceImagelessFramebufferFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FramebufferAttachmentsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FramebufferAttachmentsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FramebufferAttachmentImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FramebufferAttachmentImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassAttachmentBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassAttachmentBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceCooperativeMatrixFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceCooperativeMatrixFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceCooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceCooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceYcbcrImageArraysFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceYcbcrImageArraysFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ImageViewHandleInfoNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageViewHandleInfoNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PresentFrameTokenGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PresentFrameTokenGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCreationFeedbackEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PipelineCreationFeedbackEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineCreationFeedbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineCreationFeedbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SurfaceFullScreenExclusiveInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SurfaceFullScreenExclusiveWin32InfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SurfaceFullScreenExclusiveWin32InfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SurfaceCapabilitiesFullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SurfaceCapabilitiesFullScreenExclusiveEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevicePerformanceQueryFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevicePerformanceQueryFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevicePerformanceQueryPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevicePerformanceQueryPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceCounterKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PerformanceCounterKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceCounterDescriptionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PerformanceCounterDescriptionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for QueryPoolPerformanceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for QueryPoolPerformanceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AcquireProfilingLockInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AcquireProfilingLockInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceQuerySubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PerformanceQuerySubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for HeadlessSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for HeadlessSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceCoverageReductionModeFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceCoverageReductionModeFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineCoverageReductionStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineCoverageReductionStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for FramebufferMixedSamplesCombinationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FramebufferMixedSamplesCombinationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderIntegerFunctions2FeaturesINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceValueINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PerformanceValueINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for InitializePerformanceApiInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for InitializePerformanceApiInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for QueryPoolPerformanceQueryCreateInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for QueryPoolPerformanceQueryCreateInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PerformanceMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceStreamMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PerformanceStreamMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceOverrideInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PerformanceOverrideInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceConfigurationAcquireInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PerformanceConfigurationAcquireInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderClockFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderClockFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceIndexTypeUint8FeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceIndexTypeUint8FeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderSMBuiltinsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderSMBuiltinsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderSMBuiltinsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderSMBuiltinsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceFragmentShaderInterlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceFragmentShaderInterlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSeparateDepthStencilLayoutsFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSeparateDepthStencilLayoutsFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AttachmentReferenceStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AttachmentReferenceStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AttachmentDescriptionStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AttachmentDescriptionStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevicePipelineExecutablePropertiesFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineExecutablePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineExecutablePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineExecutableInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineExecutableInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineExecutableStatisticKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineExecutableStatisticKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineExecutableInternalRepresentationKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineExecutableInternalRepresentationKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceTexelBufferAlignmentFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceTexelBufferAlignmentFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceTexelBufferAlignmentPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceTexelBufferAlignmentPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSubgroupSizeControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSubgroupSizeControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceSubgroupSizeControlPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceSubgroupSizeControlPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryOpaqueCaptureAddressAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for MemoryOpaqueCaptureAddressAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceMemoryOpaqueCaptureAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceMemoryOpaqueCaptureAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceLineRasterizationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceLineRasterizationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceLineRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceLineRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineRasterizationLineStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineRasterizationLineStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDevicePipelineCreationCacheControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDevicePipelineCreationCacheControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceVulkan11Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceVulkan11FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceVulkan11Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceVulkan11PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceVulkan12Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceVulkan12FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceVulkan12Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceVulkan12PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineCompilerControlCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineCompilerControlCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceCoherentMemoryFeaturesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceCoherentMemoryFeaturesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceToolPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceToolPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureGeometryTrianglesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureGeometryTrianglesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureGeometryAabbsDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureGeometryAabbsDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureGeometryInstancesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureGeometryInstancesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureGeometryKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureGeometryKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureBuildGeometryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureBuildGeometryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AccelerationStructureBuildOffsetInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AccelerationStructureBuildOffsetInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureCreateGeometryTypeInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureCreateGeometryTypeInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AabbPositionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AabbPositionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TransformMatrixKHR","synthetic":true,"types":[]},{"text":"impl Sync for AccelerationStructureInstanceKHR","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureDeviceAddressInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureDeviceAddressInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureVersionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AccelerationStructureVersionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CopyAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CopyAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CopyAccelerationStructureToMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CopyAccelerationStructureToMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CopyMemoryToAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CopyMemoryToAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RayTracingPipelineInterfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RayTracingPipelineInterfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeferredOperationInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeferredOperationInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineLibraryCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PipelineLibraryCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for RenderPassTransformBeginInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPassTransformBeginInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for CommandBufferInheritanceRenderPassTransformInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CommandBufferInheritanceRenderPassTransformInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceDiagnosticsConfigFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceDiagnosticsConfigFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceDiagnosticsConfigCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DeviceDiagnosticsConfigCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImageLayout","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl Sync for ImageType","synthetic":true,"types":[]},{"text":"impl Sync for ImageTiling","synthetic":true,"types":[]},{"text":"impl Sync for ImageViewType","synthetic":true,"types":[]},{"text":"impl Sync for CommandBufferLevel","synthetic":true,"types":[]},{"text":"impl Sync for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorType","synthetic":true,"types":[]},{"text":"impl Sync for QueryType","synthetic":true,"types":[]},{"text":"impl Sync for BorderColor","synthetic":true,"types":[]},{"text":"impl Sync for PipelineBindPoint","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCacheHeaderVersion","synthetic":true,"types":[]},{"text":"impl Sync for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl Sync for SharingMode","synthetic":true,"types":[]},{"text":"impl Sync for IndexType","synthetic":true,"types":[]},{"text":"impl Sync for Filter","synthetic":true,"types":[]},{"text":"impl Sync for SamplerMipmapMode","synthetic":true,"types":[]},{"text":"impl Sync for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl Sync for CompareOp","synthetic":true,"types":[]},{"text":"impl Sync for PolygonMode","synthetic":true,"types":[]},{"text":"impl Sync for FrontFace","synthetic":true,"types":[]},{"text":"impl Sync for BlendFactor","synthetic":true,"types":[]},{"text":"impl Sync for BlendOp","synthetic":true,"types":[]},{"text":"impl Sync for StencilOp","synthetic":true,"types":[]},{"text":"impl Sync for LogicOp","synthetic":true,"types":[]},{"text":"impl Sync for InternalAllocationType","synthetic":true,"types":[]},{"text":"impl Sync for SystemAllocationScope","synthetic":true,"types":[]},{"text":"impl Sync for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl Sync for VertexInputRate","synthetic":true,"types":[]},{"text":"impl Sync for Format","synthetic":true,"types":[]},{"text":"impl Sync for StructureType","synthetic":true,"types":[]},{"text":"impl Sync for SubpassContents","synthetic":true,"types":[]},{"text":"impl Sync for Result","synthetic":true,"types":[]},{"text":"impl Sync for DynamicState","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorUpdateTemplateType","synthetic":true,"types":[]},{"text":"impl Sync for ObjectType","synthetic":true,"types":[]},{"text":"impl Sync for SemaphoreType","synthetic":true,"types":[]},{"text":"impl Sync for PresentModeKHR","synthetic":true,"types":[]},{"text":"impl Sync for ColorSpaceKHR","synthetic":true,"types":[]},{"text":"impl Sync for TimeDomainEXT","synthetic":true,"types":[]},{"text":"impl Sync for DebugReportObjectTypeEXT","synthetic":true,"types":[]},{"text":"impl Sync for RasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl Sync for ValidationCheckEXT","synthetic":true,"types":[]},{"text":"impl Sync for ValidationFeatureEnableEXT","synthetic":true,"types":[]},{"text":"impl Sync for ValidationFeatureDisableEXT","synthetic":true,"types":[]},{"text":"impl Sync for IndirectCommandsTokenTypeNV","synthetic":true,"types":[]},{"text":"impl Sync for DisplayPowerStateEXT","synthetic":true,"types":[]},{"text":"impl Sync for DeviceEventTypeEXT","synthetic":true,"types":[]},{"text":"impl Sync for DisplayEventTypeEXT","synthetic":true,"types":[]},{"text":"impl Sync for ViewportCoordinateSwizzleNV","synthetic":true,"types":[]},{"text":"impl Sync for DiscardRectangleModeEXT","synthetic":true,"types":[]},{"text":"impl Sync for PointClippingBehavior","synthetic":true,"types":[]},{"text":"impl Sync for SamplerReductionMode","synthetic":true,"types":[]},{"text":"impl Sync for TessellationDomainOrigin","synthetic":true,"types":[]},{"text":"impl Sync for SamplerYcbcrModelConversion","synthetic":true,"types":[]},{"text":"impl Sync for SamplerYcbcrRange","synthetic":true,"types":[]},{"text":"impl Sync for ChromaLocation","synthetic":true,"types":[]},{"text":"impl Sync for BlendOverlapEXT","synthetic":true,"types":[]},{"text":"impl Sync for CoverageModulationModeNV","synthetic":true,"types":[]},{"text":"impl Sync for CoverageReductionModeNV","synthetic":true,"types":[]},{"text":"impl Sync for ValidationCacheHeaderVersionEXT","synthetic":true,"types":[]},{"text":"impl Sync for ShaderInfoTypeAMD","synthetic":true,"types":[]},{"text":"impl Sync for QueueGlobalPriorityEXT","synthetic":true,"types":[]},{"text":"impl Sync for ConservativeRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl Sync for VendorId","synthetic":true,"types":[]},{"text":"impl Sync for DriverId","synthetic":true,"types":[]},{"text":"impl Sync for ShadingRatePaletteEntryNV","synthetic":true,"types":[]},{"text":"impl Sync for CoarseSampleOrderTypeNV","synthetic":true,"types":[]},{"text":"impl Sync for CopyAccelerationStructureModeKHR","synthetic":true,"types":[]},{"text":"impl Sync for AccelerationStructureTypeKHR","synthetic":true,"types":[]},{"text":"impl Sync for GeometryTypeKHR","synthetic":true,"types":[]},{"text":"impl Sync for AccelerationStructureMemoryRequirementsTypeKHR","synthetic":true,"types":[]},{"text":"impl Sync for AccelerationStructureBuildTypeKHR","synthetic":true,"types":[]},{"text":"impl Sync for RayTracingShaderGroupTypeKHR","synthetic":true,"types":[]},{"text":"impl Sync for MemoryOverallocationBehaviorAMD","synthetic":true,"types":[]},{"text":"impl Sync for ScopeNV","synthetic":true,"types":[]},{"text":"impl Sync for ComponentTypeNV","synthetic":true,"types":[]},{"text":"impl Sync for FullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceCounterScopeKHR","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceCounterUnitKHR","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceCounterStorageKHR","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceConfigurationTypeINTEL","synthetic":true,"types":[]},{"text":"impl Sync for QueryPoolSamplingModeINTEL","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceOverrideTypeINTEL","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceParameterTypeINTEL","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceValueTypeINTEL","synthetic":true,"types":[]},{"text":"impl Sync for ShaderFloatControlsIndependence","synthetic":true,"types":[]},{"text":"impl Sync for PipelineExecutableStatisticFormatKHR","synthetic":true,"types":[]},{"text":"impl Sync for LineRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl Sync for ClearColorValue","synthetic":true,"types":[]},{"text":"impl Sync for ClearValue","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceCounterResultKHR","synthetic":true,"types":[]},{"text":"impl !Sync for PerformanceValueDataINTEL","synthetic":true,"types":[]},{"text":"impl Sync for PipelineExecutableStatisticValueKHR","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceOrHostAddressKHR","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceOrHostAddressConstKHR","synthetic":true,"types":[]},{"text":"impl !Sync for AccelerationStructureGeometryDataKHR","synthetic":true,"types":[]},{"text":"impl Sync for GpaSqShaderStageFlags","synthetic":true,"types":[]},{"text":"impl Sync for GpaDeviceClockModeAmd","synthetic":true,"types":[]},{"text":"impl Sync for GpaPerfBlockAmd","synthetic":true,"types":[]},{"text":"impl Sync for GpaSampleTypeAmd","synthetic":true,"types":[]},{"text":"impl Sync for GpaSessionAmd","synthetic":true,"types":[]},{"text":"impl !Sync for GpaSessionCreateInfoAmd","synthetic":true,"types":[]},{"text":"impl Sync for GpaPerfBlockPropertiesAmd","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceGpaFeaturesAmd","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceGpaPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceGpaPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GpaPerfCounterAmd","synthetic":true,"types":[]},{"text":"impl !Sync for GpaSampleBeginInfoAmd","synthetic":true,"types":[]},{"text":"impl !Sync for GpaDeviceClockModeInfoAmd","synthetic":true,"types":[]},{"text":"impl !Sync for PhysicalDeviceWaveLimitPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for PhysicalDeviceWaveLimitPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for PipelineShaderStageCreateInfoWaveLimitAmd","synthetic":true,"types":[]},{"text":"impl Sync for DebugMarker","synthetic":true,"types":[]},{"text":"impl Sync for DebugReport","synthetic":true,"types":[]},{"text":"impl Sync for DebugUtils","synthetic":true,"types":[]},{"text":"impl Sync for MetalSurface","synthetic":true,"types":[]},{"text":"impl Sync for AndroidSurface","synthetic":true,"types":[]},{"text":"impl Sync for Display","synthetic":true,"types":[]},{"text":"impl Sync for DisplaySwapchain","synthetic":true,"types":[]},{"text":"impl Sync for DrawIndirectCount","synthetic":true,"types":[]},{"text":"impl Sync for ExternalMemoryFd","synthetic":true,"types":[]},{"text":"impl Sync for PushDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for RayTracing","synthetic":true,"types":[]},{"text":"impl Sync for Surface","synthetic":true,"types":[]},{"text":"impl Sync for Swapchain","synthetic":true,"types":[]},{"text":"impl Sync for TimelineSemaphore","synthetic":true,"types":[]},{"text":"impl Sync for WaylandSurface","synthetic":true,"types":[]},{"text":"impl Sync for Win32Surface","synthetic":true,"types":[]},{"text":"impl Sync for XcbSurface","synthetic":true,"types":[]},{"text":"impl Sync for XlibSurface","synthetic":true,"types":[]},{"text":"impl Sync for IOSSurface","synthetic":true,"types":[]},{"text":"impl Sync for MacOSSurface","synthetic":true,"types":[]},{"text":"impl Sync for MeshShader","synthetic":true,"types":[]},{"text":"impl Sync for RayTracing","synthetic":true,"types":[]},{"text":"impl Sync for Instance","synthetic":false,"types":[]},{"text":"impl Sync for PhysicalDevice","synthetic":false,"types":[]},{"text":"impl Sync for Device","synthetic":false,"types":[]},{"text":"impl Sync for Queue","synthetic":false,"types":[]},{"text":"impl Sync for CommandBuffer","synthetic":false,"types":[]},{"text":"impl Sync for KhrSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrSwapchainFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDisplayFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDisplaySwapchainFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrXlibSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrXcbSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrWaylandSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrMirSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrAndroidSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrWin32SurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for AndroidNativeBufferFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDebugReportFn","synthetic":false,"types":[]},{"text":"impl Sync for NvGlslShaderFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDepthRangeUnrestrictedFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrSamplerMirrorClampToEdgeFn","synthetic":false,"types":[]},{"text":"impl Sync for ImgFilterCubicFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension17Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension18Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdRasterizationOrderFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension20Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdShaderTrinaryMinmaxFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdShaderExplicitVertexParameterFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDebugMarkerFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension24Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension25Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdGcnShaderFn","synthetic":false,"types":[]},{"text":"impl Sync for NvDedicatedAllocationFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension28Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtTransformFeedbackFn","synthetic":false,"types":[]},{"text":"impl Sync for NvxExtension30Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvxImageViewHandleFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension32Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension33Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdDrawIndirectCountFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension35Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdNegativeViewportHeightFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdGpuShaderHalfFloatFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdShaderBallotFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension39Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension40Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension41Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdTextureGatherBiasLodFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdShaderInfoFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension44Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension45Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension46Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdShaderImageLoadStoreLodFn","synthetic":false,"types":[]},{"text":"impl Sync for NvxExtension48Fn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleExtension49Fn","synthetic":false,"types":[]},{"text":"impl Sync for GgpStreamDescriptorSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for NvCornerSampledImageFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension52Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension53Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrMultiviewFn","synthetic":false,"types":[]},{"text":"impl Sync for ImgFormatPvrtcFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExternalMemoryCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExternalMemoryFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExternalMemoryWin32Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvWin32KeyedMutexFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrGetPhysicalDeviceProperties2Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDeviceGroupFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtValidationFlagsFn","synthetic":false,"types":[]},{"text":"impl Sync for NnViSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrShaderDrawParametersFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtShaderSubgroupBallotFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtShaderSubgroupVoteFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtTextureCompressionAstcHdrFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtAstcDecodeModeFn","synthetic":false,"types":[]},{"text":"impl Sync for ImgExtension69Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrMaintenance1Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDeviceGroupCreationFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalMemoryCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalMemoryFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalMemoryWin32Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalMemoryFdFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrWin32KeyedMutexFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalSemaphoreCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalSemaphoreFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalSemaphoreWin32Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalSemaphoreFdFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrPushDescriptorFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtConditionalRenderingFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrShaderFloat16Int8Fn","synthetic":false,"types":[]},{"text":"impl Sync for Khr16bitStorageFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrIncrementalPresentFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDescriptorUpdateTemplateFn","synthetic":false,"types":[]},{"text":"impl Sync for NvxDeviceGeneratedCommandsFn","synthetic":false,"types":[]},{"text":"impl Sync for NvClipSpaceWScalingFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDirectModeDisplayFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtAcquireXlibDisplayFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDisplaySurfaceCounterFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDisplayControlFn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleDisplayTimingFn","synthetic":false,"types":[]},{"text":"impl Sync for NvSampleMaskOverrideCoverageFn","synthetic":false,"types":[]},{"text":"impl Sync for NvGeometryShaderPassthroughFn","synthetic":false,"types":[]},{"text":"impl Sync for NvViewportArray2Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvxMultiviewPerViewAttributesFn","synthetic":false,"types":[]},{"text":"impl Sync for NvViewportSwizzleFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDiscardRectanglesFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension101Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtConservativeRasterizationFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDepthClipEnableFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension104Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtSwapchainColorspaceFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtHdrMetadataFn","synthetic":false,"types":[]},{"text":"impl Sync for ImgExtension107Fn","synthetic":false,"types":[]},{"text":"impl Sync for ImgExtension108Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrImagelessFramebufferFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrCreateRenderpass2Fn","synthetic":false,"types":[]},{"text":"impl Sync for ImgExtension111Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrSharedPresentableImageFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalFenceCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalFenceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalFenceWin32Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExternalFenceFdFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrPerformanceQueryFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrMaintenance2Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension119Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrGetSurfaceCapabilities2Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrVariablePointersFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrGetDisplayProperties2Fn","synthetic":false,"types":[]},{"text":"impl Sync for MvkIosSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for MvkMacosSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for MvkMoltenvkFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExternalMemoryDmaBufFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtQueueFamilyForeignFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDedicatedAllocationFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDebugUtilsFn","synthetic":false,"types":[]},{"text":"impl Sync for AndroidExternalMemoryAndroidHardwareBufferFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtSamplerFilterMinmaxFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrStorageBufferStorageClassFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdGpuShaderInt16Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension134Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension135Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension136Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdMixedAttachmentSamplesFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdShaderFragmentMaskFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtInlineUniformBlockFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension140Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtShaderStencilExportFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension142Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension143Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtSampleLocationsFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrRelaxedBlockLayoutFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrGetMemoryRequirements2Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrImageFormatListFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtBlendOperationAdvancedFn","synthetic":false,"types":[]},{"text":"impl Sync for NvFragmentCoverageToColorFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrRayTracingFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension152Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvFramebufferMixedSamplesFn","synthetic":false,"types":[]},{"text":"impl Sync for NvFillRectangleFn","synthetic":false,"types":[]},{"text":"impl Sync for NvShaderSmBuiltinsFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtPostDepthCoverageFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrSamplerYcbcrConversionFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrBindMemory2Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtImageDrmFormatModifierFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension160Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtValidationCacheFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtDescriptorIndexingFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtShaderViewportIndexLayerFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension164Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvShadingRateImageFn","synthetic":false,"types":[]},{"text":"impl Sync for NvRayTracingFn","synthetic":false,"types":[]},{"text":"impl Sync for NvRepresentativeFragmentTestFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension168Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrMaintenance3Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDrawIndirectCountFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtFilterCubicFn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension172Fn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension173Fn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension174Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtGlobalPriorityFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrShaderSubgroupExtendedTypesFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension177Fn","synthetic":false,"types":[]},{"text":"impl Sync for Khr8bitStorageFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExternalMemoryHostFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdBufferMarkerFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrShaderAtomicInt64Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrShaderClockFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension183Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdPipelineCompilerControlFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtCalibratedTimestampsFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdShaderCorePropertiesFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension187Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension188Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension189Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdMemoryOverallocationBehaviorFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtVertexAttributeDivisorFn","synthetic":false,"types":[]},{"text":"impl Sync for GgpFrameTokenFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtPipelineCreationFeedbackFn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleExtension194Fn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleExtension195Fn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleExtension196Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDriverPropertiesFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrShaderFloatControlsFn","synthetic":false,"types":[]},{"text":"impl Sync for NvShaderSubgroupPartitionedFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDepthStencilResolveFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrSwapchainMutableFormatFn","synthetic":false,"types":[]},{"text":"impl Sync for NvComputeShaderDerivativesFn","synthetic":false,"types":[]},{"text":"impl Sync for NvMeshShaderFn","synthetic":false,"types":[]},{"text":"impl Sync for NvFragmentShaderBarycentricFn","synthetic":false,"types":[]},{"text":"impl Sync for NvShaderImageFootprintFn","synthetic":false,"types":[]},{"text":"impl Sync for NvScissorExclusiveFn","synthetic":false,"types":[]},{"text":"impl Sync for NvDeviceDiagnosticCheckpointsFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrTimelineSemaphoreFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension209Fn","synthetic":false,"types":[]},{"text":"impl Sync for IntelShaderIntegerFunctions2Fn","synthetic":false,"types":[]},{"text":"impl Sync for IntelPerformanceQueryFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrVulkanMemoryModelFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtPciBusInfoFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdDisplayNativeHdrFn","synthetic":false,"types":[]},{"text":"impl Sync for FuchsiaImagepipeSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleExtension216Fn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleExtension217Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtMetalSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtFragmentDensityMapFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension220Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension221Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtScalarBlockLayoutFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension223Fn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleHlslFunctionality1Fn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleDecorateStringFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtSubgroupSizeControlFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension227Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdShaderCoreProperties2Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension229Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdDeviceCoherentMemoryFn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension231Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension232Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension233Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension234Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension235Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension236Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrSpirv14Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtMemoryBudgetFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtMemoryPriorityFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrSurfaceProtectedCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Sync for NvDedicatedAllocationImageAliasingFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrSeparateDepthStencilLayoutsFn","synthetic":false,"types":[]},{"text":"impl Sync for IntelExtension243Fn","synthetic":false,"types":[]},{"text":"impl Sync for MesaExtension244Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtBufferDeviceAddressFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtToolingInfoFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtSeparateStencilUsageFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtValidationFeaturesFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension249Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvCooperativeMatrixFn","synthetic":false,"types":[]},{"text":"impl Sync for NvCoverageReductionModeFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtFragmentShaderInterlockFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtYcbcrImageArraysFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrUniformBufferStandardLayoutFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension255Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtFullScreenExclusiveFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtHeadlessSurfaceFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrBufferDeviceAddressFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension259Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtLineRasterizationFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension261Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtHostQueryResetFn","synthetic":false,"types":[]},{"text":"impl Sync for GgpExtension263Fn","synthetic":false,"types":[]},{"text":"impl Sync for BrcmExtension264Fn","synthetic":false,"types":[]},{"text":"impl Sync for BrcmExtension265Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtIndexTypeUint8Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension267Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension268Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrDeferredHostOperationsFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrPipelineExecutablePropertiesFn","synthetic":false,"types":[]},{"text":"impl Sync for IntelExtension271Fn","synthetic":false,"types":[]},{"text":"impl Sync for IntelExtension272Fn","synthetic":false,"types":[]},{"text":"impl Sync for IntelExtension273Fn","synthetic":false,"types":[]},{"text":"impl Sync for IntelExtension274Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension275Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension276Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtShaderDemoteToHelperInvocationFn","synthetic":false,"types":[]},{"text":"impl Sync for NvDeviceGeneratedCommandsFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension279Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension280Fn","synthetic":false,"types":[]},{"text":"impl Sync for ArmExtension281Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtTexelBufferAlignmentFn","synthetic":false,"types":[]},{"text":"impl Sync for QcomRenderPassTransformFn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension284Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension285Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension286Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvxExtension287Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvxExtension288Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension289Fn","synthetic":false,"types":[]},{"text":"impl Sync for GoogleUserTypeFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrPipelineLibraryFn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension292Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension293Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrShaderNonSemanticInfoFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension295Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension296Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension297Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtPipelineCreationCacheControlFn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension299Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension300Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvDeviceDiagnosticsConfigFn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension302Fn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension303Fn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension304Fn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension305Fn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension306Fn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension307Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension308Fn","synthetic":false,"types":[]},{"text":"impl Sync for KhrExtension309Fn","synthetic":false,"types":[]},{"text":"impl Sync for QcomExtension310Fn","synthetic":false,"types":[]},{"text":"impl Sync for NvExtension311Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension312Fn","synthetic":false,"types":[]},{"text":"impl Sync for ExtExtension313Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension314Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension315Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension316Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension317Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension318Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension319Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension320Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension321Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension322Fn","synthetic":false,"types":[]},{"text":"impl Sync for AmdExtension323Fn","synthetic":false,"types":[]},{"text":"impl Sync for StaticFn","synthetic":false,"types":[]},{"text":"impl Sync for EntryFnV1_0","synthetic":false,"types":[]},{"text":"impl Sync for InstanceFnV1_0","synthetic":false,"types":[]},{"text":"impl Sync for DeviceFnV1_0","synthetic":false,"types":[]},{"text":"impl Sync for EntryFnV1_1","synthetic":false,"types":[]},{"text":"impl Sync for InstanceFnV1_1","synthetic":false,"types":[]},{"text":"impl Sync for DeviceFnV1_1","synthetic":false,"types":[]},{"text":"impl Sync for EntryFnV1_2","synthetic":false,"types":[]},{"text":"impl Sync for InstanceFnV1_2","synthetic":false,"types":[]},{"text":"impl Sync for DeviceFnV1_2","synthetic":false,"types":[]},{"text":"impl Sync for AmdGpaInterfaceFn","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Sync for Stream","synthetic":true,"types":[]}];
implementors["bimap"] = [{"text":"impl&lt;L, R&gt; Sync for Overwritten&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !Sync for IntoIter&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Sync for Iter&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Sync for LeftValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Sync for RightValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Sync for LeftRange&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Sync for RightRange&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !Sync for IntoIter&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Sync for Iter&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Sync for LeftValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !Sync for RightValues&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Sync for BiBTreeMap&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;L, R, LS, RS&gt; Sync for BiHashMap&lt;L, R, LS, RS&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;LS: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;RS: Sync,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["bit_set"] = [{"text":"impl&lt;B&gt; Sync for BitSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Iter&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Union&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Intersection&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Difference&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for SymmetricDifference&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["bit_vec"] = [{"text":"impl&lt;B&gt; Sync for BitVec&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Iter&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for IntoIter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Blocks&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Sync for BigEndian","synthetic":true,"types":[]},{"text":"impl Sync for LittleEndian","synthetic":true,"types":[]}];
implementors["calloop"] = [{"text":"impl&lt;Data&gt; !Sync for EventLoop&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for InsertError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Data&gt; !Sync for LoopHandle&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LoopSignal","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Sync for Source&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Idle","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Sync for Generic&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Sync for Event&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for EventedFd&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for EventedRawFd","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl !Sync for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Timer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TimerHandle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;Tz&gt; Sync for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Sync for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Sync for ParseMonthError","synthetic":true,"types":[]},{"text":"impl Sync for SecondsFormat","synthetic":true,"types":[]},{"text":"impl Sync for RoundingError","synthetic":true,"types":[]},{"text":"impl Sync for Weekday","synthetic":true,"types":[]},{"text":"impl Sync for Month","synthetic":true,"types":[]},{"text":"impl Sync for FixedOffset","synthetic":true,"types":[]},{"text":"impl Sync for Local","synthetic":true,"types":[]},{"text":"impl Sync for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NaiveDate","synthetic":true,"types":[]},{"text":"impl Sync for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Sync for IsoWeek","synthetic":true,"types":[]},{"text":"impl Sync for NaiveTime","synthetic":true,"types":[]},{"text":"impl Sync for Parsed","synthetic":true,"types":[]},{"text":"impl Sync for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Sync for InternalFixed","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Pad","synthetic":true,"types":[]},{"text":"impl Sync for Numeric","synthetic":true,"types":[]},{"text":"impl Sync for Fixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; !Sync for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !Sync for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for AppSettings","synthetic":true,"types":[]},{"text":"impl Sync for ArgSettings","synthetic":true,"types":[]},{"text":"impl Sync for Shell","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; !Sync for BoxAllocation&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for VecAllocation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for VecEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for TryIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl Sync for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl Sync for TryReadyError","synthetic":true,"types":[]},{"text":"impl Sync for TrySelectError","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Sync for Select&lt;'_&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !Sync for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Stealer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Injector&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T, P&gt; !Sync for CompareAndSetError&lt;'g, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; !Sync for Shared&lt;'g, T&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for LocalHandle","synthetic":true,"types":[]},{"text":"impl !Sync for Guard","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Pointable + Send + Sync&gt; Sync for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Collector","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl !Sync for Backoff","synthetic":true,"types":[]},{"text":"impl !Sync for Parker","synthetic":true,"types":[]},{"text":"impl Sync for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Sync for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync&gt; Sync for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Unparker","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send + Sync&gt; Sync for ShardedLock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync, '_&gt; Sync for ShardedLockReadGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync, '_&gt; Sync for ShardedLockWriteGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Sync for Scope&lt;'_&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, '_&gt; Sync for ScopedJoinHandle&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["dlib"] = [{"text":"impl Sync for DlError","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Sync for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["example_runner"] = [{"text":"impl Sync for ExampleBase","synthetic":true,"types":[]},{"text":"impl Sync for Vertex","synthetic":true,"types":[]},{"text":"impl Sync for Options","synthetic":true,"types":[]}];
implementors["filetime"] = [{"text":"impl Sync for FileTime","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedReceiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Cancellation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl&lt;S&gt; Sync for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for LocalPool","synthetic":true,"types":[]},{"text":"impl !Sync for LocalSpawner","synthetic":true,"types":[]},{"text":"impl Sync for Enter","synthetic":true,"types":[]},{"text":"impl Sync for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl Sync for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;F&gt; Sync for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Sync for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; Sync for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Remote&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RemoteHandle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Shared&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Sync for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Sync for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Sync for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Sync for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; Sync for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Sync for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; Sync for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Sync for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Sync for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Sync for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Sync for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Sync for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Sync for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Sync for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Sync for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AbortHandle","synthetic":true,"types":[]},{"text":"impl Sync for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Sync for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Sync for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Sync for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; Sync for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Sync for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Sync for Next&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; Sync for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; Sync for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Sync for SelectNextSome&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; Sync for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Sync for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; Sync for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for BufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Buffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;St as Stream&gt;::Item as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for ForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Sync for ReuniteError&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; Sync for SplitSink&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SplitStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; Sync for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Sync for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Sync for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Sync for TryNext&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Sync for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for TryBufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Sync for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Sync for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for FuturesOrdered&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for SelectAll&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Sync for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Sync for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Sync for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Sync for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Sync for Close&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; Sync for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Sync for Flush&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; Sync for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; Sync for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Sync for Send&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; Sync for SendAll&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Sync for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; Sync for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; Sync for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for Close&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Sync for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Sync for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for FillBuf&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for Flush&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; Sync for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for Read&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadVectored&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadExact&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadLine&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadToEnd&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadToString&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadUntil&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Sync for Seek&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ReadHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for WriteHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ReuniteError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for Write&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for WriteVectored&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for WriteAll&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut:&nbsp;Sync&gt; Sync for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Sync for Mutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, '_&gt; Sync for MutexLockFuture&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync, '_&gt; Sync for MutexGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync, U:&nbsp;?Sized, '_&gt; Sync for MappedMutexGuard&lt;'_, T, U&gt;","synthetic":false,"types":[]}];
implementors["fxhash"] = [{"text":"impl Sync for FxHasher","synthetic":true,"types":[]},{"text":"impl Sync for FxHasher64","synthetic":true,"types":[]},{"text":"impl Sync for FxHasher32","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl Sync for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl Sync for CommandQueue","synthetic":true,"types":[]},{"text":"impl Sync for Device","synthetic":true,"types":[]},{"text":"impl Sync for QueueFamily","synthetic":true,"types":[]},{"text":"impl Sync for CommandPool","synthetic":true,"types":[]},{"text":"impl Sync for CommandBuffer","synthetic":true,"types":[]},{"text":"impl Sync for Surface","synthetic":true,"types":[]},{"text":"impl Sync for Instance","synthetic":true,"types":[]},{"text":"impl Sync for Backend","synthetic":true,"types":[]}];
implementors["gfx_backend_vulkan"] = [{"text":"impl Sync for VK_ENTRY","synthetic":true,"types":[]},{"text":"impl Sync for RawInstance","synthetic":true,"types":[]},{"text":"impl Sync for Instance","synthetic":true,"types":[]},{"text":"impl Sync for QueueFamily","synthetic":true,"types":[]},{"text":"impl Sync for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceCreationFeatures","synthetic":true,"types":[]},{"text":"impl Sync for CommandQueue","synthetic":true,"types":[]},{"text":"impl Sync for Device","synthetic":true,"types":[]},{"text":"impl Sync for DebugMessenger","synthetic":true,"types":[]},{"text":"impl Sync for Backend","synthetic":true,"types":[]}];
implementors["gfx_descriptor"] = [{"text":"impl&lt;B&gt; Sync for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorCounts","synthetic":true,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl Sync for Features","synthetic":true,"types":[]},{"text":"impl Sync for Hints","synthetic":true,"types":[]},{"text":"impl Sync for Limits","synthetic":true,"types":[]},{"text":"impl Sync for UnsupportedBackend","synthetic":true,"types":[]},{"text":"impl Sync for MemoryTypeId","synthetic":true,"types":[]},{"text":"impl Sync for IndexType","synthetic":true,"types":[]},{"text":"impl Sync for MemoryType","synthetic":true,"types":[]},{"text":"impl Sync for MemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Gpu&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AdapterInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DeviceType","synthetic":true,"types":[]},{"text":"impl Sync for SubRange","synthetic":true,"types":[]},{"text":"impl Sync for Usage","synthetic":true,"types":[]},{"text":"impl Sync for Access","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for IndexBufferView&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CreationError","synthetic":true,"types":[]},{"text":"impl Sync for ViewCreationError","synthetic":true,"types":[]},{"text":"impl Sync for ClearDepthStencil","synthetic":true,"types":[]},{"text":"impl Sync for BufferCopy","synthetic":true,"types":[]},{"text":"impl Sync for ImageCopy","synthetic":true,"types":[]},{"text":"impl Sync for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl Sync for ImageResolve","synthetic":true,"types":[]},{"text":"impl Sync for ImageBlit","synthetic":true,"types":[]},{"text":"impl Sync for CommandBufferFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for CommandBufferInheritanceInfo&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ClearColor","synthetic":true,"types":[]},{"text":"impl Sync for ClearValue","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentClear","synthetic":true,"types":[]},{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl Sync for SubpassContents","synthetic":true,"types":[]},{"text":"impl Sync for DeviceLost","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceLost","synthetic":true,"types":[]},{"text":"impl Sync for WindowInUse","synthetic":true,"types":[]},{"text":"impl Sync for OutOfMemory","synthetic":true,"types":[]},{"text":"impl Sync for OomOrDeviceLost","synthetic":true,"types":[]},{"text":"impl Sync for AllocationError","synthetic":true,"types":[]},{"text":"impl Sync for CreationError","synthetic":true,"types":[]},{"text":"impl Sync for MapError","synthetic":true,"types":[]},{"text":"impl Sync for BindError","synthetic":true,"types":[]},{"text":"impl Sync for WaitFor","synthetic":true,"types":[]},{"text":"impl Sync for ShaderError","synthetic":true,"types":[]},{"text":"impl Sync for Aspects","synthetic":true,"types":[]},{"text":"impl Sync for FormatDesc","synthetic":true,"types":[]},{"text":"impl Sync for FormatBits","synthetic":true,"types":[]},{"text":"impl Sync for Swizzle","synthetic":true,"types":[]},{"text":"impl Sync for Properties","synthetic":true,"types":[]},{"text":"impl Sync for ImageFeature","synthetic":true,"types":[]},{"text":"impl Sync for BufferFeature","synthetic":true,"types":[]},{"text":"impl Sync for BaseFormat","synthetic":true,"types":[]},{"text":"impl Sync for Rg4Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgba4Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Bgra4Unorm","synthetic":true,"types":[]},{"text":"impl Sync for R5g6b5Unorm","synthetic":true,"types":[]},{"text":"impl Sync for B5g6r5Unorm","synthetic":true,"types":[]},{"text":"impl Sync for R5g5b5a1Unorm","synthetic":true,"types":[]},{"text":"impl Sync for B5g5r5a1Unorm","synthetic":true,"types":[]},{"text":"impl Sync for A1r5g5b5Unorm","synthetic":true,"types":[]},{"text":"impl Sync for R8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for R8Snorm","synthetic":true,"types":[]},{"text":"impl Sync for R8Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for R8Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for R8Uint","synthetic":true,"types":[]},{"text":"impl Sync for R8Sint","synthetic":true,"types":[]},{"text":"impl Sync for R8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Rg8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Rg8Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Rg8Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rg8Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rg8Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rg8Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rg8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Rgb8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgb8Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgb8Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rgb8Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rgb8Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rgb8Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rgb8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Bgr8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Bgr8Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Bgr8Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Bgr8Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Bgr8Uint","synthetic":true,"types":[]},{"text":"impl Sync for Bgr8Sint","synthetic":true,"types":[]},{"text":"impl Sync for Bgr8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Rgba8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgba8Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgba8Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rgba8Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rgba8Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rgba8Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rgba8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Bgra8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Bgra8Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Bgra8Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Bgra8Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Bgra8Uint","synthetic":true,"types":[]},{"text":"impl Sync for Bgra8Sint","synthetic":true,"types":[]},{"text":"impl Sync for Bgra8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Abgr8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Abgr8Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Abgr8Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Abgr8Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Abgr8Uint","synthetic":true,"types":[]},{"text":"impl Sync for Abgr8Sint","synthetic":true,"types":[]},{"text":"impl Sync for Abgr8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for A2r10g10b10Unorm","synthetic":true,"types":[]},{"text":"impl Sync for A2r10g10b10Snorm","synthetic":true,"types":[]},{"text":"impl Sync for A2r10g10b10Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for A2r10g10b10Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for A2r10g10b10Uint","synthetic":true,"types":[]},{"text":"impl Sync for A2r10g10b10Sint","synthetic":true,"types":[]},{"text":"impl Sync for A2b10g10r10Unorm","synthetic":true,"types":[]},{"text":"impl Sync for A2b10g10r10Snorm","synthetic":true,"types":[]},{"text":"impl Sync for A2b10g10r10Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for A2b10g10r10Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for A2b10g10r10Uint","synthetic":true,"types":[]},{"text":"impl Sync for A2b10g10r10Sint","synthetic":true,"types":[]},{"text":"impl Sync for R16Unorm","synthetic":true,"types":[]},{"text":"impl Sync for R16Snorm","synthetic":true,"types":[]},{"text":"impl Sync for R16Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for R16Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for R16Uint","synthetic":true,"types":[]},{"text":"impl Sync for R16Sint","synthetic":true,"types":[]},{"text":"impl Sync for R16Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rg16Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Rg16Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Rg16Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rg16Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rg16Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rg16Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rg16Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rgb16Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgb16Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgb16Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rgb16Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rgb16Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rgb16Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rgb16Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rgba16Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgba16Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Rgba16Uscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rgba16Sscaled","synthetic":true,"types":[]},{"text":"impl Sync for Rgba16Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rgba16Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rgba16Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for R32Uint","synthetic":true,"types":[]},{"text":"impl Sync for R32Sint","synthetic":true,"types":[]},{"text":"impl Sync for R32Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rg32Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rg32Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rg32Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rgb32Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rgb32Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rgb32Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rgba32Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rgba32Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rgba32Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for R64Uint","synthetic":true,"types":[]},{"text":"impl Sync for R64Sint","synthetic":true,"types":[]},{"text":"impl Sync for R64Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rg64Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rg64Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rg64Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rgb64Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rgb64Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rgb64Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for Rgba64Uint","synthetic":true,"types":[]},{"text":"impl Sync for Rgba64Sint","synthetic":true,"types":[]},{"text":"impl Sync for Rgba64Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for B10g11r11Ufloat","synthetic":true,"types":[]},{"text":"impl Sync for E5b9g9r9Ufloat","synthetic":true,"types":[]},{"text":"impl Sync for D16Unorm","synthetic":true,"types":[]},{"text":"impl Sync for X8D24Unorm","synthetic":true,"types":[]},{"text":"impl Sync for D32Sfloat","synthetic":true,"types":[]},{"text":"impl Sync for S8Uint","synthetic":true,"types":[]},{"text":"impl Sync for D16UnormS8Uint","synthetic":true,"types":[]},{"text":"impl Sync for D24UnormS8Uint","synthetic":true,"types":[]},{"text":"impl Sync for D32SfloatS8Uint","synthetic":true,"types":[]},{"text":"impl Sync for Bc1RgbUnorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc1RgbSrgb","synthetic":true,"types":[]},{"text":"impl Sync for Bc1RgbaUnorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc1RgbaSrgb","synthetic":true,"types":[]},{"text":"impl Sync for Bc2Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc2Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Bc3Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc3Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Bc4Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc4Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc5Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc5Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc6hUfloat","synthetic":true,"types":[]},{"text":"impl Sync for Bc6hSfloat","synthetic":true,"types":[]},{"text":"impl Sync for Bc7Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Bc7Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Etc2R8g8b8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Etc2R8g8b8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Etc2R8g8b8a1Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Etc2R8g8b8a1Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Etc2R8g8b8a8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Etc2R8g8b8a8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for EacR11Unorm","synthetic":true,"types":[]},{"text":"impl Sync for EacR11Snorm","synthetic":true,"types":[]},{"text":"impl Sync for EacR11g11Unorm","synthetic":true,"types":[]},{"text":"impl Sync for EacR11g11Snorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc4x4Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc4x4Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc5x4Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc5x4Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc5x5Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc5x5Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc6x5Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc6x5Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc6x6Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc6x6Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc8x5Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc8x5Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc8x6Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc8x6Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc8x8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc8x8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc10x5Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc10x5Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc10x6Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc10x6Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc10x8Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc10x8Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc10x10Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc10x10Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc12x10Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc12x10Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Astc12x12Unorm","synthetic":true,"types":[]},{"text":"impl Sync for Astc12x12Srgb","synthetic":true,"types":[]},{"text":"impl Sync for Component","synthetic":true,"types":[]},{"text":"impl Sync for ChannelType","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceType","synthetic":true,"types":[]},{"text":"impl Sync for Format","synthetic":true,"types":[]},{"text":"impl Sync for Extent","synthetic":true,"types":[]},{"text":"impl Sync for Offset","synthetic":true,"types":[]},{"text":"impl Sync for ViewCapabilities","synthetic":true,"types":[]},{"text":"impl Sync for Usage","synthetic":true,"types":[]},{"text":"impl Sync for Lod","synthetic":true,"types":[]},{"text":"impl Sync for PackedColor","synthetic":true,"types":[]},{"text":"impl Sync for SamplerDesc","synthetic":true,"types":[]},{"text":"impl Sync for Access","synthetic":true,"types":[]},{"text":"impl Sync for Subresource","synthetic":true,"types":[]},{"text":"impl Sync for SubresourceLayers","synthetic":true,"types":[]},{"text":"impl Sync for SubresourceRange","synthetic":true,"types":[]},{"text":"impl Sync for FormatProperties","synthetic":true,"types":[]},{"text":"impl Sync for SubresourceFootprint","synthetic":true,"types":[]},{"text":"impl Sync for Tiling","synthetic":true,"types":[]},{"text":"impl Sync for CreationError","synthetic":true,"types":[]},{"text":"impl Sync for ViewCreationError","synthetic":true,"types":[]},{"text":"impl Sync for LayerError","synthetic":true,"types":[]},{"text":"impl Sync for Filter","synthetic":true,"types":[]},{"text":"impl Sync for CubeFace","synthetic":true,"types":[]},{"text":"impl Sync for Kind","synthetic":true,"types":[]},{"text":"impl Sync for ViewKind","synthetic":true,"types":[]},{"text":"impl Sync for WrapMode","synthetic":true,"types":[]},{"text":"impl Sync for Layout","synthetic":true,"types":[]},{"text":"impl Sync for Properties","synthetic":true,"types":[]},{"text":"impl Sync for Dependencies","synthetic":true,"types":[]},{"text":"impl Sync for Requirements","synthetic":true,"types":[]},{"text":"impl Sync for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Barrier&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentOps","synthetic":true,"types":[]},{"text":"impl Sync for Attachment","synthetic":true,"types":[]},{"text":"impl Sync for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SubpassDesc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Subpass&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl Sync for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl Sync for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for ComputePipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorRangeDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, WI&gt; Sync for DescriptorSetWrite&lt;'a, B, WI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;WI: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for DescriptorSetCopy&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for Rect","synthetic":true,"types":[]},{"text":"impl Sync for ClearRect","synthetic":true,"types":[]},{"text":"impl Sync for Viewport","synthetic":true,"types":[]},{"text":"impl Sync for BakedStates","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for GraphicsPipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DepthBias","synthetic":true,"types":[]},{"text":"impl Sync for Rasterizer","synthetic":true,"types":[]},{"text":"impl Sync for BlendDesc","synthetic":true,"types":[]},{"text":"impl Sync for Multisampling","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl Sync for AttributeDesc","synthetic":true,"types":[]},{"text":"impl Sync for InputAssemblerDesc","synthetic":true,"types":[]},{"text":"impl Sync for ColorMask","synthetic":true,"types":[]},{"text":"impl Sync for BlendState","synthetic":true,"types":[]},{"text":"impl Sync for ColorBlendDesc","synthetic":true,"types":[]},{"text":"impl Sync for DepthTest","synthetic":true,"types":[]},{"text":"impl Sync for StencilFace","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for StencilTest","synthetic":true,"types":[]},{"text":"impl Sync for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl Sync for Face","synthetic":true,"types":[]},{"text":"impl Sync for SpecializationConstant","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Specialization&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PipelineStage","synthetic":true,"types":[]},{"text":"impl Sync for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for EntryPoint&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for PipelineCreationFlags","synthetic":true,"types":[]},{"text":"impl Sync for BufferDescriptorType","synthetic":true,"types":[]},{"text":"impl Sync for BufferDescriptorFormat","synthetic":true,"types":[]},{"text":"impl Sync for ImageDescriptorType","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorType","synthetic":true,"types":[]},{"text":"impl Sync for AllocationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Descriptor&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::BufferView: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for PrimitiveAssemblerDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for PolygonMode","synthetic":true,"types":[]},{"text":"impl Sync for FrontFace","synthetic":true,"types":[]},{"text":"impl Sync for LogicOp","synthetic":true,"types":[]},{"text":"impl Sync for VertexInputRate","synthetic":true,"types":[]},{"text":"impl Sync for Primitive","synthetic":true,"types":[]},{"text":"impl Sync for Comparison","synthetic":true,"types":[]},{"text":"impl Sync for Factor","synthetic":true,"types":[]},{"text":"impl Sync for BlendOp","synthetic":true,"types":[]},{"text":"impl Sync for StencilOp","synthetic":true,"types":[]},{"text":"impl Sync for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Sync for BasePipeline&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Sync for Query&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueryPool: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ControlFlags","synthetic":true,"types":[]},{"text":"impl Sync for ResultFlags","synthetic":true,"types":[]},{"text":"impl Sync for PipelineStatistic","synthetic":true,"types":[]},{"text":"impl Sync for CreationError","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl&lt;Ic, Iw, Is&gt; Sync for Submission&lt;Ic, Iw, Is&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ic: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Is: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Iw: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for QueueType","synthetic":true,"types":[]},{"text":"impl Sync for QueueFamilyId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for QueueGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Extent2D","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceCapabilities","synthetic":true,"types":[]},{"text":"impl Sync for PresentMode","synthetic":true,"types":[]},{"text":"impl Sync for CompositeAlphaMode","synthetic":true,"types":[]},{"text":"impl Sync for SwapchainConfig","synthetic":true,"types":[]},{"text":"impl Sync for Suboptimal","synthetic":true,"types":[]},{"text":"impl Sync for CreationError","synthetic":true,"types":[]},{"text":"impl Sync for AcquireError","synthetic":true,"types":[]},{"text":"impl Sync for PresentError","synthetic":true,"types":[]},{"text":"impl Sync for InitError","synthetic":true,"types":[]}];
implementors["gfx_memory"] = [{"text":"impl Sync for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl Sync for GeneralConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for LinearAllocator&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Heaps&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for MemoryBlock&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; !Sync for MappedRange&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, B&gt; Sync for Writer&lt;'a, 'b, T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl Sync for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl Sync for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl Sync for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl Sync for Kind","synthetic":true,"types":[]},{"text":"impl Sync for HeapsError","synthetic":true,"types":[]},{"text":"impl Sync for MemoryUsage","synthetic":true,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Sync for DedicatedBlock&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Sync for GeneralBlock&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Sync for GeneralAllocator&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Sync for LinearBlock&lt;B&gt;","synthetic":false,"types":[]}];
implementors["inplace_it"] = [{"text":"impl&lt;'a, T&gt; Sync for UninitializedSliceMemoryGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for SliceMemoryGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl Sync for IoVec","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Sync for Buffer","synthetic":true,"types":[]}];
implementors["lazycell"] = [{"text":"impl&lt;T&gt; !Sync for LazyCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Sync + Send&gt; Sync for AtomicLazyCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl !Sync for group","synthetic":true,"types":[]},{"text":"impl Sync for utimbuf","synthetic":true,"types":[]},{"text":"impl Sync for timeval","synthetic":true,"types":[]},{"text":"impl Sync for timespec","synthetic":true,"types":[]},{"text":"impl Sync for rlimit","synthetic":true,"types":[]},{"text":"impl Sync for rusage","synthetic":true,"types":[]},{"text":"impl Sync for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Sync for hostent","synthetic":true,"types":[]},{"text":"impl !Sync for iovec","synthetic":true,"types":[]},{"text":"impl Sync for pollfd","synthetic":true,"types":[]},{"text":"impl Sync for winsize","synthetic":true,"types":[]},{"text":"impl Sync for linger","synthetic":true,"types":[]},{"text":"impl !Sync for sigval","synthetic":true,"types":[]},{"text":"impl Sync for itimerval","synthetic":true,"types":[]},{"text":"impl Sync for tms","synthetic":true,"types":[]},{"text":"impl !Sync for servent","synthetic":true,"types":[]},{"text":"impl !Sync for protoent","synthetic":true,"types":[]},{"text":"impl Sync for in_addr","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Sync for addrinfo","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Sync for fd_set","synthetic":true,"types":[]},{"text":"impl !Sync for tm","synthetic":true,"types":[]},{"text":"impl Sync for sched_param","synthetic":true,"types":[]},{"text":"impl !Sync for Dl_info","synthetic":true,"types":[]},{"text":"impl !Sync for lconv","synthetic":true,"types":[]},{"text":"impl Sync for in_pktinfo","synthetic":true,"types":[]},{"text":"impl !Sync for ifaddrs","synthetic":true,"types":[]},{"text":"impl Sync for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Sync for arpreq","synthetic":true,"types":[]},{"text":"impl Sync for arpreq_old","synthetic":true,"types":[]},{"text":"impl Sync for arphdr","synthetic":true,"types":[]},{"text":"impl !Sync for mmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for epoll_event","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Sync for utsname","synthetic":true,"types":[]},{"text":"impl !Sync for sigevent","synthetic":true,"types":[]},{"text":"impl Sync for rlimit64","synthetic":true,"types":[]},{"text":"impl !Sync for glob_t","synthetic":true,"types":[]},{"text":"impl !Sync for passwd","synthetic":true,"types":[]},{"text":"impl !Sync for spwd","synthetic":true,"types":[]},{"text":"impl Sync for dqblk","synthetic":true,"types":[]},{"text":"impl Sync for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Sync for itimerspec","synthetic":true,"types":[]},{"text":"impl Sync for fsid_t","synthetic":true,"types":[]},{"text":"impl Sync for packet_mreq","synthetic":true,"types":[]},{"text":"impl Sync for cpu_set_t","synthetic":true,"types":[]},{"text":"impl !Sync for if_nameindex","synthetic":true,"types":[]},{"text":"impl Sync for msginfo","synthetic":true,"types":[]},{"text":"impl Sync for sembuf","synthetic":true,"types":[]},{"text":"impl Sync for input_event","synthetic":true,"types":[]},{"text":"impl Sync for input_id","synthetic":true,"types":[]},{"text":"impl Sync for input_absinfo","synthetic":true,"types":[]},{"text":"impl Sync for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Sync for input_mask","synthetic":true,"types":[]},{"text":"impl Sync for ff_replay","synthetic":true,"types":[]},{"text":"impl Sync for ff_trigger","synthetic":true,"types":[]},{"text":"impl Sync for ff_envelope","synthetic":true,"types":[]},{"text":"impl Sync for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl !Sync for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_effect","synthetic":true,"types":[]},{"text":"impl !Sync for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Sync for ucred","synthetic":true,"types":[]},{"text":"impl !Sync for mntent","synthetic":true,"types":[]},{"text":"impl !Sync for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Sync for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Sync for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for arpd_request","synthetic":true,"types":[]},{"text":"impl Sync for inotify_event","synthetic":true,"types":[]},{"text":"impl Sync for fanotify_response","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Sync for regmatch_t","synthetic":true,"types":[]},{"text":"impl Sync for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Sync for dirent","synthetic":true,"types":[]},{"text":"impl Sync for dirent64","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Sync for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Sync for mq_attr","synthetic":true,"types":[]},{"text":"impl Sync for statx","synthetic":true,"types":[]},{"text":"impl Sync for statx_timestamp","synthetic":true,"types":[]},{"text":"impl !Sync for aiocb","synthetic":true,"types":[]},{"text":"impl Sync for __exit_status","synthetic":true,"types":[]},{"text":"impl Sync for __timeval","synthetic":true,"types":[]},{"text":"impl !Sync for glob64_t","synthetic":true,"types":[]},{"text":"impl !Sync for msghdr","synthetic":true,"types":[]},{"text":"impl Sync for cmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for termios","synthetic":true,"types":[]},{"text":"impl Sync for mallinfo","synthetic":true,"types":[]},{"text":"impl Sync for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Sync for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Sync for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Sync for nlattr","synthetic":true,"types":[]},{"text":"impl !Sync for rtentry","synthetic":true,"types":[]},{"text":"impl Sync for timex","synthetic":true,"types":[]},{"text":"impl Sync for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Sync for regex_t","synthetic":true,"types":[]},{"text":"impl Sync for utmpx","synthetic":true,"types":[]},{"text":"impl Sync for sigset_t","synthetic":true,"types":[]},{"text":"impl Sync for sysinfo","synthetic":true,"types":[]},{"text":"impl Sync for msqid_ds","synthetic":true,"types":[]},{"text":"impl Sync for sigaction","synthetic":true,"types":[]},{"text":"impl Sync for statfs","synthetic":true,"types":[]},{"text":"impl Sync for flock","synthetic":true,"types":[]},{"text":"impl Sync for flock64","synthetic":true,"types":[]},{"text":"impl Sync for siginfo_t","synthetic":true,"types":[]},{"text":"impl !Sync for stack_t","synthetic":true,"types":[]},{"text":"impl Sync for stat","synthetic":true,"types":[]},{"text":"impl Sync for stat64","synthetic":true,"types":[]},{"text":"impl Sync for statfs64","synthetic":true,"types":[]},{"text":"impl Sync for statvfs64","synthetic":true,"types":[]},{"text":"impl Sync for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Sync for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Sync for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Sync for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Sync for user_regs_struct","synthetic":true,"types":[]},{"text":"impl !Sync for user","synthetic":true,"types":[]},{"text":"impl !Sync for mcontext_t","synthetic":true,"types":[]},{"text":"impl Sync for ipc_perm","synthetic":true,"types":[]},{"text":"impl Sync for shmid_ds","synthetic":true,"types":[]},{"text":"impl Sync for termios2","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Sync for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl !Sync for ucontext_t","synthetic":true,"types":[]},{"text":"impl Sync for statvfs","synthetic":true,"types":[]},{"text":"impl Sync for max_align_t","synthetic":true,"types":[]},{"text":"impl Sync for sem_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Sync for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Sync for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Sync for in6_addr","synthetic":true,"types":[]},{"text":"impl Sync for DIR","synthetic":true,"types":[]},{"text":"impl Sync for FILE","synthetic":true,"types":[]},{"text":"impl Sync for fpos_t","synthetic":true,"types":[]},{"text":"impl Sync for timezone","synthetic":true,"types":[]},{"text":"impl Sync for fpos64_t","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Library","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync&gt; Sync for Symbol&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Library","synthetic":false,"types":[]},{"text":"impl&lt;'lib, T:&nbsp;Sync&gt; Sync for Symbol&lt;'lib, T&gt;","synthetic":false,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; Sync for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Sync for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Sync for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Sync for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Sync for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Octant","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Sync for GuardSend","synthetic":true,"types":[]},{"text":"impl !Sync for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, T:&nbsp;?Sized + Send&gt; Sync for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, G:&nbsp;GetThreadId + Sync, T:&nbsp;?Sized + Send&gt; Sync for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock + Sync, T:&nbsp;?Sized + Send + Sync&gt; Sync for RwLock&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLockUpgrade + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; !Sync for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Sync for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl Sync for LevelFilter","synthetic":true,"types":[]}];
implementors["matchers"] = [{"text":"impl&lt;S, A&gt; Sync for Pattern&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, A&gt; Sync for Matcher&lt;'a, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Sync for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl Sync for MmapOptions","synthetic":true,"types":[]},{"text":"impl Sync for Mmap","synthetic":true,"types":[]},{"text":"impl Sync for MmapMut","synthetic":true,"types":[]}];
implementors["minifb"] = [{"text":"impl !Sync for Window","synthetic":true,"types":[]},{"text":"impl Sync for WindowOptions","synthetic":true,"types":[]},{"text":"impl Sync for UnixMenu","synthetic":true,"types":[]},{"text":"impl Sync for UnixMenuItem","synthetic":true,"types":[]},{"text":"impl Sync for Menu","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MenuItem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Scale","synthetic":true,"types":[]},{"text":"impl Sync for KeyRepeat","synthetic":true,"types":[]},{"text":"impl Sync for MouseButton","synthetic":true,"types":[]},{"text":"impl Sync for MouseMode","synthetic":true,"types":[]},{"text":"impl Sync for CursorStyle","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Key","synthetic":true,"types":[]},{"text":"impl Sync for ScaleMode","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Sync for Poll","synthetic":true,"types":[]},{"text":"impl Sync for PollOpt","synthetic":true,"types":[]},{"text":"impl Sync for Ready","synthetic":true,"types":[]},{"text":"impl Sync for Token","synthetic":true,"types":[]},{"text":"impl Sync for Events","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for UnixReady","synthetic":true,"types":[]},{"text":"impl Sync for TcpListener","synthetic":true,"types":[]},{"text":"impl Sync for TcpStream","synthetic":true,"types":[]},{"text":"impl Sync for UdpSocket","synthetic":true,"types":[]},{"text":"impl Sync for Registration","synthetic":false,"types":[]},{"text":"impl Sync for SetReadiness","synthetic":false,"types":[]}];
implementors["mio_extras"] = [{"text":"impl&lt;T&gt; !Sync for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SyncSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for Timeout","synthetic":true,"types":[]}];
implementors["naga"] = [{"text":"impl&lt;T&gt; Sync for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Header","synthetic":true,"types":[]},{"text":"impl Sync for StructMember","synthetic":true,"types":[]},{"text":"impl Sync for ImageFlags","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for GlobalUse","synthetic":true,"types":[]},{"text":"impl Sync for GlobalVariable","synthetic":true,"types":[]},{"text":"impl Sync for LocalVariable","synthetic":true,"types":[]},{"text":"impl Sync for FallThrough","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for EntryPoint","synthetic":true,"types":[]},{"text":"impl Sync for Module","synthetic":true,"types":[]},{"text":"impl Sync for ShaderStage","synthetic":true,"types":[]},{"text":"impl Sync for StorageClass","synthetic":true,"types":[]},{"text":"impl Sync for BuiltIn","synthetic":true,"types":[]},{"text":"impl Sync for VectorSize","synthetic":true,"types":[]},{"text":"impl Sync for ScalarKind","synthetic":true,"types":[]},{"text":"impl Sync for ArraySize","synthetic":true,"types":[]},{"text":"impl Sync for MemberOrigin","synthetic":true,"types":[]},{"text":"impl Sync for ImageDimension","synthetic":true,"types":[]},{"text":"impl Sync for TypeInner","synthetic":true,"types":[]},{"text":"impl Sync for ConstantInner","synthetic":true,"types":[]},{"text":"impl Sync for Binding","synthetic":true,"types":[]},{"text":"impl Sync for UnaryOperator","synthetic":true,"types":[]},{"text":"impl Sync for BinaryOperator","synthetic":true,"types":[]},{"text":"impl Sync for IntrinsicFunction","synthetic":true,"types":[]},{"text":"impl Sync for DerivativeAxis","synthetic":true,"types":[]},{"text":"impl Sync for FunctionOrigin","synthetic":true,"types":[]},{"text":"impl Sync for Expression","synthetic":true,"types":[]},{"text":"impl Sync for Statement","synthetic":true,"types":[]},{"text":"impl Sync for BindTarget","synthetic":true,"types":[]},{"text":"impl Sync for BindSource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Options&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Writer","synthetic":true,"types":[]},{"text":"impl Sync for WriterFlags","synthetic":true,"types":[]},{"text":"impl Sync for SamplingFlags","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Parser&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for ModuleState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ParseError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Parser","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Token&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Error&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Scope","synthetic":true,"types":[]},{"text":"impl Sync for Typifier","synthetic":true,"types":[]},{"text":"impl Sync for UnexpectedConstantTypeError","synthetic":true,"types":[]},{"text":"impl Sync for Validator","synthetic":true,"types":[]},{"text":"impl Sync for ResolveError","synthetic":true,"types":[]},{"text":"impl Sync for ValidationError","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl !Sync for TcpBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for UdpBuilder","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; !Sync for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Entry","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for Errno","synthetic":true,"types":[]},{"text":"impl Sync for AtFlags","synthetic":true,"types":[]},{"text":"impl Sync for OFlag","synthetic":true,"types":[]},{"text":"impl Sync for SealFlag","synthetic":true,"types":[]},{"text":"impl Sync for FdFlag","synthetic":true,"types":[]},{"text":"impl Sync for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Sync for FallocateFlags","synthetic":true,"types":[]},{"text":"impl Sync for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FlockArg","synthetic":true,"types":[]},{"text":"impl Sync for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl !Sync for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Sync for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Sync for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Sync for MsFlags","synthetic":true,"types":[]},{"text":"impl Sync for MntFlags","synthetic":true,"types":[]},{"text":"impl Sync for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Sync for FdFlag","synthetic":true,"types":[]},{"text":"impl Sync for MqAttr","synthetic":true,"types":[]},{"text":"impl Sync for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Sync for PollFd","synthetic":true,"types":[]},{"text":"impl Sync for PollFlags","synthetic":true,"types":[]},{"text":"impl Sync for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Sync for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Sync for PtyMaster","synthetic":true,"types":[]},{"text":"impl Sync for CloneFlags","synthetic":true,"types":[]},{"text":"impl Sync for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Sync for LioOpcode","synthetic":true,"types":[]},{"text":"impl Sync for LioMode","synthetic":true,"types":[]},{"text":"impl Sync for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for EpollFlags","synthetic":true,"types":[]},{"text":"impl Sync for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for EpollEvent","synthetic":true,"types":[]},{"text":"impl Sync for EpollOp","synthetic":true,"types":[]},{"text":"impl Sync for EfdFlags","synthetic":true,"types":[]},{"text":"impl Sync for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Sync for ProtFlags","synthetic":true,"types":[]},{"text":"impl Sync for MapFlags","synthetic":true,"types":[]},{"text":"impl Sync for MsFlags","synthetic":true,"types":[]},{"text":"impl Sync for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Sync for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Sync for Options","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Sync for Dqblk","synthetic":true,"types":[]},{"text":"impl Sync for QuotaType","synthetic":true,"types":[]},{"text":"impl Sync for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Sync for RebootMode","synthetic":true,"types":[]},{"text":"impl Sync for FdSet","synthetic":true,"types":[]},{"text":"impl !Sync for SigEvent","synthetic":true,"types":[]},{"text":"impl Sync for SignalIterator","synthetic":true,"types":[]},{"text":"impl Sync for SaFlags","synthetic":true,"types":[]},{"text":"impl Sync for SigSet","synthetic":true,"types":[]},{"text":"impl Sync for SigAction","synthetic":true,"types":[]},{"text":"impl Sync for Signal","synthetic":true,"types":[]},{"text":"impl Sync for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Sync for SigHandler","synthetic":true,"types":[]},{"text":"impl Sync for SigevNotify","synthetic":true,"types":[]},{"text":"impl Sync for SfdFlags","synthetic":true,"types":[]},{"text":"impl Sync for SignalFd","synthetic":true,"types":[]},{"text":"impl Sync for UnixAddr","synthetic":true,"types":[]},{"text":"impl Sync for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Sync for LinkAddr","synthetic":true,"types":[]},{"text":"impl Sync for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Sync for AlgAddr","synthetic":true,"types":[]},{"text":"impl Sync for VsockAddr","synthetic":true,"types":[]},{"text":"impl Sync for SockFlag","synthetic":true,"types":[]},{"text":"impl Sync for MsgFlags","synthetic":true,"types":[]},{"text":"impl Sync for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Sync for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AddressFamily","synthetic":true,"types":[]},{"text":"impl Sync for SockAddr","synthetic":true,"types":[]},{"text":"impl Sync for InetAddr","synthetic":true,"types":[]},{"text":"impl Sync for IpAddr","synthetic":true,"types":[]},{"text":"impl Sync for SockType","synthetic":true,"types":[]},{"text":"impl Sync for SockProtocol","synthetic":true,"types":[]},{"text":"impl Sync for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SockLevel","synthetic":true,"types":[]},{"text":"impl Sync for Shutdown","synthetic":true,"types":[]},{"text":"impl Sync for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Sync for ReusePort","synthetic":true,"types":[]},{"text":"impl Sync for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Sync for Linger","synthetic":true,"types":[]},{"text":"impl Sync for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Sync for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Sync for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Sync for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Sync for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Sync for SendTimeout","synthetic":true,"types":[]},{"text":"impl Sync for Broadcast","synthetic":true,"types":[]},{"text":"impl Sync for OobInline","synthetic":true,"types":[]},{"text":"impl Sync for SocketError","synthetic":true,"types":[]},{"text":"impl Sync for KeepAlive","synthetic":true,"types":[]},{"text":"impl Sync for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Sync for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Sync for RcvBuf","synthetic":true,"types":[]},{"text":"impl Sync for SndBuf","synthetic":true,"types":[]},{"text":"impl Sync for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Sync for SndBufForce","synthetic":true,"types":[]},{"text":"impl Sync for SockType","synthetic":true,"types":[]},{"text":"impl Sync for AcceptConn","synthetic":true,"types":[]},{"text":"impl Sync for OriginalDst","synthetic":true,"types":[]},{"text":"impl Sync for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Sync for IpTransparent","synthetic":true,"types":[]},{"text":"impl Sync for Mark","synthetic":true,"types":[]},{"text":"impl Sync for PassCred","synthetic":true,"types":[]},{"text":"impl Sync for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Sync for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Sync for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SFlag","synthetic":true,"types":[]},{"text":"impl Sync for Mode","synthetic":true,"types":[]},{"text":"impl Sync for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Sync for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Sync for Statfs","synthetic":true,"types":[]},{"text":"impl Sync for FsType","synthetic":true,"types":[]},{"text":"impl Sync for FsFlags","synthetic":true,"types":[]},{"text":"impl Sync for Statvfs","synthetic":true,"types":[]},{"text":"impl Sync for SysInfo","synthetic":true,"types":[]},{"text":"impl !Sync for Termios","synthetic":true,"types":[]},{"text":"impl Sync for InputFlags","synthetic":true,"types":[]},{"text":"impl Sync for OutputFlags","synthetic":true,"types":[]},{"text":"impl Sync for ControlFlags","synthetic":true,"types":[]},{"text":"impl Sync for LocalFlags","synthetic":true,"types":[]},{"text":"impl Sync for BaudRate","synthetic":true,"types":[]},{"text":"impl Sync for SetArg","synthetic":true,"types":[]},{"text":"impl Sync for FlushArg","synthetic":true,"types":[]},{"text":"impl Sync for FlowArg","synthetic":true,"types":[]},{"text":"impl Sync for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Sync for TimeSpec","synthetic":true,"types":[]},{"text":"impl Sync for TimeVal","synthetic":true,"types":[]},{"text":"impl Sync for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for IoVec&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for UtsName","synthetic":true,"types":[]},{"text":"impl Sync for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Sync for WaitStatus","synthetic":true,"types":[]},{"text":"impl Sync for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Sync for InitFlags","synthetic":true,"types":[]},{"text":"impl Sync for Inotify","synthetic":true,"types":[]},{"text":"impl Sync for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for InotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for UContext","synthetic":true,"types":[]},{"text":"impl Sync for Uid","synthetic":true,"types":[]},{"text":"impl Sync for Gid","synthetic":true,"types":[]},{"text":"impl Sync for Pid","synthetic":true,"types":[]},{"text":"impl Sync for AccessFlags","synthetic":true,"types":[]},{"text":"impl Sync for User","synthetic":true,"types":[]},{"text":"impl Sync for Group","synthetic":true,"types":[]},{"text":"impl Sync for ForkResult","synthetic":true,"types":[]},{"text":"impl Sync for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Sync for Whence","synthetic":true,"types":[]},{"text":"impl Sync for LinkatFlags","synthetic":true,"types":[]},{"text":"impl Sync for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl Sync for PathconfVar","synthetic":true,"types":[]},{"text":"impl Sync for SysconfVar","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Sync for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Sync for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Sync for FloatErrorKind","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Sync for OnceCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, F&nbsp;=&nbsp;fn() -&gt; T&gt; !Sync for Lazy&lt;T, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F:&nbsp;Send&gt; Sync for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnceCell&lt;T&gt;: Sync,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; Sync for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["owned_ttf_parser"] = [{"text":"impl Sync for OwnedFont","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Sync for Condvar","synthetic":true,"types":[]},{"text":"impl Sync for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Sync for Once","synthetic":true,"types":[]},{"text":"impl Sync for RawFairMutex","synthetic":true,"types":[]},{"text":"impl Sync for RawMutex","synthetic":true,"types":[]},{"text":"impl Sync for RawRwLock","synthetic":true,"types":[]},{"text":"impl Sync for RawThreadId","synthetic":true,"types":[]},{"text":"impl Sync for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Sync for ParkToken","synthetic":true,"types":[]},{"text":"impl Sync for UnparkResult","synthetic":true,"types":[]},{"text":"impl Sync for UnparkToken","synthetic":true,"types":[]},{"text":"impl Sync for SpinWait","synthetic":true,"types":[]},{"text":"impl Sync for FilterOp","synthetic":true,"types":[]},{"text":"impl Sync for ParkResult","synthetic":true,"types":[]},{"text":"impl Sync for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Sync for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Sync for YesS3","synthetic":true,"types":[]},{"text":"impl Sync for NoS3","synthetic":true,"types":[]},{"text":"impl Sync for YesS4","synthetic":true,"types":[]},{"text":"impl Sync for NoS4","synthetic":true,"types":[]},{"text":"impl Sync for YesA1","synthetic":true,"types":[]},{"text":"impl Sync for NoA1","synthetic":true,"types":[]},{"text":"impl Sync for YesA2","synthetic":true,"types":[]},{"text":"impl Sync for NoA2","synthetic":true,"types":[]},{"text":"impl Sync for YesNI","synthetic":true,"types":[]},{"text":"impl Sync for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Sync for SseMachine&lt;S3, S4, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S4: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Sync for Avx2Machine&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for vec128_storage","synthetic":true,"types":[]},{"text":"impl Sync for vec256_storage","synthetic":true,"types":[]},{"text":"impl Sync for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !Sync for TokenStream","synthetic":true,"types":[]},{"text":"impl !Sync for LexError","synthetic":true,"types":[]},{"text":"impl !Sync for Span","synthetic":true,"types":[]},{"text":"impl !Sync for Group","synthetic":true,"types":[]},{"text":"impl !Sync for Punct","synthetic":true,"types":[]},{"text":"impl !Sync for Ident","synthetic":true,"types":[]},{"text":"impl !Sync for Literal","synthetic":true,"types":[]},{"text":"impl !Sync for TokenTree","synthetic":true,"types":[]},{"text":"impl Sync for Delimiter","synthetic":true,"types":[]},{"text":"impl Sync for Spacing","synthetic":true,"types":[]},{"text":"impl !Sync for IntoIter","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl !Sync for Diagnostic","synthetic":true,"types":[]},{"text":"impl !Sync for SpanRange","synthetic":true,"types":[]},{"text":"impl Sync for Level","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Sync for Bernoulli","synthetic":true,"types":[]},{"text":"impl Sync for Open01","synthetic":true,"types":[]},{"text":"impl Sync for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Sync for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Binomial","synthetic":true,"types":[]},{"text":"impl Sync for Cauchy","synthetic":true,"types":[]},{"text":"impl Sync for Dirichlet","synthetic":true,"types":[]},{"text":"impl Sync for Exp","synthetic":true,"types":[]},{"text":"impl Sync for Exp1","synthetic":true,"types":[]},{"text":"impl Sync for Beta","synthetic":true,"types":[]},{"text":"impl Sync for ChiSquared","synthetic":true,"types":[]},{"text":"impl Sync for FisherF","synthetic":true,"types":[]},{"text":"impl Sync for Gamma","synthetic":true,"types":[]},{"text":"impl Sync for StudentT","synthetic":true,"types":[]},{"text":"impl Sync for LogNormal","synthetic":true,"types":[]},{"text":"impl Sync for Normal","synthetic":true,"types":[]},{"text":"impl Sync for StandardNormal","synthetic":true,"types":[]},{"text":"impl Sync for Pareto","synthetic":true,"types":[]},{"text":"impl Sync for Poisson","synthetic":true,"types":[]},{"text":"impl Sync for Triangular","synthetic":true,"types":[]},{"text":"impl Sync for UnitCircle","synthetic":true,"types":[]},{"text":"impl Sync for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Sync for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Sync for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Standard","synthetic":true,"types":[]},{"text":"impl Sync for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for EntropyRng","synthetic":true,"types":[]},{"text":"impl Sync for StdRng","synthetic":true,"types":[]},{"text":"impl !Sync for ThreadRng","synthetic":true,"types":[]},{"text":"impl Sync for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Sync for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Sync for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Sync for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Sync for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Sync for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["raw_string"] = [{"text":"impl&lt;'a&gt; Sync for Utf8Chunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Utf8ChunksIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RawStr","synthetic":true,"types":[]},{"text":"impl Sync for RawString","synthetic":true,"types":[]}];
implementors["raw_window_handle"] = [{"text":"impl !Sync for RawWindowHandle","synthetic":true,"types":[]},{"text":"impl !Sync for XlibHandle","synthetic":true,"types":[]},{"text":"impl !Sync for XcbHandle","synthetic":true,"types":[]},{"text":"impl !Sync for WaylandHandle","synthetic":true,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Chain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Chunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Cloned&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Copied&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Enumerate&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Sync for Filter&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Sync for FilterMap&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for FlatMap&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for FlatMapIter&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Flatten&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for FlattenIter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, ID, F&gt; Sync for Fold&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Sync for FoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for Inspect&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Sync for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Sync for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as ParallelIterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for MaxLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for MinLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for Map&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, INIT, F&gt; Sync for MapInit&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T, F&gt; Sync for MapWith&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for MultiZip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for PanicFuse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Sync for IterBridge&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Sync for Positions&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RepeatN&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Rev&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Skip&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Sync for Split&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Take&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, ID, F&gt; Sync for TryFold&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Sync for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Zip&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for ZipEq&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for StepBy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Sync for Iter&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Sync for Chunks&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Sync for ChunksExact&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Sync for Windows&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Sync for IterMut&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Sync for ChunksMut&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Sync for ChunksExactMut&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Sync for Split&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Sync for SplitMut&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Sync for Chars&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Sync for CharIndices&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Sync for Bytes&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Sync for EncodeUtf16&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Sync for Split&lt;'ch, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Sync for SplitTerminator&lt;'ch, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Sync for Lines&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Sync for SplitWhitespace&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Sync for Matches&lt;'ch, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Sync for MatchIndices&lt;'ch, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Drain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Sync for Drain&lt;'data, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rayon_core"] = [{"text":"impl !Sync for ThreadBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Sync for Scope&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Sync for ScopeFifo&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ThreadPool","synthetic":true,"types":[]},{"text":"impl Sync for ThreadPoolBuildError","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;DefaultSpawn&gt; !Sync for ThreadPoolBuilder&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Configuration","synthetic":true,"types":[]},{"text":"impl !Sync for FnContext","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl Sync for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl Sync for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Sync for RegexSet","synthetic":true,"types":[]},{"text":"impl Sync for SetMatches","synthetic":true,"types":[]},{"text":"impl Sync for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Sync for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Sync for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Sync for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Sync for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Sync for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RegexSet","synthetic":true,"types":[]},{"text":"impl Sync for SetMatches","synthetic":true,"types":[]},{"text":"impl Sync for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["regex_automata"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Sync for Regex&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RegexBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for DenseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for SparseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for Premultiplied&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for PremultipliedByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl !Sync for Parser","synthetic":true,"types":[]},{"text":"impl Sync for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Sync for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Span","synthetic":true,"types":[]},{"text":"impl Sync for Position","synthetic":true,"types":[]},{"text":"impl Sync for WithComments","synthetic":true,"types":[]},{"text":"impl Sync for Comment","synthetic":true,"types":[]},{"text":"impl Sync for Alternation","synthetic":true,"types":[]},{"text":"impl Sync for Concat","synthetic":true,"types":[]},{"text":"impl Sync for Literal","synthetic":true,"types":[]},{"text":"impl Sync for ClassPerl","synthetic":true,"types":[]},{"text":"impl Sync for ClassAscii","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicode","synthetic":true,"types":[]},{"text":"impl Sync for ClassBracketed","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetRange","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl Sync for Assertion","synthetic":true,"types":[]},{"text":"impl Sync for Repetition","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionOp","synthetic":true,"types":[]},{"text":"impl Sync for Group","synthetic":true,"types":[]},{"text":"impl Sync for CaptureName","synthetic":true,"types":[]},{"text":"impl Sync for SetFlags","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl Sync for FlagsItem","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for Ast","synthetic":true,"types":[]},{"text":"impl Sync for LiteralKind","synthetic":true,"types":[]},{"text":"impl Sync for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl Sync for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl Sync for Class","synthetic":true,"types":[]},{"text":"impl Sync for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl Sync for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl Sync for ClassSet","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetItem","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl Sync for AssertionKind","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Sync for GroupKind","synthetic":true,"types":[]},{"text":"impl Sync for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl Sync for Flag","synthetic":true,"types":[]},{"text":"impl Sync for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Parser","synthetic":true,"types":[]},{"text":"impl Sync for Printer","synthetic":true,"types":[]},{"text":"impl Sync for CaseFoldError","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Hir","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl Sync for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl Sync for Group","synthetic":true,"types":[]},{"text":"impl Sync for Repetition","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for HirKind","synthetic":true,"types":[]},{"text":"impl Sync for Literal","synthetic":true,"types":[]},{"text":"impl Sync for Class","synthetic":true,"types":[]},{"text":"impl Sync for Anchor","synthetic":true,"types":[]},{"text":"impl Sync for WordBoundary","synthetic":true,"types":[]},{"text":"impl Sync for GroupKind","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Sync for Literals","synthetic":true,"types":[]},{"text":"impl Sync for Literal","synthetic":true,"types":[]},{"text":"impl Sync for Printer","synthetic":true,"types":[]},{"text":"impl Sync for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Translator","synthetic":true,"types":[]},{"text":"impl Sync for Utf8Range","synthetic":true,"types":[]},{"text":"impl Sync for Utf8Sequences","synthetic":true,"types":[]},{"text":"impl Sync for Utf8Sequence","synthetic":true,"types":[]}];
implementors["rspirv"] = [{"text":"impl&lt;'a&gt; Sync for Decoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'd&gt; !Sync for Parser&lt;'c, 'd&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for Action","synthetic":true,"types":[]},{"text":"impl !Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for Block","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for Instruction","synthetic":true,"types":[]},{"text":"impl Sync for Module","synthetic":true,"types":[]},{"text":"impl Sync for ModuleHeader","synthetic":true,"types":[]},{"text":"impl Sync for Loader","synthetic":true,"types":[]},{"text":"impl Sync for InsertPoint","synthetic":true,"types":[]},{"text":"impl Sync for Operand","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for CoreInstructionTable","synthetic":true,"types":[]},{"text":"impl Sync for GlslStd450InstructionTable","synthetic":true,"types":[]},{"text":"impl Sync for OpenCLStd100InstructionTable","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ExtendedInstruction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Instruction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LogicalOperand","synthetic":true,"types":[]},{"text":"impl Sync for OperandKind","synthetic":true,"types":[]},{"text":"impl Sync for OperandQuantifier","synthetic":true,"types":[]},{"text":"impl Sync for LiftContext","synthetic":true,"types":[]},{"text":"impl Sync for OperandError","synthetic":true,"types":[]},{"text":"impl Sync for InstructionError","synthetic":true,"types":[]},{"text":"impl Sync for ConversionError","synthetic":true,"types":[]},{"text":"impl Sync for StructMember","synthetic":true,"types":[]},{"text":"impl Sync for Decoration","synthetic":true,"types":[]},{"text":"impl Sync for Constant","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for Extension","synthetic":true,"types":[]},{"text":"impl Sync for ExtInstImport","synthetic":true,"types":[]},{"text":"impl Sync for ExtInst","synthetic":true,"types":[]},{"text":"impl Sync for MemoryModel","synthetic":true,"types":[]},{"text":"impl Sync for EntryPoint","synthetic":true,"types":[]},{"text":"impl Sync for ExecutionMode","synthetic":true,"types":[]},{"text":"impl Sync for Capability","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for FunctionParameter","synthetic":true,"types":[]},{"text":"impl Sync for FunctionEnd","synthetic":true,"types":[]},{"text":"impl Sync for FunctionCall","synthetic":true,"types":[]},{"text":"impl Sync for ExecutionModeId","synthetic":true,"types":[]},{"text":"impl Sync for Branch","synthetic":true,"types":[]},{"text":"impl Sync for Terminator","synthetic":true,"types":[]},{"text":"impl Sync for Op","synthetic":true,"types":[]},{"text":"impl Sync for EntryPoint","synthetic":true,"types":[]},{"text":"impl Sync for Block","synthetic":true,"types":[]},{"text":"impl Sync for Jump","synthetic":true,"types":[]},{"text":"impl Sync for Function","synthetic":true,"types":[]},{"text":"impl Sync for Module","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Token&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Storage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl Sync for Curve","synthetic":true,"types":[]},{"text":"impl Sync for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Sync for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Sync for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Sync for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Codepoint","synthetic":true,"types":[]},{"text":"impl Sync for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl Sync for HMetrics","synthetic":true,"types":[]},{"text":"impl Sync for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; Sync for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Sync for LayoutIter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Segment","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Sync for Buffer","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Sync for Handle","synthetic":true,"types":[]}];
implementors["scoped_tls"] = [{"text":"impl&lt;T&gt; Sync for ScopedKey&lt;T&gt;","synthetic":false,"types":[]}];
implementors["scopeguard"] = [{"text":"impl Sync for Always","synthetic":true,"types":[]},{"text":"impl&lt;T, F, S&gt; Sync for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Strategy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Sync for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Sync for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Sync for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Sync for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Sync for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Sync for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Sync for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Sync for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; Sync for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Sync for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Sync for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Number","synthetic":true,"types":[]},{"text":"impl Sync for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CharEscape","synthetic":true,"types":[]},{"text":"impl Sync for Serializer","synthetic":true,"types":[]}];
implementors["sharded_slab"] = [{"text":"impl Sync for DefaultConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&gt; !Sync for PoolGuard&lt;'a, T, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&nbsp;=&nbsp;DefaultConfig&gt; !Sync for Guard&lt;'a, T, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, C&gt; Sync for Pool&lt;T, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync + Clear + Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Config,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync, C:&nbsp;Config&gt; Sync for Slab&lt;T, C&gt;","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Sync for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A&gt; Sync for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CollectionAllocErr","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync + Array&gt; Sync for Drain&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl Sync for Environment","synthetic":true,"types":[]},{"text":"impl Sync for Shell","synthetic":true,"types":[]},{"text":"impl Sync for DataDevice","synthetic":true,"types":[]},{"text":"impl Sync for DataOffer","synthetic":true,"types":[]},{"text":"impl Sync for ReadPipe","synthetic":true,"types":[]},{"text":"impl Sync for DataSource","synthetic":true,"types":[]},{"text":"impl Sync for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl Sync for ModifiersState","synthetic":true,"types":[]},{"text":"impl Sync for RMLVO","synthetic":true,"types":[]},{"text":"impl Sync for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl Sync for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Mode","synthetic":true,"types":[]},{"text":"impl Sync for OutputInfo","synthetic":true,"types":[]},{"text":"impl Sync for OutputMgr","synthetic":true,"types":[]},{"text":"impl Sync for ThemeManager","synthetic":true,"types":[]},{"text":"impl Sync for ThemedPointer","synthetic":true,"types":[]},{"text":"impl Sync for AutoThemer","synthetic":true,"types":[]},{"text":"impl Sync for AutoPointer","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl Sync for MemPool","synthetic":true,"types":[]},{"text":"impl !Sync for BasicFrame","synthetic":true,"types":[]},{"text":"impl !Sync for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ButtonState","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for FrameRequest","synthetic":true,"types":[]}];
implementors["spirv_builder"] = [{"text":"impl Sync for SpirvBuilder","synthetic":true,"types":[]},{"text":"impl Sync for SpirvBuilderError","synthetic":true,"types":[]},{"text":"impl Sync for MemoryModel","synthetic":true,"types":[]}];
implementors["spirv_headers"] = [{"text":"impl Sync for ImageOperands","synthetic":true,"types":[]},{"text":"impl Sync for FPFastMathMode","synthetic":true,"types":[]},{"text":"impl Sync for SelectionControl","synthetic":true,"types":[]},{"text":"impl Sync for LoopControl","synthetic":true,"types":[]},{"text":"impl Sync for FunctionControl","synthetic":true,"types":[]},{"text":"impl Sync for MemorySemantics","synthetic":true,"types":[]},{"text":"impl Sync for MemoryAccess","synthetic":true,"types":[]},{"text":"impl Sync for KernelProfilingInfo","synthetic":true,"types":[]},{"text":"impl Sync for RayFlags","synthetic":true,"types":[]},{"text":"impl Sync for SourceLanguage","synthetic":true,"types":[]},{"text":"impl Sync for ExecutionModel","synthetic":true,"types":[]},{"text":"impl Sync for AddressingModel","synthetic":true,"types":[]},{"text":"impl Sync for MemoryModel","synthetic":true,"types":[]},{"text":"impl Sync for ExecutionMode","synthetic":true,"types":[]},{"text":"impl Sync for StorageClass","synthetic":true,"types":[]},{"text":"impl Sync for Dim","synthetic":true,"types":[]},{"text":"impl Sync for SamplerAddressingMode","synthetic":true,"types":[]},{"text":"impl Sync for SamplerFilterMode","synthetic":true,"types":[]},{"text":"impl Sync for ImageFormat","synthetic":true,"types":[]},{"text":"impl Sync for ImageChannelOrder","synthetic":true,"types":[]},{"text":"impl Sync for ImageChannelDataType","synthetic":true,"types":[]},{"text":"impl Sync for FPRoundingMode","synthetic":true,"types":[]},{"text":"impl Sync for LinkageType","synthetic":true,"types":[]},{"text":"impl Sync for AccessQualifier","synthetic":true,"types":[]},{"text":"impl Sync for FunctionParameterAttribute","synthetic":true,"types":[]},{"text":"impl Sync for Decoration","synthetic":true,"types":[]},{"text":"impl Sync for BuiltIn","synthetic":true,"types":[]},{"text":"impl Sync for Scope","synthetic":true,"types":[]},{"text":"impl Sync for GroupOperation","synthetic":true,"types":[]},{"text":"impl Sync for KernelEnqueueFlags","synthetic":true,"types":[]},{"text":"impl Sync for Capability","synthetic":true,"types":[]},{"text":"impl Sync for RayQueryIntersection","synthetic":true,"types":[]},{"text":"impl Sync for RayQueryCommittedIntersectionType","synthetic":true,"types":[]},{"text":"impl Sync for RayQueryCandidateIntersectionType","synthetic":true,"types":[]},{"text":"impl Sync for Op","synthetic":true,"types":[]},{"text":"impl Sync for GLOp","synthetic":true,"types":[]},{"text":"impl Sync for CLOp","synthetic":true,"types":[]}];
implementors["spirv_std"] = [{"text":"impl&lt;'a, T&gt; Sync for UniformConstant&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Input&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Uniform&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Output&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Workgroup&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for CrossWorkgroup&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Private&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Function&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Generic&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for PushConstant&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for AtomicCounter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Image&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for StorageBuffer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for CallableDataKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IncomingCallableDataKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for RayPayloadKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for HitAttributeKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IncomingRayPayloadKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for ShaderRecordBufferKHR&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for PhysicalStorageBuffer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Mat2","synthetic":true,"types":[]},{"text":"impl Sync for Mat3","synthetic":true,"types":[]},{"text":"impl Sync for Mat4","synthetic":true,"types":[]},{"text":"impl Sync for Vec2","synthetic":true,"types":[]},{"text":"impl Sync for Vec3","synthetic":true,"types":[]},{"text":"impl Sync for Vec4","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; Sync for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for HMetrics","synthetic":true,"types":[]},{"text":"impl Sync for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; Sync for FontNameIter&lt;'a, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for VertexType","synthetic":true,"types":[]},{"text":"impl Sync for PlatformId","synthetic":true,"types":[]},{"text":"impl Sync for UnicodeEid","synthetic":true,"types":[]},{"text":"impl Sync for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl Sync for MacEid","synthetic":true,"types":[]},{"text":"impl Sync for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl Sync for MacLang","synthetic":true,"types":[]},{"text":"impl Sync for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl Sync for StrSimError","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !Sync for Attribute","synthetic":true,"types":[]},{"text":"impl !Sync for MetaList","synthetic":true,"types":[]},{"text":"impl !Sync for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !Sync for Field","synthetic":true,"types":[]},{"text":"impl !Sync for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !Sync for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !Sync for Variant","synthetic":true,"types":[]},{"text":"impl !Sync for VisCrate","synthetic":true,"types":[]},{"text":"impl !Sync for VisPublic","synthetic":true,"types":[]},{"text":"impl !Sync for VisRestricted","synthetic":true,"types":[]},{"text":"impl Sync for ExprArray","synthetic":true,"types":[]},{"text":"impl Sync for ExprAssign","synthetic":true,"types":[]},{"text":"impl Sync for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Sync for ExprAsync","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBinary","synthetic":true,"types":[]},{"text":"impl Sync for ExprBlock","synthetic":true,"types":[]},{"text":"impl Sync for ExprBox","synthetic":true,"types":[]},{"text":"impl Sync for ExprBreak","synthetic":true,"types":[]},{"text":"impl !Sync for ExprCall","synthetic":true,"types":[]},{"text":"impl !Sync for ExprCast","synthetic":true,"types":[]},{"text":"impl Sync for ExprClosure","synthetic":true,"types":[]},{"text":"impl Sync for ExprContinue","synthetic":true,"types":[]},{"text":"impl !Sync for ExprField","synthetic":true,"types":[]},{"text":"impl Sync for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Sync for ExprGroup","synthetic":true,"types":[]},{"text":"impl Sync for ExprIf","synthetic":true,"types":[]},{"text":"impl Sync for ExprInPlace","synthetic":true,"types":[]},{"text":"impl !Sync for ExprIndex","synthetic":true,"types":[]},{"text":"impl Sync for ExprLet","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLit","synthetic":true,"types":[]},{"text":"impl Sync for ExprLoop","synthetic":true,"types":[]},{"text":"impl Sync for ExprMacro","synthetic":true,"types":[]},{"text":"impl Sync for ExprMatch","synthetic":true,"types":[]},{"text":"impl Sync for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !Sync for ExprParen","synthetic":true,"types":[]},{"text":"impl !Sync for ExprPath","synthetic":true,"types":[]},{"text":"impl Sync for ExprRange","synthetic":true,"types":[]},{"text":"impl Sync for ExprReference","synthetic":true,"types":[]},{"text":"impl Sync for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Sync for ExprReturn","synthetic":true,"types":[]},{"text":"impl Sync for ExprStruct","synthetic":true,"types":[]},{"text":"impl Sync for ExprTry","synthetic":true,"types":[]},{"text":"impl Sync for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Sync for ExprTuple","synthetic":true,"types":[]},{"text":"impl Sync for ExprType","synthetic":true,"types":[]},{"text":"impl !Sync for ExprUnary","synthetic":true,"types":[]},{"text":"impl Sync for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !Sync for ExprVerbatim","synthetic":true,"types":[]},{"text":"impl Sync for ExprWhile","synthetic":true,"types":[]},{"text":"impl Sync for ExprYield","synthetic":true,"types":[]},{"text":"impl !Sync for Index","synthetic":true,"types":[]},{"text":"impl !Sync for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !Sync for ConstParam","synthetic":true,"types":[]},{"text":"impl !Sync for Generics","synthetic":true,"types":[]},{"text":"impl !Sync for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateEq","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateType","synthetic":true,"types":[]},{"text":"impl !Sync for TraitBound","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParam","synthetic":true,"types":[]},{"text":"impl !Sync for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Lifetime","synthetic":true,"types":[]},{"text":"impl !Sync for LitBool","synthetic":true,"types":[]},{"text":"impl !Sync for LitByte","synthetic":true,"types":[]},{"text":"impl !Sync for LitByteStr","synthetic":true,"types":[]},{"text":"impl !Sync for LitChar","synthetic":true,"types":[]},{"text":"impl !Sync for LitFloat","synthetic":true,"types":[]},{"text":"impl !Sync for LitInt","synthetic":true,"types":[]},{"text":"impl !Sync for LitStr","synthetic":true,"types":[]},{"text":"impl !Sync for LitVerbatim","synthetic":true,"types":[]},{"text":"impl !Sync for Macro","synthetic":true,"types":[]},{"text":"impl !Sync for DataEnum","synthetic":true,"types":[]},{"text":"impl !Sync for DataStruct","synthetic":true,"types":[]},{"text":"impl !Sync for DataUnion","synthetic":true,"types":[]},{"text":"impl !Sync for DeriveInput","synthetic":true,"types":[]},{"text":"impl !Sync for Abi","synthetic":true,"types":[]},{"text":"impl !Sync for BareFnArg","synthetic":true,"types":[]},{"text":"impl !Sync for TypeArray","synthetic":true,"types":[]},{"text":"impl !Sync for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !Sync for TypeGroup","synthetic":true,"types":[]},{"text":"impl !Sync for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !Sync for TypeInfer","synthetic":true,"types":[]},{"text":"impl !Sync for TypeMacro","synthetic":true,"types":[]},{"text":"impl !Sync for TypeNever","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParen","synthetic":true,"types":[]},{"text":"impl !Sync for TypePath","synthetic":true,"types":[]},{"text":"impl !Sync for TypePtr","synthetic":true,"types":[]},{"text":"impl !Sync for TypeReference","synthetic":true,"types":[]},{"text":"impl !Sync for TypeSlice","synthetic":true,"types":[]},{"text":"impl !Sync for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !Sync for TypeTuple","synthetic":true,"types":[]},{"text":"impl !Sync for TypeVerbatim","synthetic":true,"types":[]},{"text":"impl !Sync for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Binding","synthetic":true,"types":[]},{"text":"impl !Sync for Constraint","synthetic":true,"types":[]},{"text":"impl !Sync for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Path","synthetic":true,"types":[]},{"text":"impl !Sync for PathSegment","synthetic":true,"types":[]},{"text":"impl !Sync for QSelf","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for AttrStyle","synthetic":true,"types":[]},{"text":"impl !Sync for Meta","synthetic":true,"types":[]},{"text":"impl !Sync for NestedMeta","synthetic":true,"types":[]},{"text":"impl !Sync for Fields","synthetic":true,"types":[]},{"text":"impl !Sync for Visibility","synthetic":true,"types":[]},{"text":"impl !Sync for Expr","synthetic":true,"types":[]},{"text":"impl !Sync for Member","synthetic":true,"types":[]},{"text":"impl !Sync for GenericParam","synthetic":true,"types":[]},{"text":"impl !Sync for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !Sync for WherePredicate","synthetic":true,"types":[]},{"text":"impl Sync for FloatSuffix","synthetic":true,"types":[]},{"text":"impl Sync for IntSuffix","synthetic":true,"types":[]},{"text":"impl !Sync for Lit","synthetic":true,"types":[]},{"text":"impl Sync for StrStyle","synthetic":true,"types":[]},{"text":"impl !Sync for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !Sync for Data","synthetic":true,"types":[]},{"text":"impl !Sync for BinOp","synthetic":true,"types":[]},{"text":"impl !Sync for UnOp","synthetic":true,"types":[]},{"text":"impl !Sync for BareFnArgName","synthetic":true,"types":[]},{"text":"impl !Sync for ReturnType","synthetic":true,"types":[]},{"text":"impl !Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for GenericArgument","synthetic":true,"types":[]},{"text":"impl !Sync for PathArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Underscore","synthetic":true,"types":[]},{"text":"impl !Sync for Abstract","synthetic":true,"types":[]},{"text":"impl !Sync for As","synthetic":true,"types":[]},{"text":"impl !Sync for Async","synthetic":true,"types":[]},{"text":"impl !Sync for Auto","synthetic":true,"types":[]},{"text":"impl !Sync for Become","synthetic":true,"types":[]},{"text":"impl !Sync for Box","synthetic":true,"types":[]},{"text":"impl !Sync for Break","synthetic":true,"types":[]},{"text":"impl !Sync for Const","synthetic":true,"types":[]},{"text":"impl !Sync for Continue","synthetic":true,"types":[]},{"text":"impl !Sync for Crate","synthetic":true,"types":[]},{"text":"impl !Sync for Default","synthetic":true,"types":[]},{"text":"impl !Sync for Do","synthetic":true,"types":[]},{"text":"impl !Sync for Dyn","synthetic":true,"types":[]},{"text":"impl !Sync for Else","synthetic":true,"types":[]},{"text":"impl !Sync for Enum","synthetic":true,"types":[]},{"text":"impl !Sync for Existential","synthetic":true,"types":[]},{"text":"impl !Sync for Extern","synthetic":true,"types":[]},{"text":"impl !Sync for Final","synthetic":true,"types":[]},{"text":"impl !Sync for Fn","synthetic":true,"types":[]},{"text":"impl !Sync for For","synthetic":true,"types":[]},{"text":"impl !Sync for If","synthetic":true,"types":[]},{"text":"impl !Sync for Impl","synthetic":true,"types":[]},{"text":"impl !Sync for In","synthetic":true,"types":[]},{"text":"impl !Sync for Let","synthetic":true,"types":[]},{"text":"impl !Sync for Loop","synthetic":true,"types":[]},{"text":"impl !Sync for Macro","synthetic":true,"types":[]},{"text":"impl !Sync for Match","synthetic":true,"types":[]},{"text":"impl !Sync for Mod","synthetic":true,"types":[]},{"text":"impl !Sync for Move","synthetic":true,"types":[]},{"text":"impl !Sync for Mut","synthetic":true,"types":[]},{"text":"impl !Sync for Override","synthetic":true,"types":[]},{"text":"impl !Sync for Priv","synthetic":true,"types":[]},{"text":"impl !Sync for Pub","synthetic":true,"types":[]},{"text":"impl !Sync for Ref","synthetic":true,"types":[]},{"text":"impl !Sync for Return","synthetic":true,"types":[]},{"text":"impl !Sync for SelfType","synthetic":true,"types":[]},{"text":"impl !Sync for SelfValue","synthetic":true,"types":[]},{"text":"impl !Sync for Static","synthetic":true,"types":[]},{"text":"impl !Sync for Struct","synthetic":true,"types":[]},{"text":"impl !Sync for Super","synthetic":true,"types":[]},{"text":"impl !Sync for Trait","synthetic":true,"types":[]},{"text":"impl !Sync for Try","synthetic":true,"types":[]},{"text":"impl !Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for Typeof","synthetic":true,"types":[]},{"text":"impl !Sync for Union","synthetic":true,"types":[]},{"text":"impl !Sync for Unsafe","synthetic":true,"types":[]},{"text":"impl !Sync for Unsized","synthetic":true,"types":[]},{"text":"impl !Sync for Use","synthetic":true,"types":[]},{"text":"impl !Sync for Virtual","synthetic":true,"types":[]},{"text":"impl !Sync for Where","synthetic":true,"types":[]},{"text":"impl !Sync for While","synthetic":true,"types":[]},{"text":"impl !Sync for Yield","synthetic":true,"types":[]},{"text":"impl !Sync for Add","synthetic":true,"types":[]},{"text":"impl !Sync for AddEq","synthetic":true,"types":[]},{"text":"impl !Sync for And","synthetic":true,"types":[]},{"text":"impl !Sync for AndAnd","synthetic":true,"types":[]},{"text":"impl !Sync for AndEq","synthetic":true,"types":[]},{"text":"impl !Sync for At","synthetic":true,"types":[]},{"text":"impl !Sync for Bang","synthetic":true,"types":[]},{"text":"impl !Sync for Caret","synthetic":true,"types":[]},{"text":"impl !Sync for CaretEq","synthetic":true,"types":[]},{"text":"impl !Sync for Colon","synthetic":true,"types":[]},{"text":"impl !Sync for Colon2","synthetic":true,"types":[]},{"text":"impl !Sync for Comma","synthetic":true,"types":[]},{"text":"impl !Sync for Div","synthetic":true,"types":[]},{"text":"impl !Sync for DivEq","synthetic":true,"types":[]},{"text":"impl !Sync for Dollar","synthetic":true,"types":[]},{"text":"impl !Sync for Dot","synthetic":true,"types":[]},{"text":"impl !Sync for Dot2","synthetic":true,"types":[]},{"text":"impl !Sync for Dot3","synthetic":true,"types":[]},{"text":"impl !Sync for DotDotEq","synthetic":true,"types":[]},{"text":"impl !Sync for Eq","synthetic":true,"types":[]},{"text":"impl !Sync for EqEq","synthetic":true,"types":[]},{"text":"impl !Sync for Ge","synthetic":true,"types":[]},{"text":"impl !Sync for Gt","synthetic":true,"types":[]},{"text":"impl !Sync for Le","synthetic":true,"types":[]},{"text":"impl !Sync for Lt","synthetic":true,"types":[]},{"text":"impl !Sync for MulEq","synthetic":true,"types":[]},{"text":"impl !Sync for Ne","synthetic":true,"types":[]},{"text":"impl !Sync for Or","synthetic":true,"types":[]},{"text":"impl !Sync for OrEq","synthetic":true,"types":[]},{"text":"impl !Sync for OrOr","synthetic":true,"types":[]},{"text":"impl !Sync for Pound","synthetic":true,"types":[]},{"text":"impl !Sync for Question","synthetic":true,"types":[]},{"text":"impl !Sync for RArrow","synthetic":true,"types":[]},{"text":"impl !Sync for LArrow","synthetic":true,"types":[]},{"text":"impl !Sync for Rem","synthetic":true,"types":[]},{"text":"impl !Sync for RemEq","synthetic":true,"types":[]},{"text":"impl !Sync for FatArrow","synthetic":true,"types":[]},{"text":"impl !Sync for Semi","synthetic":true,"types":[]},{"text":"impl !Sync for Shl","synthetic":true,"types":[]},{"text":"impl !Sync for ShlEq","synthetic":true,"types":[]},{"text":"impl !Sync for Shr","synthetic":true,"types":[]},{"text":"impl !Sync for ShrEq","synthetic":true,"types":[]},{"text":"impl !Sync for Star","synthetic":true,"types":[]},{"text":"impl !Sync for Sub","synthetic":true,"types":[]},{"text":"impl !Sync for SubEq","synthetic":true,"types":[]},{"text":"impl !Sync for Tilde","synthetic":true,"types":[]},{"text":"impl !Sync for Brace","synthetic":true,"types":[]},{"text":"impl !Sync for Bracket","synthetic":true,"types":[]},{"text":"impl !Sync for Paren","synthetic":true,"types":[]},{"text":"impl !Sync for Group","synthetic":true,"types":[]},{"text":"impl !Sync for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Sync for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Sync for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for IntoIter&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !Sync for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]}];
implementors["tar"] = [{"text":"impl&lt;R&gt; !Sync for Archive&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !Sync for Entries&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for Builder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !Sync for Entry&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GnuExtSparseHeader","synthetic":true,"types":[]},{"text":"impl Sync for GnuHeader","synthetic":true,"types":[]},{"text":"impl Sync for GnuSparseHeader","synthetic":true,"types":[]},{"text":"impl Sync for Header","synthetic":true,"types":[]},{"text":"impl Sync for OldHeader","synthetic":true,"types":[]},{"text":"impl Sync for UstarHeader","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; Sync for PaxExtension&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'entry&gt; Sync for PaxExtensions&lt;'entry&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Unpacked","synthetic":true,"types":[]},{"text":"impl Sync for EntryType","synthetic":true,"types":[]},{"text":"impl Sync for HeaderMode","synthetic":true,"types":[]}];
implementors["tempfile"] = [{"text":"impl Sync for TempDir","synthetic":true,"types":[]},{"text":"impl Sync for NamedTempFile","synthetic":true,"types":[]},{"text":"impl Sync for PathPersistError","synthetic":true,"types":[]},{"text":"impl Sync for PersistError","synthetic":true,"types":[]},{"text":"impl Sync for TempPath","synthetic":true,"types":[]},{"text":"impl Sync for SpooledTempFile","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Sync for Builder&lt;'a, 'b&gt;","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl Sync for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl Sync for NoHyphenation","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Sync for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Sync for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; Sync for WrapIter&lt;'w, 'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !Sync for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for CachedThreadLocal&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for ThreadLocal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Sync for Duration","synthetic":true,"types":[]},{"text":"impl Sync for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Sync for Timespec","synthetic":true,"types":[]},{"text":"impl Sync for PreciseTime","synthetic":true,"types":[]},{"text":"impl Sync for SteadyTime","synthetic":true,"types":[]},{"text":"impl Sync for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]}];
implementors["topological_sort"] = [{"text":"impl&lt;T&gt; Sync for TopologicalSort&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DependencyLink&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl Sync for Span","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for WithDispatch&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Entered&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Sync for Dispatch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Field","synthetic":true,"types":[]},{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl Sync for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Identifier","synthetic":true,"types":[]},{"text":"impl Sync for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Sync for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl Sync for Empty","synthetic":true,"types":[]},{"text":"impl Sync for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Kind","synthetic":true,"types":[]},{"text":"impl Sync for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl Sync for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Sync for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Current","synthetic":true,"types":[]},{"text":"impl Sync for Interest","synthetic":true,"types":[]}];
implementors["tracing_log"] = [{"text":"impl Sync for LogTracer","synthetic":true,"types":[]},{"text":"impl Sync for TraceLogger","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]}];
implementors["tracing_serde"] = [{"text":"impl Sync for SerializeField","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SerializeFieldSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SerializeLevel&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SerializeId&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SerializeMetadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SerializeEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SerializeAttributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SerializeRecord&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SerdeMapVisitor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as SerializeMap&gt;::Error: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SerdeStructVisitor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as SerializeStruct&gt;::Error: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for SerializeFieldMap&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing_subscriber"] = [{"text":"impl Sync for EnvFilter","synthetic":true,"types":[]},{"text":"impl Sync for Registry","synthetic":true,"types":[]},{"text":"impl Sync for CurrentSpan","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for Alt&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, V&gt; Sync for Delimited&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, V&gt; Sync for VisitDelimited&lt;D, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for Messages&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Directive","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for BadName","synthetic":true,"types":[]},{"text":"impl Sync for FromEnvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, N&gt; Sync for FmtContext&lt;'a, S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FormattedFields&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, N, E, W&gt; Sync for Layer&lt;S, N, E, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TestWriter","synthetic":true,"types":[]},{"text":"impl&lt;N, E, F, W&gt; Sync for Subscriber&lt;N, E, F, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, F, W&gt; Sync for SubscriberBuilder&lt;N, E, F, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Json","synthetic":true,"types":[]},{"text":"impl Sync for JsonFields","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for JsonVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for FieldFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; !Sync for FieldFnVisitor&lt;'a, F&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Compact","synthetic":true,"types":[]},{"text":"impl Sync for Full","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Sync for Format&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DefaultFields","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DefaultVisitor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FmtSpan","synthetic":true,"types":[]},{"text":"impl Sync for SystemTime","synthetic":true,"types":[]},{"text":"impl Sync for Uptime","synthetic":true,"types":[]},{"text":"impl Sync for ChronoUtc","synthetic":true,"types":[]},{"text":"impl Sync for ChronoLocal","synthetic":true,"types":[]},{"text":"impl Sync for BoxMakeWriter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Sync for Context&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, I, S&gt; Sync for Layered&lt;L, I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Identity","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; Sync for Scope&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;L as LookupSpan&lt;'a&gt;&gt;::Data: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Extensions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ExtensionsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Data&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for SpanRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as LookupSpan&lt;'a&gt;&gt;::Data: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for Parents&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for FromRoot&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as LookupSpan&lt;'a&gt;&gt;::Data: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, S&gt; Sync for Layer&lt;L, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, S&gt; Sync for Handle&lt;L, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for TryInitError","synthetic":true,"types":[]}];
implementors["ttf_parser"] = [{"text":"impl&lt;'a&gt; Sync for VariationAxes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for VariationAxis","synthetic":true,"types":[]},{"text":"impl Sync for Class","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Names&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ScriptMetrics","synthetic":true,"types":[]},{"text":"impl Sync for GlyphId","synthetic":true,"types":[]},{"text":"impl Sync for Variation","synthetic":true,"types":[]},{"text":"impl Sync for Tag","synthetic":true,"types":[]},{"text":"impl Sync for LineMetrics","synthetic":true,"types":[]},{"text":"impl Sync for Rect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RasterGlyphImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GlyphClass","synthetic":true,"types":[]},{"text":"impl Sync for PlatformId","synthetic":true,"types":[]},{"text":"impl Sync for Weight","synthetic":true,"types":[]},{"text":"impl Sync for Width","synthetic":true,"types":[]},{"text":"impl Sync for RasterImageFormat","synthetic":true,"types":[]},{"text":"impl Sync for TableName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Subtable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Subtables&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for ValueOffset","synthetic":true,"types":[]},{"text":"impl Sync for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Machine&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["typed_arena"] = [{"text":"impl&lt;T&gt; !Sync for Arena&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Sync for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GraphemeCursor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UWordBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UWordBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UnicodeWords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for USentenceBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for USentenceBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UnicodeSentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GraphemeIncomplete","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Sync for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for VacantEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for OccupiedEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for Iter&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for IterMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for Keys&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for Values&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for ValuesMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for Drain&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Sync for Entry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["void"] = [{"text":"impl Sync for Void","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl Sync for DirEntry","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for WalkDir","synthetic":true,"types":[]},{"text":"impl Sync for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Sync for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Sync for Display","synthetic":true,"types":[]},{"text":"impl Sync for ProtocolError","synthetic":true,"types":[]},{"text":"impl !Sync for EventQueue","synthetic":true,"types":[]},{"text":"impl !Sync for QueueToken","synthetic":true,"types":[]},{"text":"impl !Sync for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl Sync for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !Sync for NewProxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Proxy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AnonymousObject","synthetic":true,"types":[]},{"text":"impl Sync for ConnectError","synthetic":true,"types":[]},{"text":"impl Sync for GlobalError","synthetic":true,"types":[]},{"text":"impl Sync for GlobalEvent","synthetic":true,"types":[]},{"text":"impl Sync for ProxyMap","synthetic":true,"types":[]},{"text":"impl !Sync for CursorTheme","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CursorImageBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for BlockingMsgIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for WlDisplay","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlRegistry","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlCallback","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlCompositor","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlShmPool","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlShm","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Format","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlBuffer","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlDataOffer","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlDataSource","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlDataDevice","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for DndAction","synthetic":true,"types":[]},{"text":"impl Sync for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlShell","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Resize","synthetic":true,"types":[]},{"text":"impl Sync for Transient","synthetic":true,"types":[]},{"text":"impl Sync for WlShellSurface","synthetic":true,"types":[]},{"text":"impl Sync for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlSurface","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Capability","synthetic":true,"types":[]},{"text":"impl Sync for WlSeat","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlPointer","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for ButtonState","synthetic":true,"types":[]},{"text":"impl Sync for Axis","synthetic":true,"types":[]},{"text":"impl Sync for AxisSource","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlKeyboard","synthetic":true,"types":[]},{"text":"impl Sync for KeymapFormat","synthetic":true,"types":[]},{"text":"impl Sync for KeyState","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlTouch","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Mode","synthetic":true,"types":[]},{"text":"impl Sync for WlOutput","synthetic":true,"types":[]},{"text":"impl Sync for Subpixel","synthetic":true,"types":[]},{"text":"impl Sync for Transform","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlRegion","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlSubsurface","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WlEglSurface","synthetic":false,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl Sync for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DispatchData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Sync for Filter&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Sync for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Sync for ObjectMap&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Socket","synthetic":true,"types":[]},{"text":"impl Sync for BufferedSocket","synthetic":true,"types":[]},{"text":"impl Sync for UserDataMap","synthetic":true,"types":[]},{"text":"impl Sync for MessageDesc","synthetic":true,"types":[]},{"text":"impl Sync for Message","synthetic":true,"types":[]},{"text":"impl Sync for ArgumentType","synthetic":true,"types":[]},{"text":"impl Sync for Argument","synthetic":true,"types":[]},{"text":"impl Sync for MessageWriteError","synthetic":true,"types":[]},{"text":"impl Sync for MessageParseError","synthetic":true,"types":[]},{"text":"impl Sync for UserData","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for ThreadGuard&lt;T&gt;","synthetic":false,"types":[]}];
implementors["wayland_cursor"] = [{"text":"impl !Sync for CursorTheme","synthetic":true,"types":[]},{"text":"impl Sync for Cursor","synthetic":true,"types":[]},{"text":"impl Sync for CursorImageBuffer","synthetic":true,"types":[]},{"text":"impl Sync for FrameAndDuration","synthetic":true,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl Sync for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl Sync for Capability","synthetic":true,"types":[]},{"text":"impl Sync for PresentMethod","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl Sync for Position","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Lifetime","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for Capability","synthetic":true,"types":[]},{"text":"impl Sync for ButtonState","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for Capability","synthetic":true,"types":[]},{"text":"impl Sync for ButtonState","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl Sync for Source","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl Sync for Source","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl Sync for ButtonState","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl Sync for ContentHint","synthetic":true,"types":[]},{"text":"impl Sync for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Sync for PreeditStyle","synthetic":true,"types":[]},{"text":"impl Sync for TextDirection","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ContentHint","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl Sync for ChangeCause","synthetic":true,"types":[]},{"text":"impl Sync for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Mode","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for XdgShell","synthetic":true,"types":[]},{"text":"impl Sync for Version","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for XdgSurface","synthetic":true,"types":[]},{"text":"impl Sync for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for XdgPopup","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Anchor","synthetic":true,"types":[]},{"text":"impl Sync for Gravity","synthetic":true,"types":[]},{"text":"impl Sync for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl Sync for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for GtkPrimarySelectionDeviceManager","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for GtkPrimarySelectionDevice","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for GtkPrimarySelectionOffer","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for GtkPrimarySelectionSource","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl Sync for CancelReason","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Layer","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Anchor","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl Sync for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WpPresentation","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl Sync for Kind","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for XdgWmBase","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Sync for XdgPositioner","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Anchor","synthetic":true,"types":[]},{"text":"impl Sync for Gravity","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for XdgSurface","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for XdgToplevel","synthetic":true,"types":[]},{"text":"impl Sync for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for XdgPopup","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WpViewporter","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for WpViewport","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Request","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl !Sync for wl_message","synthetic":true,"types":[]},{"text":"impl !Sync for wl_interface","synthetic":true,"types":[]},{"text":"impl !Sync for wl_list","synthetic":true,"types":[]},{"text":"impl !Sync for wl_array","synthetic":true,"types":[]},{"text":"impl !Sync for wl_argument","synthetic":true,"types":[]},{"text":"impl Sync for wl_proxy","synthetic":true,"types":[]},{"text":"impl Sync for wl_display","synthetic":true,"types":[]},{"text":"impl Sync for wl_event_queue","synthetic":true,"types":[]},{"text":"impl !Sync for wl_listener","synthetic":true,"types":[]},{"text":"impl !Sync for wl_signal","synthetic":true,"types":[]},{"text":"impl Sync for wl_client","synthetic":true,"types":[]},{"text":"impl Sync for wl_display","synthetic":true,"types":[]},{"text":"impl Sync for wl_event_loop","synthetic":true,"types":[]},{"text":"impl Sync for wl_event_source","synthetic":true,"types":[]},{"text":"impl Sync for wl_global","synthetic":true,"types":[]},{"text":"impl Sync for wl_resource","synthetic":true,"types":[]},{"text":"impl Sync for wl_shm_buffer","synthetic":true,"types":[]}];
implementors["wgpu"] = [{"text":"impl Sync for Instance","synthetic":true,"types":[]},{"text":"impl Sync for Adapter","synthetic":true,"types":[]},{"text":"impl Sync for Device","synthetic":true,"types":[]},{"text":"impl Sync for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BufferSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Texture","synthetic":true,"types":[]},{"text":"impl Sync for TextureView","synthetic":true,"types":[]},{"text":"impl Sync for Sampler","synthetic":true,"types":[]},{"text":"impl Sync for Surface","synthetic":true,"types":[]},{"text":"impl Sync for SwapChain","synthetic":true,"types":[]},{"text":"impl Sync for BindGroupLayout","synthetic":true,"types":[]},{"text":"impl Sync for BindGroup","synthetic":true,"types":[]},{"text":"impl Sync for ShaderModule","synthetic":true,"types":[]},{"text":"impl Sync for PipelineLayout","synthetic":true,"types":[]},{"text":"impl Sync for RenderPipeline","synthetic":true,"types":[]},{"text":"impl Sync for ComputePipeline","synthetic":true,"types":[]},{"text":"impl Sync for CommandBuffer","synthetic":true,"types":[]},{"text":"impl !Sync for CommandEncoder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderPass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ComputePass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RenderBundleEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RenderBundle","synthetic":true,"types":[]},{"text":"impl Sync for Queue","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for Operations&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RenderPassColorAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RenderPassDepthStencilAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CommandEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RenderBundleDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TextureDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Sync for RenderPassDescriptor&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SwapChainTexture","synthetic":true,"types":[]},{"text":"impl Sync for SwapChainFrame","synthetic":true,"types":[]},{"text":"impl Sync for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl Sync for BufferAsyncError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BufferView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BufferViewMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Maintain","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for LoadOp&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SwapChainError","synthetic":true,"types":[]},{"text":"impl Sync for MapMode","synthetic":true,"types":[]},{"text":"impl !Sync for StagingBelt","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BufferInitDescriptor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl Sync for BindingTypeMaxCountError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for BindGroupLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for PipelineLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for BufferBinding","synthetic":true,"types":[]},{"text":"impl Sync for BindGroupDynamicBindingData","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for BindGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CreateBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl Sync for CreateBindGroupError","synthetic":true,"types":[]},{"text":"impl Sync for BindingZone","synthetic":true,"types":[]},{"text":"impl Sync for BindingTypeMaxCountErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for CreatePipelineLayoutError","synthetic":true,"types":[]},{"text":"impl Sync for PushConstantUploadError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BindError","synthetic":true,"types":[]},{"text":"impl Sync for GetBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RenderBundleEncoder","synthetic":true,"types":[]},{"text":"impl Sync for ComputePass","synthetic":true,"types":[]},{"text":"impl Sync for ComputePassDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Sync for PassChannel&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ColorAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for DepthStencilAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RenderPassDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for CommandBuffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; Sync for BasePassRef&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CommandAllocatorError","synthetic":true,"types":[]},{"text":"impl Sync for CreateRenderBundleError","synthetic":true,"types":[]},{"text":"impl Sync for RenderBundleError","synthetic":true,"types":[]},{"text":"impl Sync for DispatchError","synthetic":true,"types":[]},{"text":"impl Sync for ComputePassError","synthetic":true,"types":[]},{"text":"impl Sync for DrawError","synthetic":true,"types":[]},{"text":"impl Sync for RenderCommandError","synthetic":true,"types":[]},{"text":"impl Sync for LoadOp","synthetic":true,"types":[]},{"text":"impl Sync for StoreOp","synthetic":true,"types":[]},{"text":"impl Sync for RenderPassError","synthetic":true,"types":[]},{"text":"impl Sync for TransferError","synthetic":true,"types":[]},{"text":"impl Sync for CopyError","synthetic":true,"types":[]},{"text":"impl Sync for CommandEncoderError","synthetic":true,"types":[]},{"text":"impl Sync for UsageConflict","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Device&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for InvalidDevice","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; Sync for ImplicitPipelineIds&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for HostMap","synthetic":true,"types":[]},{"text":"impl Sync for CreateDeviceError","synthetic":true,"types":[]},{"text":"impl Sync for DeviceError","synthetic":true,"types":[]},{"text":"impl Sync for IdentityManager","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Sync for Storage&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Token&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for IdentityManagerFactory","synthetic":true,"types":[]},{"text":"impl&lt;T, I, F&gt; Sync for Registry&lt;T, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;I&gt;&gt;::Filter: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, F&gt; Sync for Hub&lt;B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;B as Backend&gt;::Surface as PresentationSurface&lt;B&gt;&gt;::SwapchainImage: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Hubs&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Sync for Global&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Surface&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Root","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Id&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Instance","synthetic":true,"types":[]},{"text":"impl Sync for Surface","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AdapterInfo","synthetic":true,"types":[]},{"text":"impl Sync for InvalidAdapter","synthetic":true,"types":[]},{"text":"impl Sync for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl Sync for DeviceType","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Sync for AdapterInputs&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RequestAdapterError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for ShaderModule&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for ComputePipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PipelineFlags","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for RenderPipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CreateShaderModuleError","synthetic":true,"types":[]},{"text":"impl Sync for ImplicitLayoutError","synthetic":true,"types":[]},{"text":"impl Sync for CreateComputePipelineError","synthetic":true,"types":[]},{"text":"impl Sync for CreateRenderPipelineError","synthetic":true,"types":[]},{"text":"impl Sync for BufferUse","synthetic":true,"types":[]},{"text":"impl Sync for TextureUse","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Buffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Texture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for TextureView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;B as Backend&gt;::Surface as PresentationSurface&lt;B&gt;&gt;::SwapchainImage: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Sampler&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for BufferMapAsyncStatus","synthetic":true,"types":[]},{"text":"impl Sync for BufferAccessError","synthetic":true,"types":[]},{"text":"impl Sync for CreateBufferError","synthetic":true,"types":[]},{"text":"impl Sync for TextureDimensionError","synthetic":true,"types":[]},{"text":"impl Sync for CreateTextureError","synthetic":true,"types":[]},{"text":"impl Sync for CreateTextureViewError","synthetic":true,"types":[]},{"text":"impl Sync for TextureViewDestroyError","synthetic":true,"types":[]},{"text":"impl Sync for CreateSamplerError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for SwapChain&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SwapChainOutput","synthetic":true,"types":[]},{"text":"impl Sync for InvalidSwapChain","synthetic":true,"types":[]},{"text":"impl Sync for SwapChainError","synthetic":true,"types":[]},{"text":"impl Sync for CreateSwapChainError","synthetic":true,"types":[]},{"text":"impl Sync for RenderBundle","synthetic":false,"types":[]},{"text":"impl Sync for BufferMapOperation","synthetic":false,"types":[]}];
implementors["wgpu_subscriber"] = [{"text":"impl Sync for ChromeTracingLayer","synthetic":true,"types":[]},{"text":"impl Sync for FmtLayer","synthetic":true,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl Sync for BackendBit","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for RequestAdapterOptions&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Features","synthetic":true,"types":[]},{"text":"impl Sync for Limits","synthetic":true,"types":[]},{"text":"impl Sync for DeviceDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ShaderStage","synthetic":true,"types":[]},{"text":"impl Sync for BlendDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ColorStateDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for RasterizationStateDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ColorWrite","synthetic":true,"types":[]},{"text":"impl Sync for StencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for DepthStencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for StencilStateFaceDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for VertexAttributeDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Sync for BufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Sync for CommandEncoderDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TextureUsage","synthetic":true,"types":[]},{"text":"impl Sync for SwapChainDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for Color","synthetic":true,"types":[]},{"text":"impl Sync for Origin3d","synthetic":true,"types":[]},{"text":"impl Sync for Extent3d","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Sync for TextureDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Sync for CommandBufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Sync for RenderBundleDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TextureDataLayout","synthetic":true,"types":[]},{"text":"impl Sync for BindGroupLayoutEntry","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for BufferCopyView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TextureCopyView&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Backend","synthetic":true,"types":[]},{"text":"impl Sync for PowerPreference","synthetic":true,"types":[]},{"text":"impl Sync for TextureViewDimension","synthetic":true,"types":[]},{"text":"impl Sync for BlendFactor","synthetic":true,"types":[]},{"text":"impl Sync for BlendOperation","synthetic":true,"types":[]},{"text":"impl Sync for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl Sync for FrontFace","synthetic":true,"types":[]},{"text":"impl Sync for CullMode","synthetic":true,"types":[]},{"text":"impl Sync for TextureFormat","synthetic":true,"types":[]},{"text":"impl Sync for IndexFormat","synthetic":true,"types":[]},{"text":"impl Sync for StencilOperation","synthetic":true,"types":[]},{"text":"impl Sync for CompareFunction","synthetic":true,"types":[]},{"text":"impl Sync for InputStepMode","synthetic":true,"types":[]},{"text":"impl Sync for VertexFormat","synthetic":true,"types":[]},{"text":"impl Sync for PresentMode","synthetic":true,"types":[]},{"text":"impl Sync for SwapChainStatus","synthetic":true,"types":[]},{"text":"impl Sync for TextureDimension","synthetic":true,"types":[]},{"text":"impl Sync for TextureAspect","synthetic":true,"types":[]},{"text":"impl Sync for AddressMode","synthetic":true,"types":[]},{"text":"impl Sync for FilterMode","synthetic":true,"types":[]},{"text":"impl Sync for TextureComponentType","synthetic":true,"types":[]},{"text":"impl Sync for BindingType","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl&lt;P&gt; Sync for LogicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for PhysicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for LogicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Sync for PhysicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Size","synthetic":true,"types":[]},{"text":"impl Sync for Position","synthetic":true,"types":[]},{"text":"impl Sync for NotSupportedError","synthetic":true,"types":[]},{"text":"impl Sync for OsError","synthetic":true,"types":[]},{"text":"impl Sync for ExternalError","synthetic":true,"types":[]},{"text":"impl Sync for DeviceId","synthetic":true,"types":[]},{"text":"impl Sync for KeyboardInput","synthetic":true,"types":[]},{"text":"impl Sync for Touch","synthetic":true,"types":[]},{"text":"impl Sync for ModifiersState","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Event&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for StartCause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for WindowEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DeviceEvent","synthetic":true,"types":[]},{"text":"impl Sync for TouchPhase","synthetic":true,"types":[]},{"text":"impl Sync for Force","synthetic":true,"types":[]},{"text":"impl Sync for ElementState","synthetic":true,"types":[]},{"text":"impl Sync for MouseButton","synthetic":true,"types":[]},{"text":"impl Sync for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl Sync for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for EventLoop&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for EventLoopWindowTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for EventLoopProxy&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for EventLoopClosed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ControlFlow","synthetic":true,"types":[]},{"text":"impl Sync for Icon","synthetic":true,"types":[]},{"text":"impl Sync for BadIcon","synthetic":true,"types":[]},{"text":"impl Sync for VideoMode","synthetic":true,"types":[]},{"text":"impl Sync for MonitorHandle","synthetic":true,"types":[]},{"text":"impl Sync for WindowType","synthetic":true,"types":[]},{"text":"impl Sync for XNotSupported","synthetic":true,"types":[]},{"text":"impl Sync for Window","synthetic":true,"types":[]},{"text":"impl Sync for WindowId","synthetic":true,"types":[]},{"text":"impl !Sync for WindowBuilder","synthetic":true,"types":[]},{"text":"impl Sync for WindowAttributes","synthetic":true,"types":[]},{"text":"impl Sync for CursorIcon","synthetic":true,"types":[]},{"text":"impl Sync for Fullscreen","synthetic":true,"types":[]},{"text":"impl Sync for Theme","synthetic":true,"types":[]},{"text":"impl Sync for ButtonState","synthetic":true,"types":[]}];
implementors["x11"] = [{"text":"impl Sync for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl Sync for XcmsColor","synthetic":true,"types":[]},{"text":"impl Sync for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl Sync for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl Sync for _XkbAction","synthetic":true,"types":[]},{"text":"impl Sync for _XkbBounds","synthetic":true,"types":[]},{"text":"impl Sync for _XkbChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbColor","synthetic":true,"types":[]},{"text":"impl Sync for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl Sync for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl Sync for _XkbControls","synthetic":true,"types":[]},{"text":"impl Sync for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl Sync for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl Sync for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl Sync for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl Sync for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl Sync for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl Sync for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl Sync for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbKey","synthetic":true,"types":[]},{"text":"impl Sync for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl Sync for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbMods","synthetic":true,"types":[]},{"text":"impl Sync for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl Sync for _XkbOutline","synthetic":true,"types":[]},{"text":"impl Sync for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl Sync for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl Sync for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl Sync for _XkbProperty","synthetic":true,"types":[]},{"text":"impl Sync for _XkbRow","synthetic":true,"types":[]},{"text":"impl Sync for _XkbSection","synthetic":true,"types":[]},{"text":"impl Sync for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbShape","synthetic":true,"types":[]},{"text":"impl Sync for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl !Sync for XAnyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XButtonEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XColormapEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XErrorEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XExposeEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XGravityEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XKeyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XMapEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XMappingEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XMotionEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XReparentEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbDesc","synthetic":true,"types":[]},{"text":"impl Sync for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl !Sync for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl Sync for XkbEvent","synthetic":true,"types":[]},{"text":"impl !Sync for Depth","synthetic":true,"types":[]},{"text":"impl !Sync for Screen","synthetic":true,"types":[]},{"text":"impl !Sync for ScreenFormat","synthetic":true,"types":[]},{"text":"impl !Sync for Visual","synthetic":true,"types":[]},{"text":"impl Sync for XArc","synthetic":true,"types":[]},{"text":"impl Sync for XChar2b","synthetic":true,"types":[]},{"text":"impl Sync for XCharStruct","synthetic":true,"types":[]},{"text":"impl !Sync for XClassHint","synthetic":true,"types":[]},{"text":"impl Sync for XColor","synthetic":true,"types":[]},{"text":"impl !Sync for XComposeStatus","synthetic":true,"types":[]},{"text":"impl Sync for XExtCodes","synthetic":true,"types":[]},{"text":"impl !Sync for XExtData","synthetic":true,"types":[]},{"text":"impl Sync for XFontProp","synthetic":true,"types":[]},{"text":"impl Sync for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl !Sync for XFontStruct","synthetic":true,"types":[]},{"text":"impl Sync for XGCValues","synthetic":true,"types":[]},{"text":"impl !Sync for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl !Sync for XHostAddress","synthetic":true,"types":[]},{"text":"impl Sync for XIconSize","synthetic":true,"types":[]},{"text":"impl !Sync for XImage","synthetic":true,"types":[]},{"text":"impl Sync for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl Sync for XKeyboardState","synthetic":true,"types":[]},{"text":"impl !Sync for XmbTextItem","synthetic":true,"types":[]},{"text":"impl !Sync for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl !Sync for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl Sync for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl Sync for XPoint","synthetic":true,"types":[]},{"text":"impl Sync for XRectangle","synthetic":true,"types":[]},{"text":"impl !Sync for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl !Sync for XrmValue","synthetic":true,"types":[]},{"text":"impl Sync for XSegment","synthetic":true,"types":[]},{"text":"impl Sync for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl Sync for XSizeHints","synthetic":true,"types":[]},{"text":"impl Sync for XStandardColormap","synthetic":true,"types":[]},{"text":"impl !Sync for XTextItem","synthetic":true,"types":[]},{"text":"impl !Sync for XTextItem16","synthetic":true,"types":[]},{"text":"impl !Sync for XTextProperty","synthetic":true,"types":[]},{"text":"impl Sync for XTimeCoord","synthetic":true,"types":[]},{"text":"impl !Sync for XVisualInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XwcTextItem","synthetic":true,"types":[]},{"text":"impl !Sync for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl Sync for XWindowChanges","synthetic":true,"types":[]},{"text":"impl Sync for XWMHints","synthetic":true,"types":[]},{"text":"impl !Sync for XIMCallback","synthetic":true,"types":[]},{"text":"impl !Sync for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl Sync for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl !Sync for XIMText","synthetic":true,"types":[]},{"text":"impl !Sync for XICCallback","synthetic":true,"types":[]},{"text":"impl Sync for AspectRatio","synthetic":true,"types":[]},{"text":"impl Sync for ClientMessageData","synthetic":true,"types":[]},{"text":"impl Sync for ImageFns","synthetic":true,"types":[]},{"text":"impl !Sync for XEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIMTextString","synthetic":true,"types":[]},{"text":"impl Sync for _XDisplay","synthetic":true,"types":[]},{"text":"impl Sync for xError","synthetic":true,"types":[]},{"text":"impl Sync for xEvent","synthetic":true,"types":[]},{"text":"impl Sync for _XGC","synthetic":true,"types":[]},{"text":"impl Sync for _XIC","synthetic":true,"types":[]},{"text":"impl Sync for _XIM","synthetic":true,"types":[]},{"text":"impl Sync for _XRegion","synthetic":true,"types":[]},{"text":"impl Sync for _XOC","synthetic":true,"types":[]},{"text":"impl Sync for _XOM","synthetic":true,"types":[]},{"text":"impl Sync for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl Sync for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl Sync for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl Sync for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl Sync for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl Sync for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl Sync for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorComment","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorComments","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorFile","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl Sync for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorImage","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorImages","synthetic":true,"types":[]},{"text":"impl Sync for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl !Sync for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl !Sync for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl Sync for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl !Sync for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XftFont","synthetic":true,"types":[]},{"text":"impl Sync for XftColor","synthetic":true,"types":[]},{"text":"impl Sync for XftCharSpec","synthetic":true,"types":[]},{"text":"impl !Sync for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl !Sync for XftFontSet","synthetic":true,"types":[]},{"text":"impl Sync for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl !Sync for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl Sync for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl Sync for FcCharSet","synthetic":true,"types":[]},{"text":"impl Sync for FcPattern","synthetic":true,"types":[]},{"text":"impl Sync for FcEndian","synthetic":true,"types":[]},{"text":"impl Sync for FcResult","synthetic":true,"types":[]},{"text":"impl Sync for XftFontInfo","synthetic":true,"types":[]},{"text":"impl Sync for XftDraw","synthetic":true,"types":[]},{"text":"impl Sync for XftPattern","synthetic":true,"types":[]},{"text":"impl Sync for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl Sync for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XDevice","synthetic":true,"types":[]},{"text":"impl Sync for XDeviceControl","synthetic":true,"types":[]},{"text":"impl !Sync for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XDeviceState","synthetic":true,"types":[]},{"text":"impl !Sync for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl Sync for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl Sync for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl Sync for XFeedbackState","synthetic":true,"types":[]},{"text":"impl Sync for XInputClass","synthetic":true,"types":[]},{"text":"impl Sync for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl Sync for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIModifierState","synthetic":true,"types":[]},{"text":"impl !Sync for XIButtonState","synthetic":true,"types":[]},{"text":"impl !Sync for XIValuatorState","synthetic":true,"types":[]},{"text":"impl !Sync for XIEventMask","synthetic":true,"types":[]},{"text":"impl Sync for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl Sync for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl Sync for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIEvent","synthetic":true,"types":[]},{"text":"impl Sync for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIRawEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl Sync for _AtomRec","synthetic":true,"types":[]},{"text":"impl Sync for _XmuArea","synthetic":true,"types":[]},{"text":"impl Sync for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl Sync for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl Sync for _XmuScanline","synthetic":true,"types":[]},{"text":"impl Sync for _XmuSegment","synthetic":true,"types":[]},{"text":"impl Sync for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl Sync for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl Sync for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl !Sync for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl !Sync for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl !Sync for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl Sync for XRRPanning","synthetic":true,"types":[]},{"text":"impl !Sync for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl !Sync for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl Sync for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl !Sync for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl Sync for XRecordRange","synthetic":true,"types":[]},{"text":"impl Sync for XRecordRange8","synthetic":true,"types":[]},{"text":"impl Sync for XRecordRange16","synthetic":true,"types":[]},{"text":"impl !Sync for XRecordState","synthetic":true,"types":[]},{"text":"impl Sync for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl Sync for _XCircle","synthetic":true,"types":[]},{"text":"impl Sync for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl !Sync for _XFilters","synthetic":true,"types":[]},{"text":"impl !Sync for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl !Sync for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl !Sync for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl Sync for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl Sync for _XIndexValue","synthetic":true,"types":[]},{"text":"impl Sync for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl Sync for _XLineFixed","synthetic":true,"types":[]},{"text":"impl Sync for _XPointDouble","synthetic":true,"types":[]},{"text":"impl Sync for _XPointFixed","synthetic":true,"types":[]},{"text":"impl Sync for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl Sync for XRenderColor","synthetic":true,"types":[]},{"text":"impl Sync for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl Sync for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl Sync for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl Sync for _XSpanFix","synthetic":true,"types":[]},{"text":"impl Sync for _XTrap","synthetic":true,"types":[]},{"text":"impl Sync for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl Sync for _XTriangle","synthetic":true,"types":[]},{"text":"impl Sync for _XTransform","synthetic":true,"types":[]},{"text":"impl Sync for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl Sync for Arg","synthetic":true,"types":[]},{"text":"impl Sync for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl Sync for _TranslationData","synthetic":true,"types":[]},{"text":"impl Sync for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl Sync for _WidgetRec","synthetic":true,"types":[]},{"text":"impl Sync for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl Sync for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl Sync for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl Sync for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl Sync for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl Sync for _XtResource","synthetic":true,"types":[]},{"text":"impl Sync for XtWidgetGeometry","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Sync for OpenError","synthetic":true,"types":[]},{"text":"impl Sync for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl Sync for XcmsColor","synthetic":true,"types":[]},{"text":"impl Sync for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl Sync for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl Sync for _XkbAction","synthetic":true,"types":[]},{"text":"impl Sync for _XkbBounds","synthetic":true,"types":[]},{"text":"impl Sync for _XkbChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbColor","synthetic":true,"types":[]},{"text":"impl Sync for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl Sync for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl Sync for _XkbControls","synthetic":true,"types":[]},{"text":"impl Sync for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl Sync for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl Sync for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl Sync for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl Sync for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl Sync for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl Sync for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl Sync for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbKey","synthetic":true,"types":[]},{"text":"impl Sync for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl Sync for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbMods","synthetic":true,"types":[]},{"text":"impl Sync for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl Sync for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl Sync for _XkbOutline","synthetic":true,"types":[]},{"text":"impl Sync for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl Sync for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl Sync for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl Sync for _XkbProperty","synthetic":true,"types":[]},{"text":"impl Sync for _XkbRow","synthetic":true,"types":[]},{"text":"impl Sync for _XkbSection","synthetic":true,"types":[]},{"text":"impl Sync for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbShape","synthetic":true,"types":[]},{"text":"impl Sync for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl !Sync for XAnyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XButtonEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XColormapEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XErrorEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XExposeEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XGravityEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XKeyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XMapEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XMappingEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XMotionEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XReparentEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbDesc","synthetic":true,"types":[]},{"text":"impl Sync for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl Sync for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl !Sync for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl Sync for XkbEvent","synthetic":true,"types":[]},{"text":"impl !Sync for Depth","synthetic":true,"types":[]},{"text":"impl !Sync for Screen","synthetic":true,"types":[]},{"text":"impl !Sync for ScreenFormat","synthetic":true,"types":[]},{"text":"impl !Sync for Visual","synthetic":true,"types":[]},{"text":"impl Sync for XArc","synthetic":true,"types":[]},{"text":"impl Sync for XChar2b","synthetic":true,"types":[]},{"text":"impl Sync for XCharStruct","synthetic":true,"types":[]},{"text":"impl !Sync for XClassHint","synthetic":true,"types":[]},{"text":"impl Sync for XColor","synthetic":true,"types":[]},{"text":"impl !Sync for XComposeStatus","synthetic":true,"types":[]},{"text":"impl Sync for XExtCodes","synthetic":true,"types":[]},{"text":"impl !Sync for XExtData","synthetic":true,"types":[]},{"text":"impl Sync for XFontProp","synthetic":true,"types":[]},{"text":"impl Sync for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl !Sync for XFontStruct","synthetic":true,"types":[]},{"text":"impl Sync for XGCValues","synthetic":true,"types":[]},{"text":"impl !Sync for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl !Sync for XHostAddress","synthetic":true,"types":[]},{"text":"impl Sync for XIconSize","synthetic":true,"types":[]},{"text":"impl !Sync for XImage","synthetic":true,"types":[]},{"text":"impl Sync for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl Sync for XKeyboardState","synthetic":true,"types":[]},{"text":"impl !Sync for XmbTextItem","synthetic":true,"types":[]},{"text":"impl !Sync for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl !Sync for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl Sync for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl Sync for XPoint","synthetic":true,"types":[]},{"text":"impl Sync for XRectangle","synthetic":true,"types":[]},{"text":"impl !Sync for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl !Sync for XrmValue","synthetic":true,"types":[]},{"text":"impl Sync for XSegment","synthetic":true,"types":[]},{"text":"impl Sync for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl Sync for XSizeHints","synthetic":true,"types":[]},{"text":"impl Sync for XStandardColormap","synthetic":true,"types":[]},{"text":"impl !Sync for XTextItem","synthetic":true,"types":[]},{"text":"impl !Sync for XTextItem16","synthetic":true,"types":[]},{"text":"impl !Sync for XTextProperty","synthetic":true,"types":[]},{"text":"impl Sync for XTimeCoord","synthetic":true,"types":[]},{"text":"impl !Sync for XVisualInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XwcTextItem","synthetic":true,"types":[]},{"text":"impl !Sync for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl Sync for XWindowChanges","synthetic":true,"types":[]},{"text":"impl Sync for XWMHints","synthetic":true,"types":[]},{"text":"impl !Sync for XIMCallback","synthetic":true,"types":[]},{"text":"impl !Sync for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl Sync for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl !Sync for XIMText","synthetic":true,"types":[]},{"text":"impl !Sync for XICCallback","synthetic":true,"types":[]},{"text":"impl Sync for AspectRatio","synthetic":true,"types":[]},{"text":"impl Sync for ClientMessageData","synthetic":true,"types":[]},{"text":"impl Sync for ImageFns","synthetic":true,"types":[]},{"text":"impl !Sync for XEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIMTextString","synthetic":true,"types":[]},{"text":"impl Sync for _XDisplay","synthetic":true,"types":[]},{"text":"impl Sync for xError","synthetic":true,"types":[]},{"text":"impl Sync for xEvent","synthetic":true,"types":[]},{"text":"impl Sync for _XGC","synthetic":true,"types":[]},{"text":"impl Sync for _XIC","synthetic":true,"types":[]},{"text":"impl Sync for _XIM","synthetic":true,"types":[]},{"text":"impl Sync for _XRegion","synthetic":true,"types":[]},{"text":"impl Sync for _XOC","synthetic":true,"types":[]},{"text":"impl Sync for _XOM","synthetic":true,"types":[]},{"text":"impl Sync for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl Sync for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl Sync for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl Sync for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl Sync for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl Sync for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl Sync for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorComment","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorComments","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorFile","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl Sync for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorImage","synthetic":true,"types":[]},{"text":"impl !Sync for _XcursorImages","synthetic":true,"types":[]},{"text":"impl Sync for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl !Sync for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl !Sync for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl Sync for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl !Sync for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XftFont","synthetic":true,"types":[]},{"text":"impl Sync for XftColor","synthetic":true,"types":[]},{"text":"impl Sync for XftCharSpec","synthetic":true,"types":[]},{"text":"impl !Sync for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl !Sync for XftFontSet","synthetic":true,"types":[]},{"text":"impl Sync for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl !Sync for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl Sync for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl Sync for FcCharSet","synthetic":true,"types":[]},{"text":"impl Sync for FcPattern","synthetic":true,"types":[]},{"text":"impl Sync for FcEndian","synthetic":true,"types":[]},{"text":"impl Sync for FcResult","synthetic":true,"types":[]},{"text":"impl Sync for XftFontInfo","synthetic":true,"types":[]},{"text":"impl Sync for XftDraw","synthetic":true,"types":[]},{"text":"impl Sync for XftPattern","synthetic":true,"types":[]},{"text":"impl Sync for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl Sync for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XDevice","synthetic":true,"types":[]},{"text":"impl Sync for XDeviceControl","synthetic":true,"types":[]},{"text":"impl !Sync for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XDeviceState","synthetic":true,"types":[]},{"text":"impl !Sync for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl Sync for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl Sync for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl Sync for XFeedbackState","synthetic":true,"types":[]},{"text":"impl Sync for XInputClass","synthetic":true,"types":[]},{"text":"impl Sync for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl Sync for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIModifierState","synthetic":true,"types":[]},{"text":"impl !Sync for XIButtonState","synthetic":true,"types":[]},{"text":"impl !Sync for XIValuatorState","synthetic":true,"types":[]},{"text":"impl !Sync for XIEventMask","synthetic":true,"types":[]},{"text":"impl Sync for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl Sync for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl Sync for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl Sync for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIEvent","synthetic":true,"types":[]},{"text":"impl Sync for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIRawEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl Sync for _AtomRec","synthetic":true,"types":[]},{"text":"impl Sync for _XmuArea","synthetic":true,"types":[]},{"text":"impl Sync for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl Sync for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl Sync for _XmuScanline","synthetic":true,"types":[]},{"text":"impl Sync for _XmuSegment","synthetic":true,"types":[]},{"text":"impl Sync for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl !Sync for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl Sync for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl !Sync for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl Sync for XRecordRange","synthetic":true,"types":[]},{"text":"impl Sync for XRecordRange8","synthetic":true,"types":[]},{"text":"impl Sync for XRecordRange16","synthetic":true,"types":[]},{"text":"impl !Sync for XRecordState","synthetic":true,"types":[]},{"text":"impl Sync for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl Sync for _XCircle","synthetic":true,"types":[]},{"text":"impl Sync for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl !Sync for _XFilters","synthetic":true,"types":[]},{"text":"impl !Sync for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl !Sync for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl !Sync for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl Sync for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl Sync for _XIndexValue","synthetic":true,"types":[]},{"text":"impl Sync for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl Sync for _XLineFixed","synthetic":true,"types":[]},{"text":"impl Sync for _XPointDouble","synthetic":true,"types":[]},{"text":"impl Sync for _XPointFixed","synthetic":true,"types":[]},{"text":"impl Sync for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl Sync for XRenderColor","synthetic":true,"types":[]},{"text":"impl Sync for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl Sync for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl Sync for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl Sync for _XSpanFix","synthetic":true,"types":[]},{"text":"impl Sync for _XTrap","synthetic":true,"types":[]},{"text":"impl Sync for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl Sync for _XTriangle","synthetic":true,"types":[]},{"text":"impl Sync for _XTransform","synthetic":true,"types":[]},{"text":"impl Sync for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl Sync for Arg","synthetic":true,"types":[]},{"text":"impl Sync for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl Sync for _TranslationData","synthetic":true,"types":[]},{"text":"impl Sync for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl Sync for _WidgetRec","synthetic":true,"types":[]},{"text":"impl Sync for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl Sync for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl Sync for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl Sync for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl Sync for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl Sync for _XtResource","synthetic":true,"types":[]},{"text":"impl Sync for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl Sync for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl Sync for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl !Sync for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl !Sync for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl !Sync for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl Sync for XRRPanning","synthetic":true,"types":[]},{"text":"impl !Sync for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl !Sync for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl !Sync for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Sync for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Sync for Xlib","synthetic":false,"types":[]},{"text":"impl Sync for Xext","synthetic":false,"types":[]},{"text":"impl Sync for Glx","synthetic":false,"types":[]},{"text":"impl Sync for Xcursor","synthetic":false,"types":[]},{"text":"impl Sync for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Sync for Xft","synthetic":false,"types":[]},{"text":"impl Sync for Xlib","synthetic":false,"types":[]},{"text":"impl Sync for XInput","synthetic":false,"types":[]},{"text":"impl Sync for XInput2","synthetic":false,"types":[]},{"text":"impl Sync for Xmu","synthetic":false,"types":[]},{"text":"impl Sync for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Sync for Xrender","synthetic":false,"types":[]},{"text":"impl Sync for Xss","synthetic":false,"types":[]},{"text":"impl Sync for Xt","synthetic":false,"types":[]},{"text":"impl Sync for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Sync for Xlib_xcb","synthetic":false,"types":[]},{"text":"impl Sync for Xrandr","synthetic":false,"types":[]},{"text":"impl Sync for Xrandr_2_2_0","synthetic":false,"types":[]}];
implementors["xattr"] = [{"text":"impl Sync for UnsupportedPlatformError","synthetic":true,"types":[]},{"text":"impl Sync for XAttrs","synthetic":true,"types":[]}];
implementors["xcursor"] = [{"text":"impl Sync for CursorTheme","synthetic":true,"types":[]},{"text":"impl Sync for Image","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl Sync for BaseDirectories","synthetic":true,"types":[]},{"text":"impl Sync for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl Sync for FileFindIterator","synthetic":true,"types":[]}];
implementors["xkb"] = [{"text":"impl Sync for Keycode","synthetic":true,"types":[]},{"text":"impl Sync for LayoutIndex","synthetic":true,"types":[]},{"text":"impl Sync for LayoutMask","synthetic":true,"types":[]},{"text":"impl Sync for LevelIndex","synthetic":true,"types":[]},{"text":"impl Sync for ModIndex","synthetic":true,"types":[]},{"text":"impl Sync for ModMask","synthetic":true,"types":[]},{"text":"impl Sync for LedIndex","synthetic":true,"types":[]},{"text":"impl Sync for LedMask","synthetic":true,"types":[]},{"text":"impl Sync for Keysym","synthetic":true,"types":[]},{"text":"impl !Sync for Context","synthetic":true,"types":[]},{"text":"impl !Sync for Keymap","synthetic":true,"types":[]},{"text":"impl !Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for LogLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Include&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Log&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Mods&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Layouts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Leds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Serialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Update&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Mods&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Layouts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Leds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Consumed","synthetic":true,"types":[]},{"text":"impl Sync for Components","synthetic":true,"types":[]},{"text":"impl Sync for Direction","synthetic":true,"types":[]},{"text":"impl !Sync for Table","synthetic":true,"types":[]},{"text":"impl Sync for Status","synthetic":true,"types":[]},{"text":"impl Sync for Result","synthetic":true,"types":[]},{"text":"impl Sync for Format","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl !Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]}];
implementors["xkbcommon_sys"] = [{"text":"impl !Sync for xkb_rule_names","synthetic":true,"types":[]},{"text":"impl Sync for xkb_compose_format","synthetic":true,"types":[]},{"text":"impl Sync for xkb_compose_status","synthetic":true,"types":[]},{"text":"impl Sync for xkb_compose_feed_result","synthetic":true,"types":[]},{"text":"impl Sync for xkb_keymap_format","synthetic":true,"types":[]},{"text":"impl Sync for xkb_log_level","synthetic":true,"types":[]},{"text":"impl Sync for xkb_key_direction","synthetic":true,"types":[]},{"text":"impl Sync for xkb_consumed_mode","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl Sync for ParserConfig","synthetic":true,"types":[]},{"text":"impl Sync for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Sync for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Sync for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl Sync for TextPosition","synthetic":true,"types":[]},{"text":"impl Sync for XmlVersion","synthetic":true,"types":[]},{"text":"impl Sync for Namespace","synthetic":true,"types":[]},{"text":"impl Sync for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for EventReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Events&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for XmlEvent","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()